var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AddressModel.html",[0,0.18,1,1.543]],["body/classes/AddressModel.html",[0,0.195,1,2.223,2,0.967,3,0.188,4,0.188,5,0.145,6,3.541,7,0.35,8,1.174,9,1.869,10,3.985,11,1.32,12,3.985,13,3.472,14,0.638,15,0.017,16,1.295,17,1.684,18,4.248,19,4.713,20,3.861,21,1.491,22,0.812,23,4.107,24,4.107,25,4.107,26,4.107,27,0.278,28,2.772,29,1.209,30,1.106,31,4.791,32,0.768,33,0.188,34,3.479,35,0.009,36,0.012,37,0.009]],["title/controllers/AppController.html",[38,1.402,39,2.667]],["body/controllers/AppController.html",[0,0.24,3,0.231,4,0.231,5,0.179,7,0.431,15,0.017,16,1.113,17,1.302,22,0.628,27,0.345,32,0.946,33,0.231,35,0.011,36,0.014,37,0.011,38,2.308,39,4.392,40,1.87,41,4.361,42,2.203,43,5.454,44,3.056,45,3.772,46,5.058,47,1.785,48,1.087,49,4.092,50,4.361,51,2.861,52,2.861,53,1.557,54,3.284,55,1.557,56,5.058]],["title/modules/AppModule.html",[57,1.067,58,2.667]],["body/modules/AppModule.html",[0,0.13,1,2.496,3,0.125,4,0.125,5,0.097,11,0.589,15,0.017,16,0.489,27,0.387,33,0.125,35,0.006,36,0.009,37,0.006,39,3.458,40,1.516,48,0.589,49,3.706,50,2.362,52,1.55,53,0.843,57,1.383,58,5.381,59,1.172,60,1.172,61,1.375,62,1.375,63,1.234,64,2.467,65,1.375,66,2.362,67,2.362,68,2.362,69,3.982,70,3.982,71,3.469,72,3.982,73,3.706,74,3.982,75,3.262,76,3.469,77,3.262,78,3.469,79,2.912,80,2.058,81,1.375,82,1.301,83,2.74,84,3.192,85,3.192,86,3.192,87,3.192,88,2.32,89,1.847,90,1.656,91,1.656,92,1.234,93,2.113,94,2.74,95,2.74,96,2.74,97,0.737,98,1.375,99,1.847,100,2.362,101,1.669,102,2.362,103,2.74,104,2.74,105,2.362,106,2.74,107,2.113,108,2.74,109,2.74,110,1.927,111,2.362,112,4.705,113,2.362,114,1.947,115,1.656,116,2.74,117,2.113,118,2.74,119,2.74,120,2.74,121,2.78,122,2.74,123,3.536,124,2.362,125,2.74,126,2.74,127,2.74,128,1.927,129,2.362,130,2.74,131,2.113,132,2.362,133,1.779,134,2.113,135,2.74,136,2.74,137,2.74,138,2.74,139,2.362,140,2.74,141,2.74,142,2.74,143,2.74,144,2.74,145,2.74,146,2.74,147,2.362,148,2.74]],["title/injectables/AppService.html",[49,2.291,149,1.167]],["body/injectables/AppService.html",[0,0.238,3,0.229,4,0.229,5,0.178,7,0.428,9,1.293,14,0.49,15,0.017,16,1.109,22,0.772,27,0.317,33,0.229,35,0.011,36,0.014,37,0.011,42,2.193,43,5.441,47,1.773,48,1.08,49,3.756,52,2.841,55,1.546,89,3.176,90,3.035,134,4.795,149,1.913,150,2.385,151,4.331,152,2.521,153,5.023,154,5.023,155,1.948,156,1.032,157,5.023,158,5.023]],["title/classes/Article.html",[0,0.18,101,1.543]],["body/classes/Article.html",[0,0.271,2,1.037,3,0.201,4,0.201,5,0.156,7,0.375,8,1.23,11,1.23,14,0.656,15,0.017,16,1.133,17,1.472,22,0.71,27,0.292,28,2.328,29,1.296,30,1.709,32,0.824,33,0.261,34,2.342,35,0.01,36,0.013,37,0.01,101,2.906,156,1.493,159,3.397,160,1.875,161,4.93,162,4.93,163,4.93,164,3.797,165,4.404,166,4.411,167,4.404,168,3.235,169,4.404,170,2.328,171,2.446,172,2.21,173,2.328,174,2.342,175,3.098,176,3.098]],["title/classes/ArticleFillableFields.html",[0,0.18,176,2.667]],["body/classes/ArticleFillableFields.html",[0,0.284,2,1.117,3,0.217,4,0.217,5,0.168,7,0.404,8,1.29,11,1.021,14,0.585,15,0.017,16,1.173,22,0.59,27,0.306,28,2.442,29,1.397,30,1.771,32,0.888,33,0.274,34,2.524,35,0.011,36,0.013,37,0.011,101,2.678,156,1.495,159,3.661,160,1.615,162,4.092,163,4.092,166,3.661,168,2.685,170,2.442,171,2.567,172,2.382,173,2.442,174,2.524,175,3.339,176,4.221,177,4.746]],["title/controllers/ArticlesController.html",[38,1.402,84,2.462]],["body/controllers/ArticlesController.html",[0,0.193,3,0.186,4,0.186,5,0.144,7,0.346,9,1.046,14,0.662,15,0.017,17,1.396,22,0.673,27,0.346,32,0.76,33,0.186,35,0.009,36,0.012,37,0.009,38,1.502,40,1.502,42,1.913,44,2.454,47,1.913,48,0.873,51,3.067,52,2.298,53,1.25,55,1.669,76,3.452,84,3.521,101,2.484,155,1.575,156,0.834,172,3.063,173,1.653,178,3.502,179,2.454,180,5.615,181,2.484,182,5.422,183,5.422,184,4.062,185,3.935,186,2.408,187,4.062,188,3.464,189,4.062,190,4.533,191,3.502,192,4.675,193,4.062,194,4.062,195,2.638,196,3.814,197,2.454,198,2.858,199,2.454,200,3.502,201,3.502,202,3.502,203,3.133,204,4.062,205,4.062,206,3.133,207,3.276,208,4.062,209,4.062,210,4.062]],["title/injectables/ArticlesService.html",[76,2.144,149,1.167]],["body/injectables/ArticlesService.html",[0,0.181,3,0.174,4,0.174,5,0.135,7,0.324,9,1.52,14,0.576,15,0.018,16,1.131,22,0.788,27,0.338,29,1.121,33,0.174,35,0.008,36,0.012,37,0.008,42,1.832,47,2.084,48,0.819,53,1.172,55,1.818,76,2.937,92,1.715,101,2.404,149,1.598,150,1.808,152,2.605,155,2.29,156,1.213,160,1.025,180,5.469,181,2.788,188,3.728,190,4.31,200,3.283,201,3.283,203,2.938,211,3.283,212,3.371,213,5.191,214,3.808,215,4.463,216,3.808,217,5.191,218,5.191,219,3.808,220,3.808,221,5.191,222,3.808,223,2.679,224,3.808,225,1.808,226,1.55,227,1.226,228,3.808,229,3.808,230,3.808,231,3.808,232,2.938,233,3.808,234,1.911,235,3.808]],["title/controllers/AuthController.html",[38,1.402,236,2.667]],["body/controllers/AuthController.html",[0,0.164,3,0.158,4,0.158,5,0.123,7,0.295,9,1.252,14,0.649,15,0.017,17,1.252,21,0.712,22,0.604,27,0.348,32,0.648,33,0.158,35,0.008,36,0.011,37,0.008,38,1.281,40,1.281,42,1.716,45,3.682,47,1.716,48,0.745,51,2.751,53,1.497,55,1.497,79,2.31,97,1.309,110,2.438,121,1.96,152,1.739,155,1.886,156,0.999,173,1.98,179,2.094,181,2.708,185,3.682,186,1.798,188,3.24,195,2.251,196,2.438,197,2.094,198,3.422,199,2.094,207,2.939,225,2.31,226,1.98,227,1.116,234,3.058,236,3.422,237,2.988,238,2.988,239,5.253,240,4.864,241,3.466,242,3.682,243,3.466,244,4.864,245,3.466,246,3.422,247,3.466,248,4.864,249,3.466,250,4.286,251,3.466,252,4.193,253,3.466,254,3.752,255,3.752,256,3.466,257,3.752,258,2.751,259,3.466,260,2.438,261,3.179,262,2.673,263,2.673,264,3.466,265,3.953,266,3.466,267,3.466,268,3.466,269,3.466,270,3.466,271,2.438,272,3.466,273,2.438,274,3.466,275,3.466,276,4.864,277,3.466,278,3.466,279,3.466,280,3.466,281,3.466]],["title/modules/AuthModule.html",[57,1.067,69,2.462]],["body/modules/AuthModule.html",[0,0.19,3,0.183,4,0.183,5,0.142,15,0.017,27,0.373,33,0.183,35,0.009,36,0.012,37,0.009,40,1.986,48,0.861,55,1.233,57,1.706,59,1.714,60,1.714,61,2.011,62,2.011,63,1.804,64,3.042,65,2.696,69,4.873,71,4.017,75,3.698,80,2.696,81,2.011,82,1.902,88,3.429,89,2.916,90,2.421,93,3.09,107,3.09,181,1.631,236,4.264,261,3.933,262,3.09,282,3.454,283,4.006,284,3.454,285,4.515,286,4.006,287,4.006,288,3.09,289,4.006,290,2.818,291,4.006,292,4.006,293,5.372,294,3.489,295,4.006,296,3.454,297,4.006,298,3.454,299,4.006,300,3.09,301,4.006,302,3.454]],["title/injectables/AuthService.html",[149,1.167,261,2.144]],["body/injectables/AuthService.html",[0,0.179,3,0.172,4,0.172,5,0.133,7,0.321,9,1.512,14,0.573,15,0.017,22,0.73,27,0.348,33,0.172,35,0.008,36,0.011,37,0.008,42,1.819,47,1.819,48,0.81,53,1.808,55,1.587,79,2.999,89,3.148,90,2.278,97,1.943,98,1.892,110,2.652,149,1.587,150,1.79,152,2.587,155,2.278,156,1.206,160,1.015,181,2.779,188,2.742,225,2.79,226,2.098,227,1.214,234,1.892,242,3.817,261,2.916,263,2.907,271,4.133,288,2.907,300,2.907,303,3.25,304,5.155,305,5.155,306,3.769,307,6.829,308,3.769,309,5.155,310,3.769,311,3.769,312,3.769,313,2.907,314,3.769,315,3.25,316,3.769,317,3.769,318,3.25,319,3.769,320,3.769,321,3.769,322,2.948,323,3.769,324,1.892,325,3.769,326,2.132]],["title/controllers/CallController.html",[38,1.402,327,2.667]],["body/controllers/CallController.html",[0,0.203,3,0.195,4,0.195,5,0.151,7,0.587,15,0.017,16,1,17,1.611,22,0.777,27,0.286,32,0.8,33,0.195,35,0.009,36,0.012,37,0.009,38,1.581,40,1.581,42,1.979,44,2.583,45,4.016,47,2.209,48,0.919,51,2.418,54,4.065,55,1.316,179,2.583,181,2.882,185,4.016,186,2.457,188,3.535,197,2.583,199,2.583,207,3.389,246,3.008,260,3.008,273,3.008,327,3.946,328,3.686,329,4.836,330,6.645,331,6.645,332,4.275,333,4.275,334,5.609,335,4.275,336,4.275,337,4.275,338,4.275,339,4.275,340,4.275,341,4.275]],["title/modules/CallModule.html",[57,1.067,70,2.462]],["body/modules/CallModule.html",[0,0.235,3,0.226,4,0.226,5,0.175,15,0.017,27,0.342,33,0.226,35,0.011,36,0.014,37,0.011,40,2.279,48,1.065,57,1.888,59,2.12,60,2.12,61,2.487,62,2.487,63,2.231,64,3.367,65,2.487,70,4.78,80,3.093,81,2.487,82,2.353,327,4.72,342,4.272,343,4.272,344,4.78,345,4.955,346,4.955,347,4.955]],["title/injectables/CallService.html",[149,1.167,344,2.462]],["body/injectables/CallService.html",[0,0.272,3,0.262,4,0.262,5,0.203,15,0.017,27,0.292,33,0.262,35,0.013,36,0.015,37,0.013,48,1.232,149,2.071,150,2.721,344,4.37,348,4.941]],["title/modules/ConfigModule.html",[57,1.067,71,2.144]],["body/modules/ConfigModule.html",[0,0.237,3,0.228,4,0.228,5,0.177,15,0.017,27,0.316,33,0.228,35,0.011,36,0.014,37,0.011,48,1.073,57,1.894,59,2.134,60,2.134,61,2.504,62,2.504,63,2.247,64,3.106,65,3.377,71,4.092,80,3.106,81,2.504,82,2.369,89,3.401,227,1.606,349,4.301,350,4.301,351,4.989,352,4.989,353,4.989,354,4.989,355,4.989]],["title/classes/ConfigService.html",[0,0.18,89,1.707]],["body/classes/ConfigService.html",[0,0.109,2,0.539,3,0.105,4,0.105,5,0.081,7,0.195,8,0.769,9,1.132,14,0.485,15,0.017,16,1.019,21,0.47,22,0.892,27,0.224,33,0.105,35,0.005,36,0.008,37,0.005,42,1.262,47,1.754,53,1.354,55,2.181,89,1.61,131,1.766,132,3.792,152,1.149,155,1.705,156,0.903,225,2.713,226,2.023,227,0.737,324,1.149,356,1.974,357,4.399,358,3.575,359,3.575,360,4.399,361,4.399,362,4.399,363,4.399,364,4.399,365,4.399,366,4.399,367,4.399,368,4.399,369,4.399,370,4.399,371,4.399,372,4.399,373,4.399,374,3.575,375,3.575,376,2.29,377,5.714,378,3.575,379,2.29,380,3.575,381,3.575,382,2.29,383,3.575,384,2.29,385,3.575,386,3.575,387,2.758,388,2.758,389,3.575,390,3.575,391,3.575,392,2.758,393,3.575,394,1.322,395,3.575,396,4.399,397,2.29,398,2.29,399,3.575,400,3.575,401,3.575,402,3.083,403,2.29,404,2.29,405,2.29,406,2.29,407,2.29,408,2.29,409,2.29,410,2.29,411,2.29,412,2.29,413,2.29,414,2.29,415,2.29,416,2.29,417,2.29,418,2.29,419,2.29,420,2.29,421,2.29,422,2.29,423,2.29,424,2.29,425,2.29,426,2.29,427,2.29,428,2.29,429,2.29,430,2.29,431,2.29,432,1.974,433,2.29,434,2.29,435,3.083,436,2.29,437,2.29,438,2.29,439,6.963,440,4.399,441,1.974,442,3.083,443,3.083,444,2.29,445,2.29,446,2.29,447,2.29,448,2.29,449,2.29,450,2.29,451,2.29,452,2.29,453,2.29,454,3.575,455,2.29,456,3.575,457,2.29,458,2.29,459,2.29,460,3.575,461,2.29,462,2.29,463,2.29,464,2.29,465,2.29,466,2.29,467,2.29,468,1.974,469,1.766,470,2.29,471,1.974,472,2.29,473,2.29,474,1.974,475,2.29,476,2.29,477,1.974,478,2.29,479,2.022,480,2.29,481,2.29,482,2.29,483,2.29,484,1.611,485,1.974,486,3.575,487,2.29,488,2.29,489,3.575,490,2.29,491,3.575,492,2.29,493,2.29,494,4.399,495,1.384,496,3.575,497,2.29,498,2.29,499,2.29]],["title/classes/CreateArticleDto.html",[0,0.18,190,2.462]],["body/classes/CreateArticleDto.html",[0,0.291,2,1.159,3,0.225,4,0.225,5,0.174,7,0.419,8,1.32,14,0.48,15,0.017,16,1.095,17,1.267,21,1.261,22,0.611,27,0.313,30,1.652,32,0.921,33,0.225,35,0.011,36,0.014,37,0.011,53,2.059,101,2.498,156,1.48,166,4.734,173,2.498,175,3.463,190,3.986,479,2.784,500,5.292,501,4.243,502,1.908,503,4.922,504,4.922,505,6.138,506,3.196]],["title/classes/CreateRequestArticleDto.html",[0,0.18,507,2.667]],["body/classes/CreateRequestArticleDto.html",[0,0.258,1,2.211,2,0.959,3,0.186,4,0.186,5,0.144,7,0.347,8,1.168,11,1.502,14,0.696,15,0.017,16,1.09,17,1.398,21,1.395,22,0.675,27,0.277,30,1.92,32,0.762,33,0.248,35,0.009,36,0.012,37,0.009,53,2.281,101,2.654,160,1.462,172,2.726,173,2.764,174,3.468,479,3.457,502,2.106,507,4.587,508,4.714,509,2.645,510,4.3,511,3.693,512,4.683,513,3.512,514,4.683,515,2.37,516,3.512,517,2.166,518,2.461,519,1.834,520,2.866,521,2.866,522,2.866]],["title/modules/DatabaseModule.html",[57,1.067,72,2.462]],["body/modules/DatabaseModule.html",[0,0.186,3,0.18,4,0.18,5,0.188,14,0.383,15,0.018,21,0.807,27,0.375,33,0.18,35,0.009,36,0.012,37,0.009,48,0.845,57,1.493,59,1.682,71,3,72,3.444,88,3,89,2.703,90,2.375,91,2.375,92,1.77,93,3.032,97,1.616,98,1.973,99,2.703,100,3.389,101,2.443,102,3.389,112,4.573,114,2.851,115,2.375,123,3.389,131,3.032,134,3.032,139,3.389,296,3.389,302,3.389,322,1.973,515,1.524,523,3.931,524,5.304,525,3.193,526,3.931,527,3.396,528,1.973,529,3.931,530,3.931,531,3.389,532,3.931,533,3.931,534,3.389,535,3.931,536,3.389,537,3.931,538,3.931,539,3.931,540,5.304,541,3.931,542,3.389,543,3.931,544,3.931,545,3.032,546,3.931,547,3.931,548,3.931,549,3.931,550,3.931,551,5.304,552,1.77,553,3.931,554,3.931,555,3.931]],["title/interfaces/IRequestUser.html",[556,2.462,557,2.667]],["body/interfaces/IRequestUser.html",[3,0.23,4,0.23,5,0.178,7,0.429,8,1.339,9,1.604,14,0.492,15,0.017,27,0.318,33,0.285,35,0.011,36,0.014,37,0.011,48,1.084,55,1.551,97,2.037,98,2.53,186,2.303,226,2.052,519,2.805,556,3.273,557,4.756,558,3.888,559,3.888,560,5.04,561,3.046,562,4.346,563,4.346,564,4.346]],["title/injectables/JwtAuthGuard.html",[149,1.167,565,2.291]],["body/injectables/JwtAuthGuard.html",[0,0.219,3,0.269,4,0.211,5,0.163,15,0.018,27,0.3,33,0.211,35,0.01,36,0.013,37,0.01,48,0.992,55,1.813,97,1.747,149,1.813,150,2.19,227,1.485,290,3.245,313,4.544,324,2.315,329,3.976,484,3.245,519,2.077,545,3.557,565,3.56,566,3.976,567,3.976,568,5.891,569,4.612,570,4.612,571,4.612,572,4.612,573,3.976,574,4.612,575,4.612,576,3.557,577,4.612,578,4.612,579,3.976,580,4.612,581,4.612,582,4.612,583,4.612,584,5.891]],["title/interfaces/JwtPayload.html",[556,2.462,585,2.667]],["body/interfaces/JwtPayload.html",[3,0.235,4,0.235,5,0.182,7,0.438,8,1.357,9,1.831,11,1.597,14,0.665,15,0.017,16,1.217,33,0.235,35,0.011,36,0.014,37,0.011,556,3.342,558,3.97,585,4.439,586,4.437,587,6.133,588,6.133,589,7.114]],["title/injectables/JwtStrategy.html",[149,1.167,285,2.462]],["body/injectables/JwtStrategy.html",[0,0.194,3,0.187,4,0.187,5,0.145,7,0.349,9,1.404,14,0.532,15,0.018,21,1.12,22,0.677,27,0.357,33,0.187,35,0.009,36,0.012,37,0.009,42,1.924,47,1.445,48,0.881,53,1.678,89,3.216,90,2.475,149,1.678,150,1.945,152,2.736,155,2.114,156,1.12,181,2.495,225,2.589,226,1.667,242,2.475,257,3.159,261,3.958,262,3.159,263,3.159,285,3.541,290,2.882,294,2.66,298,3.531,313,3.159,519,1.844,585,2.882,587,4.701,588,4.701,590,3.531,591,6.129,592,4.096,593,4.096,594,4.096,595,4.096,596,4.096,597,4.096,598,4.096,599,3.159,600,4.096,601,4.096,602,4.096,603,4.096,604,4.096,605,4.096,606,4.096,607,4.096]],["title/classes/LoginPayload.html",[0,0.18,242,2.291]],["body/classes/LoginPayload.html",[0,0.292,2,1.166,3,0.226,4,0.226,5,0.175,7,0.422,8,1.325,14,0.601,15,0.017,16,1.252,17,1.587,21,1.266,22,0.766,27,0.314,30,1.334,32,0.927,33,0.226,35,0.011,36,0.014,37,0.011,242,3.725,322,3.367,326,3.795,502,2.722,506,3.218,608,4.272,609,4.955,610,4.955,611,4.272,612,4.955,613,5.314,614,4.754,615,4.272,616,4.272]],["title/classes/PasswordTransformer.html",[0,0.18,617,2.291]],["body/classes/PasswordTransformer.html",[0,0.223,2,1.106,3,0.215,4,0.215,5,0.166,7,0.4,9,1.535,14,0.582,15,0.017,16,1.316,22,0.741,27,0.334,29,1.383,33,0.215,35,0.01,36,0.013,37,0.01,42,2.104,47,2.104,55,1.835,75,2.5,129,5.141,155,2.312,156,1.225,495,3.957,617,3.603,618,4.053,619,6.549,620,5.963,621,4.701,622,5.963,623,4.701,624,5.141,625,4.701,626,4.701,627,4.701]],["title/classes/RegisterPayload.html",[0,0.18,250,2.667]],["body/classes/RegisterPayload.html",[0,0.257,2,0.956,3,0.186,4,0.186,5,0.144,7,0.346,8,1.166,9,1.396,14,0.662,15,0.017,16,1.321,17,1.747,21,1.394,22,0.843,27,0.311,30,1.093,32,0.76,33,0.186,35,0.009,36,0.012,37,0.009,250,3.814,322,3.063,326,3.452,394,2.005,502,2.872,506,2.638,552,2.442,576,4.182,611,3.502,613,4.675,614,5.023,615,3.502,616,3.502,628,3.502,629,3.963,630,3.963,631,4.229,632,4.062,633,4.062,634,4.675,635,4.062,636,4.062,637,4.062,638,2.442,639,3.963,640,1.829,641,4.062,642,4.062,643,4.062,644,2.858]],["title/classes/RequestArticle.html",[0,0.18,525,2.016]],["body/classes/RequestArticle.html",[0,0.257,2,0.956,3,0.186,4,0.186,5,0.144,7,0.346,8,1.166,11,1.532,14,0.681,15,0.017,17,1.747,21,1.253,22,0.843,27,0.311,28,2.484,29,1.195,30,1.093,32,0.76,33,0.248,35,0.009,36,0.012,37,0.009,99,2.933,133,3.521,156,0.834,160,1.643,170,2.207,171,2.611,186,2.408,502,2.707,510,4.294,511,3.688,525,3.246,528,2.038,552,2.442,640,1.829,645,3.133,646,4.294,647,4.675,648,4.062,649,4.062,650,4.062,651,4.062,652,4.062,653,3.502,654,4.062,655,4.182,656,3.502,657,3.133,658,2.298,659,2.858]],["title/classes/RequestArticleStatusDto.html",[0,0.18,660,2.291]],["body/classes/RequestArticleStatusDto.html",[0,0.281,2,1.096,3,0.213,4,0.213,5,0.165,7,0.396,8,1.274,11,1.274,14,0.578,15,0.017,16,0.83,17,1.199,21,1.339,22,0.578,27,0.302,30,1.847,32,0.871,33,0.271,35,0.01,36,0.013,37,0.01,53,1.433,133,3.849,173,1.895,186,1.721,394,1.721,479,3.688,502,1.805,509,3.023,515,2.661,552,2.097,638,2.097,646,4.587,660,3.581,661,4.572,662,4.656,663,3.581,664,2.476,665,3.352,666,2.813,667,4.014,668,2.813,669,3.023]],["title/controllers/RequestController.html",[38,1.402,86,2.462]],["body/controllers/RequestController.html",[0,0.095,3,0.091,4,0.091,5,0.071,7,0.17,9,1.298,11,1.394,13,3.046,14,0.659,15,0.017,16,0.96,17,1.298,21,0.945,22,0.626,27,0.318,32,0.373,33,0.091,35,0.004,36,0.007,37,0.004,38,0.738,40,0.738,42,1.132,44,1.206,45,3.556,47,1.779,48,0.429,51,1.129,52,1.129,53,0.987,54,2.989,55,1.552,77,2.138,79,1.523,86,2.083,97,1.82,98,1.002,99,2.425,110,1.405,121,1.129,155,1.955,156,1.162,170,2.471,172,1.61,173,2.052,179,1.206,181,2.752,185,3.254,186,2.436,188,3.314,195,2.989,196,2.256,197,1.206,198,2.256,199,1.206,206,1.54,207,2.429,225,0.948,226,2.052,227,1.033,234,3.127,246,1.405,258,1.814,260,1.405,271,1.405,273,1.405,324,1.002,388,2.474,392,2.474,479,2.604,484,2.256,511,2.782,515,0.774,518,3.848,528,1.002,552,2.073,561,3.047,565,1.206,660,2.782,668,3.254,670,1.721,671,2.828,672,4.02,673,4.02,674,4.02,675,4.02,676,1.996,677,1.996,678,4.642,679,3.207,680,1.996,681,3.207,682,3.207,683,3.207,684,3.207,685,4.02,686,1.996,687,1.996,688,1.996,689,4.02,690,3.101,691,3.497,692,1.996,693,3.497,694,1.996,695,3.127,696,3.207,697,1.996,698,1.996,699,2.256,700,1.996,701,4.604,702,1.996,703,1.996,704,1.996,705,1.996,706,1.996,707,1.405,708,1.54,709,1.54,710,1.721,711,1.54,712,2.474,713,1.54,714,4.02,715,1.721,716,1.721,717,2.256,718,1.54,719,1.54,720,1.54,721,1.721,722,1.996,723,1.54,724,1.996,725,1.721,726,1.996,727,1.996,728,1.996,729,1.996,730,1.996,731,1.996,732,1.996,733,1.996,734,4.604,735,4.604,736,1.996,737,3.101,738,3.466,739,1.721,740,1.721,741,1.54,742,1.996,743,1.996,744,1.996,745,1.996,746,1.996]],["title/classes/RequestEntity.html",[0,0.18,99,1.707]],["body/classes/RequestEntity.html",[0,0.223,1,2.524,2,0.599,3,0.116,4,0.116,5,0.09,7,0.217,8,0.834,9,1.844,10,2.518,11,1.333,12,2.518,13,2.194,14,0.708,15,0.017,16,1.256,17,1.813,18,3.413,19,3.413,20,3.171,21,1.414,22,0.875,27,0.316,28,2.427,29,0.749,30,1.669,31,1.79,32,0.476,33,0.177,34,1.353,35,0.006,36,0.009,37,0.006,97,1.415,98,1.277,99,1.746,156,0.797,160,1.265,164,2.194,168,2.194,170,1.579,171,1.659,172,2.359,174,2.063,186,1.434,394,1.943,517,1.353,519,1.746,520,3.306,521,3.306,522,3.306,525,3.171,638,2.878,640,2.116,658,1.439,659,3.306,665,2.973,747,1.963,748,3.306,749,4.878,750,4.532,751,3.878,752,2.545,753,4.194,754,2.194,755,2.729,756,2.545,757,2.518,758,2.194,759,2.545,760,2.545,761,2.545,762,2.545,763,2.545,764,2.545,765,4.052,766,2.545,767,3.344,768,2.545,769,2.545,770,2.545,771,2.545,772,2.194,773,3.625,774,2.545,775,3.698,776,1.79,777,1.79,778,1.79,779,1.79,780,2.729,781,2.729,782,1.963,783,2.518,784,1.538,785,2.194,786,2.194,787,3.344,788,2.194,789,2.194]],["title/classes/RequestFillableFields.html",[0,0.18,658,2.144]],["body/classes/RequestFillableFields.html",[0,0.282,1,2.128,2,0.906,3,0.176,4,0.176,5,0.136,7,0.328,8,1.124,11,1.37,14,0.621,15,0.017,16,1.188,20,2.047,21,1.308,22,0.478,27,0.358,28,2.797,29,1.133,30,1.892,31,2.707,32,0.72,33,0.239,34,2.047,35,0.009,36,0.012,37,0.009,97,1.598,98,1.931,99,1.733,156,1.074,160,1.036,168,2.177,170,2.128,171,2.237,172,1.931,174,2.781,186,1.933,394,1.933,517,2.047,519,1.733,520,2.707,521,2.707,522,2.707,525,3.543,638,2.869,658,2.957,659,2.707,665,2.957,747,2.968,748,2.707,749,4.508,750,5.493,753,4.178,755,2.707,757,2.499,765,4.508,767,3.318,773,4.033,780,3.678,781,3.678,782,2.968,783,3.395,784,2.325,785,3.318,786,3.318,787,4.508,788,3.318,789,3.318,790,3.848]],["title/classes/RequestFillableFields-1.html",[0,0.15,658,1.79,791,2.729]],["body/classes/RequestFillableFields-1.html",[0,0.282,2,1.103,3,0.214,4,0.214,5,0.166,7,0.399,8,1.279,11,1.527,14,0.58,15,0.017,21,1.343,22,0.582,27,0.333,28,2.662,29,1.379,30,1.261,32,0.877,33,0.272,35,0.01,36,0.013,37,0.01,99,2.945,133,3.043,156,0.962,160,1.261,170,2.422,171,2.546,186,2.2,502,2.536,510,3.296,511,2.831,525,3.165,528,2.352,552,2.11,645,3.614,646,3.296,655,4.59,656,4.04,657,3.614,658,3.366,659,4.601,792,4.686]],["title/classes/RequestFormDto.html",[0,0.18,518,2.291]],["body/classes/RequestFormDto.html",[0,0.22,1,2.726,2,0.762,3,0.148,4,0.148,5,0.115,7,0.275,8,0.996,9,1.893,10,3.008,11,1.344,12,3.008,13,2.621,14,0.706,15,0.017,16,1.262,17,1.764,18,3.837,19,3.837,20,3.142,21,1.407,22,0.851,27,0.236,30,1.905,32,0.605,33,0.212,35,0.007,36,0.01,37,0.007,53,2.263,101,1.886,160,0.871,172,3.138,173,2.405,174,2.464,479,3.061,502,1.255,507,4.156,508,4.823,509,2.101,510,2.277,511,1.955,512,2.79,514,2.79,515,2.098,517,1.721,518,2.8,519,2.086,520,3.807,521,3.807,522,3.807,640,1.457,775,4.156,776,2.277,777,2.277,778,2.277,779,2.277,793,3.236,794,3.236,795,3.236,796,3.236]],["title/modules/RequestModule.html",[57,1.067,73,2.291]],["body/modules/RequestModule.html",[0,0.215,3,0.207,4,0.207,5,0.161,15,0.016,27,0.367,33,0.207,35,0.01,36,0.013,37,0.01,40,2.156,48,0.976,57,1.813,59,1.942,60,1.942,61,2.279,62,2.279,63,2.045,64,3.234,65,3.234,73,4.526,75,3.828,77,4.066,80,2.927,81,2.279,82,2.156,86,4.184,88,3.299,91,2.744,92,2.045,99,2.045,107,3.502,528,2.279,715,3.914,797,3.914,798,4.54,799,3.914,800,4.54,801,4.54,802,4.54,803,4.54]],["title/injectables/RequestService.html",[77,2.016,149,1.167]],["body/injectables/RequestService.html",[0,0.104,3,0.1,4,0.1,5,0.077,7,0.186,8,0.742,9,1.565,11,1.483,13,2.984,14,0.593,15,0.018,16,1,21,0.877,22,0.777,27,0.31,29,0.644,33,0.1,35,0.005,36,0.008,37,0.005,42,1.217,47,2.07,48,0.47,53,0.673,55,1.725,77,1.834,92,0.985,97,1.305,99,2.991,101,1.738,121,2.415,149,1.062,150,1.039,152,1.731,155,2.357,156,1.249,160,0.928,172,1.731,181,2.881,186,2.313,212,2.24,215,3.41,223,1.539,225,2.786,226,2.388,227,1.805,234,2.813,258,2.742,324,1.731,394,0.809,495,1.322,511,2.58,515,0.848,518,3.87,525,1.834,528,1.098,552,0.985,640,0.985,657,1.687,660,2.929,671,2.426,678,4.179,693,2.24,699,3.711,707,1.539,716,1.886,717,2.426,721,1.886,725,2.974,740,1.886,741,2.66,782,1.687,804,1.886,805,3.449,806,3.449,807,2.426,808,3.449,809,2.187,810,3.449,811,3.449,812,2.974,813,2.187,814,3.449,815,2.187,816,2.66,817,2.187,818,3.449,819,2.187,820,3.449,821,2.187,822,1.886,823,3.449,824,2.187,825,3.449,826,4.27,827,2.187,828,1.687,829,1.42,830,1.687,831,2.187,832,2.187,833,2.187,834,2.974,835,3.449,836,2.187,837,2.426,838,4.27,839,2.187,840,2.187,841,2.187,842,2.187,843,2.187,844,2.187,845,2.187,846,2.187,847,2.187,848,2.187,849,2.187,850,2.187,851,2.187,852,2.187,853,2.187,854,2.187,855,2.187,856,2.187,857,2.187,858,2.187,859,2.187,860,2.187,861,2.187,862,2.974,863,2.187,864,2.187,865,2.187,866,3.449,867,2.187,868,2.187,869,2.187,870,1.886,871,2.187,872,2.187,873,2.187]],["title/classes/ResponseTokenDto.html",[0,0.18,265,2.667]],["body/classes/ResponseTokenDto.html",[0,0.211,2,1.046,3,0.203,4,0.203,5,0.157,7,0.378,8,1.237,11,1.45,14,0.71,15,0.017,16,1.026,17,1.642,22,0.792,27,0.227,30,1.815,32,0.831,33,0.203,35,0.01,36,0.013,37,0.01,97,1.548,160,1.88,161,5.499,173,2.596,174,3.587,265,4.047,294,3.735,300,4.92,318,5.499,874,5.815,875,3.831,876,5.752,877,4.444,878,5.752,879,5.752,880,4.959,881,4.444,882,4.444]],["title/classes/ShoppingList.html",[0,0.18,114,1.8]],["body/classes/ShoppingList.html",[0,0.238,2,0.852,3,0.165,4,0.165,5,0.128,7,0.308,8,1.078,11,1.402,14,0.687,15,0.017,16,0.894,17,1.736,21,1.03,22,0.838,27,0.317,28,2.654,29,1.065,30,1.815,32,0.677,33,0.229,35,0.008,36,0.011,37,0.008,114,2.731,156,0.743,160,1.548,170,2.041,171,2.145,394,1.854,515,1.944,527,3.815,528,1.817,638,2.796,640,2.258,663,3.476,664,2.667,665,3.512,668,3.476,669,2.351,748,4.046,753,3.527,754,3.121,755,3.527,757,4.032,758,3.121,772,3.121,780,3.527,781,3.527,883,3.678,884,2.792,885,4.368,886,4.959,887,3.62,888,3.62,889,3.62,890,3.62,891,3.62,892,3.62,893,3.62,894,3.62,895,3.62,896,4.322,897,3.121,898,2.547]],["title/controllers/ShoppingListController.html",[38,1.402,87,2.462]],["body/controllers/ShoppingListController.html",[0,0.087,3,0.084,4,0.084,5,0.065,7,0.156,9,1.406,11,1.533,14,0.673,15,0.017,17,1.333,21,0.377,22,0.679,27,0.301,32,0.343,33,0.084,35,0.004,36,0.007,37,0.004,38,0.678,40,0.678,42,1.057,44,1.108,45,3.664,47,1.928,48,0.394,51,1.037,52,1.037,53,0.922,54,3.134,55,1.681,77,2.018,78,2.146,87,1.944,97,1.842,98,0.92,111,1.581,114,3.148,115,1.108,117,1.415,121,1.037,155,2.118,156,1.122,160,1.299,179,1.108,181,2.85,185,3.443,186,2.107,188,3.369,191,1.581,195,2.464,196,2.106,197,1.108,198,1.29,199,1.108,206,1.415,207,2.647,225,2.08,226,1.964,227,1.554,232,1.415,234,2.742,246,1.29,258,1.694,260,1.29,273,1.29,315,1.581,324,1.503,515,2.696,561,3.129,565,1.108,640,0.826,664,3.749,666,3.301,690,1.415,691,3.363,693,3.363,695,3.558,699,2.106,708,1.415,709,1.415,711,1.415,712,2.31,713,1.415,717,1.29,718,1.415,719,1.415,720,1.415,723,1.415,737,3.378,738,2.581,739,1.581,741,1.415,828,1.415,837,3.081,870,1.581,883,3.031,899,1.581,900,3.271,901,3.795,902,3.271,903,2.994,904,2.994,905,3.795,906,5.179,907,1.834,908,1.834,909,4.38,910,2.994,911,2.994,912,1.834,913,4.38,914,1.834,915,1.834,916,1.834,917,1.581,918,1.834,919,2.581,920,1.834,921,2.994,922,1.834,923,1.834,924,1.834,925,1.834,926,2.994,927,1.834,928,1.834,929,1.581,930,1.834,931,1.581,932,1.581,933,1.581,934,1.834,935,1.834,936,1.581,937,1.834,938,1.834,939,1.581,940,3.776,941,2.581,942,2.994,943,1.834,944,1.581,945,1.834,946,1.834,947,2.994,948,2.994,949,1.834,950,1.834,951,1.834,952,1.834,953,1.834,954,1.581,955,1.581,956,1.581,957,1.581,958,1.834]],["title/classes/ShoppingListFillableFields.html",[0,0.18,898,2.667]],["body/classes/ShoppingListFillableFields.html",[0,0.268,2,1.021,3,0.198,4,0.198,5,0.154,7,0.369,8,1.218,11,1.437,14,0.615,15,0.017,16,0.774,21,0.891,22,0.539,27,0.341,28,2.822,29,1.277,30,1.914,32,0.812,33,0.259,35,0.01,36,0.013,37,0.01,114,2.689,156,0.891,160,1.168,170,2.305,171,2.423,394,1.604,515,2.196,527,3.922,528,2.177,638,2.55,663,3.422,664,3.012,665,3.203,668,2.622,669,2.817,748,3.052,753,3.052,755,3.052,757,3.677,780,3.984,781,3.984,883,3.012,884,3.347,885,4.702,886,3.741,896,4.882,897,3.741,898,3.984,959,4.339]],["title/classes/ShoppingListFormDto.html",[0,0.18,666,2.291]],["body/classes/ShoppingListFormDto.html",[0,0.267,2,1.015,3,0.197,4,0.197,5,0.153,7,0.367,8,1.213,11,1.352,14,0.65,15,0.017,16,1.006,17,1.452,21,1.291,22,0.701,27,0.288,30,1.795,32,0.807,33,0.258,35,0.01,36,0.013,37,0.01,53,1.935,133,2.801,173,2.296,186,2.086,394,2.086,479,3.556,502,2.187,509,2.801,513,3.718,515,2.752,516,3.718,552,2.54,638,2.54,640,2.54,646,3.034,660,2.606,661,4.849,663,3.799,664,2.294,665,3.772,666,3.409,667,4.864,668,3.799,669,2.801]],["title/modules/ShoppingListModule.html",[57,1.067,74,2.462]],["body/modules/ShoppingListModule.html",[0,0.213,3,0.205,4,0.205,5,0.159,15,0.016,27,0.366,33,0.205,35,0.01,36,0.013,37,0.01,40,2.139,48,0.964,57,1.803,59,1.919,60,1.919,61,2.251,62,2.251,63,2.019,64,3.215,65,3.215,73,4.335,74,4.853,78,4.317,80,2.904,81,2.251,82,2.13,87,4.16,88,3.273,91,2.71,92,2.019,105,3.867,113,3.867,114,2.13,115,2.71,117,3.459,664,3.407,883,2.385,960,3.867,961,4.485,962,3.867,963,4.485,964,4.485,965,4.485]],["title/classes/ShoppingListRequest.html",[0,0.18,527,2.144]],["body/classes/ShoppingListRequest.html",[0,0.21,2,1.043,3,0.202,4,0.202,5,0.157,7,0.377,8,1.234,11,1.449,14,0.657,15,0.017,17,1.639,21,0.91,22,0.791,27,0.325,28,2.337,29,1.304,30,1.193,32,0.829,33,0.202,35,0.01,36,0.013,37,0.01,114,3.503,115,2.677,156,0.91,160,1.714,170,2.337,171,2.456,502,2.226,515,2.612,527,3.603,640,1.995,647,3.82,653,3.82,655,4.428,664,2.356,693,4.136,883,3.583,966,3.82,967,4.431,968,4.431,969,4.431,970,4.431,971,5.741,972,3.82]],["title/injectables/ShoppingListService.html",[78,2.144,149,1.167]],["body/injectables/ShoppingListService.html",[0,0.106,3,0.102,4,0.102,5,0.079,7,0.369,8,0.756,9,1.578,11,1.437,14,0.598,15,0.018,21,0.722,22,0.783,27,0.321,29,0.659,33,0.102,35,0.005,36,0.008,37,0.005,42,1.24,47,2.089,48,0.482,53,0.69,55,1.743,78,1.988,92,1.009,97,1.168,98,1.125,114,3.548,115,1.354,121,2.454,149,1.082,150,1.064,152,1.764,155,2.377,156,1.259,160,0.603,181,2.894,212,2.283,215,3.456,223,1.576,225,2.333,226,2.172,227,1.974,234,2.678,255,2.712,258,2.779,324,2.177,394,0.829,495,1.354,515,1.905,527,2.454,528,1.125,663,1.354,664,2.307,665,1.268,666,3.898,668,2.124,669,1.455,691,1.455,693,3.19,695,2.842,699,1.576,707,1.576,717,1.576,791,3.031,807,2.473,812,3.031,816,2.712,822,1.932,828,1.728,829,1.455,830,1.728,834,3.031,837,1.576,883,3.431,885,1.576,900,3.031,933,1.932,936,3.031,954,1.932,972,1.932,973,1.932,974,3.515,975,3.515,976,3.515,977,2.241,978,3.515,979,3.515,980,3.515,981,2.241,982,2.241,983,2.241,984,3.515,985,2.241,986,3.515,987,2.241,988,3.515,989,2.241,990,3.515,991,2.241,992,2.241,993,2.241,994,2.241,995,2.241,996,2.241,997,2.241,998,2.241,999,4.912,1000,2.241,1001,2.241,1002,2.241,1003,4.338,1004,3.515,1005,3.515,1006,2.241,1007,2.241,1008,2.241,1009,2.241,1010,2.241,1011,2.241,1012,2.241,1013,2.241,1014,2.241,1015,2.241,1016,2.241,1017,2.241,1018,2.241,1019,3.515,1020,2.241]],["title/classes/UpdateUserDto.html",[0,0.18,1021,2.462]],["body/classes/UpdateUserDto.html",[0,0.236,1,2.805,2,0.842,3,0.163,4,0.163,5,0.127,7,0.304,8,1.069,9,1.86,10,3.228,11,1.069,12,3.228,13,2.812,14,0.685,15,0.017,16,1.314,17,1.809,18,4.01,19,4.01,20,3.285,21,1.443,22,0.873,27,0.291,30,0.962,31,4.02,32,0.669,33,0.163,35,0.008,36,0.011,37,0.008,502,2.605,506,2.322,517,1.902,519,2.238,614,4.764,629,3.711,630,3.711,631,3.711,634,4.286,638,2.238,775,4.345,776,2.516,777,2.516,778,2.516,779,2.516,1021,3.228,1022,5.596,1023,3.083,1024,4.02,1025,3.576,1026,3.576,1027,3.576,1028,3.576,1029,3.576,1030,3.083,1031,3.083]],["title/classes/User.html",[0,0.18,97,1.02]],["body/classes/User.html",[0,0.261,1,2.602,2,0.656,3,0.127,4,0.127,5,0.099,7,0.237,8,0.893,9,1.76,10,2.697,11,1.265,12,2.697,13,2.349,14,0.685,15,0.017,16,1.342,17,1.786,18,3.573,19,3.573,20,3.282,21,1.404,22,0.862,27,0.315,28,2.24,29,0.82,30,0.75,32,0.521,33,0.227,34,2.641,35,0.006,36,0.009,37,0.006,97,1.336,156,0.853,160,1.336,168,3.867,170,1.691,171,2.124,227,0.897,322,3.097,326,3.113,394,1.536,502,2.65,517,1.482,519,1.87,552,1.255,617,2.51,629,3.573,630,3.573,631,3.822,638,2.478,639,3.224,640,1.255,644,1.96,695,2.084,775,3.871,776,1.96,777,1.96,778,1.96,779,1.96,783,2.697,784,3,1024,3.871,1032,1.96,1033,4.965,1034,2.787,1035,2.787,1036,2.787,1037,2.787,1038,2.787,1039,2.787,1040,2.787,1041,2.787,1042,2.787,1043,2.787,1044,2.787,1045,2.149,1046,1.96,1047,3.83,1048,1.684,1049,2.149]],["title/controllers/UserController.html",[38,1.402,85,2.462]],["body/controllers/UserController.html",[0,0.139,3,0.134,4,0.134,5,0.104,7,0.25,9,1.11,11,1.352,14,0.692,15,0.017,17,1.317,21,0.602,22,0.635,27,0.331,32,0.548,33,0.134,35,0.007,36,0.01,37,0.007,38,1.084,40,1.084,42,1.522,44,1.771,45,3.799,47,1.805,48,0.63,51,1.658,52,1.658,53,0.902,54,3.322,55,1.574,79,2.048,85,2.8,97,1.974,121,1.658,155,1.672,156,1.158,160,1.911,173,2.296,174,3,179,1.771,181,2.77,185,3.409,186,1.594,188,3.343,195,2.8,197,1.771,199,1.771,207,2.606,226,1.193,227,1.389,232,2.261,234,2.567,258,2.439,271,2.062,324,1.471,561,2.606,565,1.771,640,1.32,671,3.968,690,2.261,691,2.8,695,2.831,708,2.261,709,2.261,711,2.261,712,3.326,713,2.261,718,2.261,719,2.261,720,2.261,723,2.261,737,3.326,807,3.599,837,2.062,902,3.718,917,2.527,919,2.527,929,2.527,931,2.527,932,2.527,939,2.527,940,2.527,941,2.527,944,2.527,955,2.527,957,2.527,1021,4.22,1046,2.062,1050,2.527,1051,2.932,1052,2.932,1053,2.932,1054,2.932,1055,2.932,1056,2.932,1057,2.932,1058,2.932,1059,2.932,1060,5.116,1061,2.261,1062,2.527,1063,2.527,1064,2.527,1065,2.932,1066,2.932,1067,2.932,1068,2.932,1069,2.932,1070,4.312,1071,2.932,1072,4.312,1073,2.932,1074,2.932]],["title/classes/UserFillableFields.html",[0,0.18,1048,2.291]],["body/classes/UserFillableFields.html",[0,0.29,1,1.996,2,0.826,3,0.16,4,0.16,5,0.124,7,0.299,8,1.055,9,1.719,11,1.055,14,0.682,15,0.017,16,1.364,20,1.865,21,1.324,22,0.851,27,0.34,28,2.493,29,1.032,30,0.944,32,0.656,33,0.258,34,2.609,35,0.008,36,0.011,37,0.008,97,1.32,156,1.007,160,0.944,168,3.646,170,1.996,171,2.098,227,1.129,322,3.234,326,3.464,394,1.297,502,2.499,517,1.865,519,1.579,552,1.579,617,2.964,629,3.977,630,3.977,631,4.185,638,2.208,639,3.185,644,2.467,695,2.461,783,3.185,784,2.964,1024,4.309,1032,2.467,1045,2.705,1046,2.467,1047,4.362,1048,2.964,1049,4.362,1075,3.507,1076,3.507,1077,3.507,1078,3.507,1079,3.507,1080,3.507,1081,3.507]],["title/classes/UserID.html",[0,0.18,695,1.902]],["body/classes/UserID.html",[0,0.306,1,2.171,2,0.933,3,0.181,4,0.181,5,0.14,7,0.337,8,1.147,11,1.296,14,0.52,15,0.017,16,1.345,20,2.108,21,1.382,22,0.492,27,0.353,28,2.624,29,1.166,30,1.067,32,0.741,33,0.275,34,2.837,35,0.009,36,0.012,37,0.009,97,1.436,156,1.095,160,1.067,168,3.806,170,2.171,171,2.282,227,1.276,322,3.025,326,3.017,394,1.465,502,2.609,517,2.108,519,1.784,552,1.784,617,3.223,629,3.463,630,3.463,631,3.914,638,2.402,639,3.463,644,2.788,695,3.377,783,3.463,784,3.223,1024,3.752,1032,2.788,1045,3.057,1046,2.788,1047,4.65,1048,2.395,1049,3.057,1082,3.963]],["title/modules/UserModule.html",[57,1.067,75,2.016]],["body/modules/UserModule.html",[0,0.217,3,0.209,4,0.209,5,0.162,15,0.017,27,0.36,33,0.209,35,0.01,36,0.013,37,0.01,40,2.169,48,0.985,57,1.821,59,1.961,60,1.961,61,2.3,62,2.3,63,2.064,64,3.248,65,3.248,75,3.902,79,3.635,80,2.945,81,2.3,82,2.176,85,4.203,88,2.592,91,2.769,92,2.064,97,1.234,124,3.951,258,2.592,1061,3.535,1062,3.951,1083,3.951,1084,3.951,1085,4.583,1086,4.583,1087,4.583]],["title/modules/UsersModule.html",[57,1.067,1088,2.667]],["body/modules/UsersModule.html",[0,0.226,3,0.218,4,0.218,5,0.169,15,0.017,27,0.364,33,0.218,35,0.011,36,0.013,37,0.011,40,2.223,48,1.024,57,1.854,59,2.037,60,2.037,61,2.39,62,2.39,63,2.144,64,3.306,65,2.39,76,4.122,80,3.017,81,2.39,82,2.261,84,4.278,88,2.694,91,2.877,92,2.144,101,1.938,202,4.105,203,3.673,1088,5.127,1089,4.105,1090,4.762,1091,4.762,1092,4.762,1093,4.762]],["title/injectables/UsersService.html",[79,1.8,149,1.167]],["body/injectables/UsersService.html",[0,0.124,3,0.12,4,0.12,5,0.093,7,0.223,9,1.552,11,1.028,14,0.588,15,0.018,16,1.177,22,0.778,27,0.307,29,0.77,33,0.12,35,0.006,36,0.009,37,0.006,42,1.398,47,2.127,48,0.563,53,0.806,55,1.984,79,1.882,92,1.179,97,1.84,149,1.22,150,1.243,152,1.989,155,2.337,156,1.238,160,0.704,181,2.969,212,2.573,215,3.752,223,1.841,225,1.243,226,2.171,227,1.276,234,3.313,254,2.019,255,2.019,257,2.019,322,2.875,324,1.989,326,3.541,484,1.841,671,3.752,691,1.7,707,1.841,807,2.788,816,3.056,829,1.7,830,2.019,1021,3.463,1048,3.222,1061,2.019,1063,2.256,1064,2.256,1094,2.256,1095,3.962,1096,3.962,1097,2.617,1098,2.617,1099,3.962,1100,3.962,1101,2.617,1102,2.617,1103,2.617,1104,3.962,1105,2.617,1106,3.962,1107,2.617,1108,3.962,1109,2.617,1110,2.617,1111,3.962,1112,2.617,1113,2.617,1114,2.617,1115,2.617,1116,2.617,1117,2.617,1118,3.962,1119,3.962,1120,3.962,1121,3.962,1122,3.962,1123,3.962,1124,3.962,1125,2.617,1126,2.617,1127,2.617,1128,2.617,1129,3.962,1130,2.617,1131,2.256,1132,2.019,1133,2.617,1134,2.617,1135,2.617,1136,2.617,1137,2.617,1138,2.617,1139,2.617,1140,2.617,1141,2.617,1142,2.617,1143,2.617,1144,2.617,1145,2.617,1146,2.617,1147,2.617,1148,2.617,1149,2.617,1150,2.617,1151,2.617,1152,2.617,1153,2.617]],["title/coverage.html",[1154,3.992]],["body/coverage.html",[0,0.353,1,1.023,5,0.089,6,2.167,14,0.245,15,0.017,35,0.006,36,0.009,37,0.006,38,2.283,39,1.769,41,2.167,49,1.519,57,0.708,63,1.132,76,1.422,77,1.337,78,1.422,79,1.194,84,1.632,85,1.632,86,1.632,87,1.632,89,1.132,97,0.677,99,1.132,101,1.564,114,1.194,128,1.769,149,2.009,151,2.167,159,2.964,176,1.769,178,2.167,190,1.632,211,2.167,227,0.809,236,1.769,237,2.167,242,1.519,250,1.769,261,1.422,265,1.769,285,1.632,303,2.167,327,1.769,328,2.167,344,1.632,348,2.167,356,2.167,402,5.626,500,2.167,501,2.167,507,1.769,508,2.964,509,3.392,515,1.809,518,1.519,525,1.337,527,1.422,556,3.029,557,1.769,559,2.964,561,1.519,565,1.519,566,2.167,567,2.167,585,1.769,586,2.167,590,2.167,608,2.167,617,1.519,618,2.167,628,2.167,645,2.964,658,2.174,660,1.519,661,2.964,666,1.519,670,2.167,695,1.262,747,2.964,804,2.167,829,1.632,874,2.167,875,2.167,883,2.993,884,2.964,898,1.769,899,2.167,966,2.167,973,2.167,1021,1.632,1022,2.167,1023,2.167,1032,3.282,1048,1.519,1050,2.167,1094,2.167,1154,1.939,1155,2.514,1156,2.514,1157,2.964,1158,2.514,1159,7.815,1160,6.868,1161,6.526,1162,6.659,1163,3.843,1164,2.514,1165,5.934,1166,4.665,1167,2.167,1168,2.167,1169,2.167,1170,2.514,1171,2.514,1172,3.843,1173,2.514,1174,3.843,1175,4.665,1176,2.514,1177,2.514,1178,4.503,1179,2.167,1180,2.167,1181,2.167,1182,2.167,1183,2.167,1184,2.167,1185,2.514,1186,2.514]],["title/dependencies.html",[60,1.951,1187,3.165]],["body/dependencies.html",[0,0.234,15,0.018,29,1.045,32,0.664,35,0.008,36,0.011,37,0.008,48,0.763,60,2.116,92,1.598,288,2.738,290,2.497,294,3.212,432,3.06,435,3.06,469,2.738,506,2.305,542,4.907,545,4.391,599,3.815,624,3.06,784,2.145,1188,3.55,1189,3.55,1190,5.692,1191,3.55,1192,4.946,1193,3.55,1194,4.907,1195,3.55,1196,3.55,1197,3.55,1198,3.55,1199,3.55,1200,4.946,1201,3.55,1202,3.55,1203,3.55,1204,3.55,1205,3.55,1206,3.55,1207,3.55,1208,3.55,1209,3.55,1210,3.55,1211,3.55,1212,3.55,1213,3.55,1214,3.55,1215,3.55,1216,3.55,1217,3.55,1218,3.06,1219,3.55,1220,3.55,1221,3.55,1222,3.55,1223,3.55,1224,3.55,1225,3.55,1226,3.55,1227,3.55,1228,4.946,1229,3.55,1230,3.55,1231,3.55,1232,3.55,1233,3.55,1234,3.55,1235,3.55,1236,3.55,1237,3.55,1238,3.55,1239,3.55,1240,3.55,1241,3.55,1242,3.55,1243,3.55,1244,3.55,1245,3.55,1246,3.55,1247,3.55,1248,3.55,1249,3.55,1250,3.55,1251,3.55,1252,3.06,1253,3.55,1254,3.55,1255,3.55,1256,3.55,1257,3.55,1258,4.946,1259,3.55,1260,3.55,1261,3.55,1262,3.55,1263,3.55,1264,3.55,1265,3.55,1266,3.55,1267,3.55,1268,3.55,1269,3.55,1270,3.55,1271,3.55,1272,3.55,1273,3.55,1274,3.55,1275,3.55]],["title/miscellaneous/enumerations.html",[1276,1.913,1277,3.931]],["body/miscellaneous/enumerations.html",[7,0.418,15,0.017,35,0.011,36,0.014,37,0.011,227,1.972,495,4.589,515,2.375,639,3.977,663,3.701,773,4.724,883,2.609,1030,5.281,1031,5.281,1276,2.964,1277,4.229,1278,4.905,1279,6.995,1280,4.905,1281,4.905,1282,6.125,1283,4.905,1284,6.125,1285,6.995,1286,6.125,1287,6.125,1288,4.905,1289,6.125]],["title/miscellaneous/functions.html",[1276,1.913,1290,3.931]],["body/miscellaneous/functions.html",[7,0.504,15,0.015,35,0.013,36,0.015,37,0.013,63,3.26,1157,4.563,1276,3.575,1290,5.1,1291,5.1]],["title/index.html",[7,0.269,1292,2.729,1293,2.729]],["body/index.html",[5,0.14,14,0.254,15,0.016,29,1.683,35,0.006,36,0.009,37,0.006,43,3.048,60,1.69,97,0.702,128,1.835,156,0.536,175,1.835,192,3.407,212,3.909,238,2.248,239,2.248,252,2.248,254,3.68,294,3.098,322,2.671,388,2.012,394,1.461,441,3.407,442,2.248,443,3.407,468,2.248,469,3.68,471,2.248,474,5.553,477,4.113,485,3.407,531,2.248,534,2.248,536,4.589,573,4.113,576,2.012,579,2.248,599,2.012,880,2.248,885,1.835,956,3.407,1131,2.248,1132,2.012,1154,2.012,1218,4.113,1252,2.248,1294,2.608,1295,6.832,1296,5.323,1297,2.608,1298,3.952,1299,2.608,1300,3.952,1301,2.608,1302,6.441,1303,2.608,1304,2.608,1305,2.608,1306,2.608,1307,2.608,1308,4.771,1309,2.608,1310,2.608,1311,2.608,1312,2.608,1313,2.608,1314,2.608,1315,2.608,1316,2.608,1317,2.608,1318,4.771,1319,2.608,1320,2.608,1321,2.608,1322,2.608,1323,2.248,1324,2.608,1325,2.608,1326,2.608,1327,3.952,1328,2.608,1329,2.608,1330,3.407,1331,3.952,1332,2.608,1333,2.608,1334,2.248,1335,2.608,1336,2.608,1337,4.771,1338,2.608,1339,2.608,1340,2.608,1341,2.608,1342,2.608,1343,3.952,1344,3.952,1345,2.608,1346,3.407,1347,2.248,1348,2.608,1349,2.608,1350,3.952,1351,2.608,1352,4.771,1353,2.608,1354,2.608,1355,3.952,1356,3.952,1357,3.952,1358,2.608,1359,5.72,1360,2.608,1361,2.608,1362,2.608,1363,2.608,1364,2.608,1365,2.608,1366,2.608,1367,2.608,1368,3.952,1369,2.608,1370,2.608,1371,2.608,1372,2.608,1373,2.608,1374,2.608,1375,2.608,1376,3.952,1377,3.952,1378,3.952,1379,2.608,1380,2.608,1381,2.608,1382,4.113,1383,2.608,1384,2.608,1385,2.608,1386,3.952,1387,2.608,1388,3.952,1389,2.608,1390,2.608,1391,3.952,1392,2.608,1393,2.608,1394,2.608,1395,2.608,1396,2.608,1397,2.608,1398,3.952,1399,2.248,1400,4.771,1401,3.952,1402,4.771,1403,4.771,1404,2.608,1405,2.608,1406,3.952,1407,2.608,1408,2.608,1409,2.608,1410,3.952,1411,2.608,1412,2.608,1413,3.952,1414,2.608,1415,2.608,1416,2.608,1417,2.608,1418,3.952,1419,2.608,1420,2.608,1421,2.608,1422,2.608,1423,2.608,1424,2.608,1425,2.608,1426,2.608,1427,2.608,1428,2.608,1429,2.608,1430,2.608,1431,2.608,1432,2.608,1433,3.952,1434,4.771,1435,3.952,1436,2.248,1437,2.608,1438,2.608,1439,3.952,1440,2.608,1441,3.952,1442,2.608,1443,2.608,1444,2.608,1445,2.608,1446,2.608]],["title/license.html",[1292,2.729,1293,2.729,1447,2.729]],["body/license.html",[15,0.013,35,0.01,36,0.013,37,0.01,82,2.091,128,3.098,392,4.411,862,3.797,1132,3.397,1194,3.797,1323,3.797,1334,4.93,1347,3.797,1382,4.93,1447,3.797,1448,5.718,1449,6.35,1450,4.404,1451,4.404,1452,5.718,1453,4.404,1454,4.404,1455,4.404,1456,4.404,1457,4.404,1458,4.404,1459,7.448,1460,4.404,1461,4.404,1462,4.404,1463,6.35,1464,4.404,1465,4.404,1466,4.404,1467,4.404,1468,4.404,1469,4.404,1470,4.404,1471,4.404,1472,4.404,1473,4.404,1474,5.718,1475,4.404,1476,4.404,1477,4.404,1478,4.404,1479,4.404,1480,5.718,1481,5.718,1482,4.404,1483,4.404,1484,4.404,1485,4.404,1486,4.404,1487,4.404,1488,4.404,1489,4.404,1490,4.404,1491,4.404,1492,4.404,1493,4.404,1494,4.404,1495,4.404,1496,4.404,1497,4.404,1498,4.404,1499,4.404,1500,4.404,1501,4.404,1502,4.404,1503,4.404,1504,4.404,1505,4.404,1506,4.404,1507,4.404,1508,4.404,1509,4.404]],["title/modules.html",[59,2.214]],["body/modules.html",[15,0.014,35,0.011,36,0.014,37,0.011,58,3.621,59,2.202,69,3.342,70,3.342,71,2.911,72,3.342,73,3.11,74,3.342,75,2.737,1088,3.621,1399,4.437,1510,7.597,1511,7.597,1512,7.597,1513,7.655,1514,5.147]],["title/overview.html",[1515,4.462]],["body/overview.html",[1,2.255,2,0.795,15,0.017,35,0.008,36,0.011,37,0.008,40,1.249,49,3.348,57,0.951,58,5.459,59,1.445,60,1.445,61,1.695,62,1.695,63,1.521,64,1.695,65,1.695,66,2.912,67,2.912,68,2.912,69,4.691,70,4.127,71,3.595,72,3.598,73,4.257,74,4.499,75,3.685,76,3.407,77,3.685,78,3.919,79,3.29,80,2.397,81,1.695,82,1.604,89,2.712,150,1.604,261,3.134,282,2.912,284,2.912,285,3.598,342,2.912,343,2.912,344,3.598,349,2.912,350,2.912,558,2.606,797,2.912,799,2.912,960,2.912,962,2.912,1083,2.912,1084,2.912,1088,4.238,1089,2.912,1515,2.912,1516,4.777,1517,3.378,1518,3.378,1519,3.378]],["title/miscellaneous/variables.html",[387,3.517,1276,1.913]],["body/miscellaneous/variables.html",[7,0.311,14,0.66,15,0.018,16,1.167,35,0.008,36,0.011,37,0.008,55,1.125,57,1.421,147,4.352,173,1.488,186,1.867,226,2.754,227,1.625,387,2.82,394,2.613,495,4.27,557,2.572,559,2.82,561,3.051,562,3.152,563,3.152,564,3.152,710,3.152,757,2.374,829,4.049,1157,2.82,1167,3.152,1168,3.152,1169,4.352,1178,3.152,1179,4.352,1180,4.352,1181,4.352,1182,4.352,1183,3.152,1184,4.352,1276,2.209,1291,3.152,1330,4.352,1346,4.352,1436,3.152,1520,3.656,1521,3.656,1522,3.656,1523,3.656,1524,6.235,1525,3.656,1526,3.656,1527,3.656,1528,3.656,1529,3.656,1530,3.656,1531,3.656,1532,3.656,1533,3.656,1534,3.656,1535,5.048,1536,3.656,1537,3.656,1538,3.656,1539,3.656,1540,3.656,1541,3.656,1542,5.048,1543,3.656,1544,5.048,1545,3.656,1546,3.656,1547,3.656,1548,3.656,1549,3.656,1550,5.048,1551,3.656,1552,3.656,1553,3.656,1554,5.048,1555,3.656]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["0.0.45",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["0.2.24",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":791,"title":{"classes/RequestFillableFields-1.html":{}},"body":{"injectables/ShoppingListService.html":{}}}],["1.0",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.1",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["1.19.1",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["1.7.2",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":19,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["13.1.6",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["14.3.1",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["14.3.4",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":1366,"title":{},"body":{"index.html":{}}}],["2/5",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["2019",{"_index":1450,"title":{},"body":{"license.html":{}}}],["24",{"_index":1518,"title":{},"body":{"overview.html":{}}}],["24.0.25",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["24.3.0",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["25.1.0",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["255",{"_index":168,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["3",{"_index":1519,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["3.21.2",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["3.3.10",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["3.7.4",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["3010:80",{"_index":1370,"title":{},"body":{"index.html":{}}}],["4.0.0",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["4.0.7",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["4.1.10",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["4.17.3",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["4.41.5",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.20.1",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["5432:5432",{"_index":1358,"title":{},"body":{"index.html":{}}}],["6.0.3",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["6.10.14",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1517,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["7.17.1",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["8.6.1",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1516,"title":{},"body":{"overview.html":{}}}],["9.5.0",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":1479,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":359,"title":{},"body":{"classes/ConfigService.html":{}}}],["accesstoken",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"classes/ResponseTokenDto.html":{}}}],["account",{"_index":1311,"title":{},"body":{"index.html":{}}}],["acorn",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":1503,"title":{},"body":{"license.html":{}}}],["active",{"_index":1286,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":484,"title":{},"body":{"classes/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/RequestController.html":{},"injectables/UsersService.html":{}}}],["addbearerauth",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":926,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["additionalrequest",{"_index":520,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{}}}],["addrequesttolist",{"_index":900,"title":{},"body":{"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["addrequesttolist(requestid",{"_index":980,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["addrequesttolist(shoppinglistid",{"_index":907,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["address",{"_index":1049,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["addressmodel",{"_index":1,"title":{"classes/AddressModel.html":{}},"body":{"classes/AddressModel.html":{},"modules/AppModule.html":{},"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"coverage.html":{},"overview.html":{}}}],["addressmodel:10",{"_index":778,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["addressmodel:17",{"_index":777,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["addressmodel:24",{"_index":779,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["addressmodel:31",{"_index":776,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["adds",{"_index":1374,"title":{},"body":{"index.html":{}}}],["admin",{"_index":1367,"title":{},"body":{"index.html":{}}}],["allowunknown",{"_index":493,"title":{},"body":{"classes/ConfigService.html":{}}}],["already",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["and/or",{"_index":1472,"title":{},"body":{"license.html":{}}}],["another",{"_index":1131,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["api",{"_index":1346,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["api/docs",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_auth_enabled",{"_index":481,"title":{},"body":{"classes/ConfigService.html":{}}}],["apibadrequestresponse",{"_index":197,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apibadrequestresponse({description",{"_index":207,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apibearerauth",{"_index":712,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apicreatedresponse",{"_index":198,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["apicreatedresponse({description",{"_index":206,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["apiforbiddenresponse",{"_index":932,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apiforbiddenresponse({description",{"_index":940,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apihideproperty",{"_index":971,"title":{},"body":{"classes/ShoppingListRequest.html":{}}}],["apinotacceptableresponse",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["apinotacceptableresponse({description",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["apinotfoundresponse",{"_index":713,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apinotfoundresponse({description",{"_index":737,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apiokresponse",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apiokresponse({description",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apiparam",{"_index":1060,"title":{},"body":{"controllers/UserController.html":{}}}],["apiproperty",{"_index":30,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["apiproperty()@column",{"_index":890,"title":{},"body":{"classes/ShoppingList.html":{}}}],["apiproperty()@column()@createdatecolumn",{"_index":758,"title":{},"body":{"classes/RequestEntity.html":{},"classes/ShoppingList.html":{}}}],["apiproperty()@column()@updatedatecolumn",{"_index":894,"title":{},"body":{"classes/ShoppingList.html":{}}}],["apiproperty()@column({length",{"_index":762,"title":{},"body":{"classes/RequestEntity.html":{}}}],["apiproperty()@column({name",{"_index":764,"title":{},"body":{"classes/RequestEntity.html":{}}}],["apiproperty()@column({nullable",{"_index":751,"title":{},"body":{"classes/RequestEntity.html":{}}}],["apiproperty()@column({type",{"_index":772,"title":{},"body":{"classes/RequestEntity.html":{},"classes/ShoppingList.html":{}}}],["apiproperty()@primarygeneratedcolumn",{"_index":888,"title":{},"body":{"classes/ShoppingList.html":{}}}],["apiproperty({description",{"_index":161,"title":{},"body":{"classes/Article.html":{},"classes/ResponseTokenDto.html":{}}}],["apiproperty({required",{"_index":502,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["apiproperty({type",{"_index":753,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["apipropertyoptional",{"_index":31,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/UpdateUserDto.html":{}}}],["apipropertyoptional()@column({length",{"_index":18,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["apipropertyoptional({type",{"_index":767,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["apiquery",{"_index":714,"title":{},"body":{"controllers/RequestController.html":{}}}],["apis",{"_index":1396,"title":{},"body":{"index.html":{}}}],["apitags",{"_index":199,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apitags('articles",{"_index":205,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["apitags('authentication",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('calls",{"_index":339,"title":{},"body":{"controllers/CallController.html":{}}}],["apitags('request",{"_index":722,"title":{},"body":{"controllers/RequestController.html":{}}}],["apitags('shopping",{"_index":934,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["apitags('user",{"_index":1066,"title":{},"body":{"controllers/UserController.html":{}}}],["apiunauthorizedresponse",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["apiunauthorizedresponse({description",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["app",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.controller",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":39,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appear",{"_index":1320,"title":{},"body":{"index.html":{}}}],["applied",{"_index":393,"title":{},"body":{"classes/ConfigService.html":{}}}],["apply(loggermiddleware",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":58,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule.isdev",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule.port",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["appservice",{"_index":49,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["apt",{"_index":1299,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1507,"title":{},"body":{"license.html":{}}}],["art.articlecount",{"_index":845,"title":{},"body":{"injectables/RequestService.html":{}}}],["art.articleid",{"_index":843,"title":{},"body":{"injectables/RequestService.html":{}}}],["article",{"_index":101,"title":{"classes/Article.html":{}},"body":{"modules/AppModule.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["article.articledone",{"_index":871,"title":{},"body":{"injectables/RequestService.html":{}}}],["article.dto",{"_index":201,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["article.dto.ts",{"_index":501,"title":{},"body":{"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["article.dto.ts:10",{"_index":504,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.entity",{"_index":203,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"modules/UsersModule.html":{}}}],["article.name",{"_index":228,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articlecount",{"_index":510,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestArticle.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{}}}],["articledone",{"_index":646,"title":{},"body":{"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestFillableFields-1.html":{},"classes/ShoppingListFormDto.html":{}}}],["articlefillablefields",{"_index":176,"title":{"classes/ArticleFillableFields.html":{}},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"coverage.html":{}}}],["articleid",{"_index":511,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestArticle.html":{},"controllers/RequestController.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{}}}],["articles",{"_index":172,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"classes/CreateRequestArticleDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{}}}],["articles.controller",{"_index":1092,"title":{},"body":{"modules/UsersModule.html":{}}}],["articles.service",{"_index":202,"title":{},"body":{"controllers/ArticlesController.html":{},"modules/UsersModule.html":{}}}],["articles/article.entity",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["articles/articles.controller",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["articles/articles.service",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["articlescontroller",{"_index":84,"title":{"controllers/ArticlesController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["articlesrepository",{"_index":217,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articlesservice",{"_index":76,"title":{"injectables/ArticlesService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["articlestatus",{"_index":701,"title":{},"body":{"controllers/RequestController.html":{}}}],["articlestatusdto",{"_index":826,"title":{},"body":{"injectables/RequestService.html":{}}}],["articlestatusdto.articledone",{"_index":872,"title":{},"body":{"injectables/RequestService.html":{}}}],["article})@apibadrequestresponse({description",{"_index":193,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["ask",{"_index":1329,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1460,"title":{},"body":{"license.html":{}}}],["async",{"_index":181,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":292,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":236,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authcontroller.logger.log(user",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticateduser",{"_index":1114,"title":{},"body":{"injectables/UsersService.html":{}}}],["authentication",{"_index":573,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["authguard",{"_index":569,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":570,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":69,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authors",{"_index":1496,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":261,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":162,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{}}}],["available",{"_index":1399,"title":{},"body":{"index.html":{},"modules.html":{}}}],["await",{"_index":234,"title":{},"body":{"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["backend_default",{"_index":1369,"title":{},"body":{"index.html":{}}}],["bad",{"_index":185,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["badrequestexception",{"_index":828,"title":{},"body":{"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["badrequestexception('already",{"_index":1007,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["badrequestexception('does",{"_index":1013,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["badrequestexception('this",{"_index":870,"title":{},"body":{"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{}}}],["based",{"_index":1444,"title":{},"body":{"index.html":{}}}],["basic",{"_index":1439,"title":{},"body":{"index.html":{}}}],["better",{"_index":1443,"title":{},"body":{"index.html":{}}}],["body",{"_index":195,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["boilerplate",{"_index":1435,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestFillableFields-1.html":{},"classes/ShoppingListFormDto.html":{}}}],["bootstrap",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1513,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1510,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1436,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":1323,"title":{},"body":{"index.html":{},"license.html":{}}}],["call",{"_index":329,"title":{},"body":{"controllers/CallController.html":{},"injectables/JwtAuthGuard.html":{}}}],["call.controller",{"_index":346,"title":{},"body":{"modules/CallModule.html":{}}}],["call.service",{"_index":347,"title":{},"body":{"modules/CallModule.html":{}}}],["call/call.module",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["callcontroller",{"_index":327,"title":{"controllers/CallController.html":{}},"body":{"controllers/CallController.html":{},"modules/CallModule.html":{},"coverage.html":{}}}],["called",{"_index":1335,"title":{},"body":{"index.html":{}}}],["callmodule",{"_index":70,"title":{"modules/CallModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CallModule.html":{},"modules.html":{},"overview.html":{}}}],["callservice",{"_index":344,"title":{"injectables/CallService.html":{}},"body":{"modules/CallModule.html":{},"injectables/CallService.html":{},"coverage.html":{},"overview.html":{}}}],["canactivate(context",{"_index":571,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canceled",{"_index":1287,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cascade",{"_index":755,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["change",{"_index":1337,"title":{},"body":{"index.html":{}}}],["charge",{"_index":1456,"title":{},"body":{"license.html":{}}}],["checkuserexistence",{"_index":1129,"title":{},"body":{"injectables/UsersService.html":{}}}],["city",{"_index":10,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["claim",{"_index":1499,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"overview.html":{}}}],["cli",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["client",{"_index":1297,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":283,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":284,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_callmodule",{"_index":342,"title":{},"body":{"modules/CallModule.html":{},"overview.html":{}}}],["cluster_callmodule_providers",{"_index":343,"title":{},"body":{"modules/CallModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":349,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":350,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_requestmodule",{"_index":797,"title":{},"body":{"modules/RequestModule.html":{},"overview.html":{}}}],["cluster_requestmodule_exports",{"_index":799,"title":{},"body":{"modules/RequestModule.html":{},"overview.html":{}}}],["cluster_requestmodule_imports",{"_index":798,"title":{},"body":{"modules/RequestModule.html":{}}}],["cluster_requestmodule_providers",{"_index":800,"title":{},"body":{"modules/RequestModule.html":{}}}],["cluster_shoppinglistmodule",{"_index":960,"title":{},"body":{"modules/ShoppingListModule.html":{},"overview.html":{}}}],["cluster_shoppinglistmodule_exports",{"_index":962,"title":{},"body":{"modules/ShoppingListModule.html":{},"overview.html":{}}}],["cluster_shoppinglistmodule_imports",{"_index":961,"title":{},"body":{"modules/ShoppingListModule.html":{}}}],["cluster_shoppinglistmodule_providers",{"_index":963,"title":{},"body":{"modules/ShoppingListModule.html":{}}}],["cluster_usermodule",{"_index":1083,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1084,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1085,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usersmodule",{"_index":1089,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1090,"title":{},"body":{"modules/UsersModule.html":{}}}],["cockroachdb",{"_index":466,"title":{},"body":{"classes/ConfigService.html":{}}}],["code",{"_index":684,"title":{},"body":{"controllers/RequestController.html":{}}}],["column",{"_index":28,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["column({default",{"_index":656,"title":{},"body":{"classes/RequestArticle.html":{},"classes/RequestFillableFields-1.html":{}}}],["column({length",{"_index":1047,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["column({name",{"_index":1038,"title":{},"body":{"classes/User.html":{}}}],["column({nullable",{"_index":787,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["commands",{"_index":1348,"title":{},"body":{"index.html":{}}}],["common/decorators/roles.decorator",{"_index":830,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["common/decorators/user.decorator",{"_index":718,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["common/guards/jwt",{"_index":719,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["complete",{"_index":696,"title":{},"body":{"controllers/RequestController.html":{}}}],["completed",{"_index":1285,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["compodoc/compodoc",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["compose",{"_index":1376,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":862,"title":{},"body":{"injectables/RequestService.html":{},"license.html":{}}}],["conditions.requester",{"_index":863,"title":{},"body":{"injectables/RequestService.html":{}}}],["conditions.zipcode",{"_index":864,"title":{},"body":{"injectables/RequestService.html":{}}}],["config",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{}}}],["config.databasehost",{"_index":532,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.databasename",{"_index":535,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.databasepassword",{"_index":538,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.databaseport",{"_index":533,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.databasetype",{"_index":530,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.databaseusername",{"_index":537,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.get('api_port",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["config.isdev",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["config.isprod",{"_index":554,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.service",{"_index":352,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config/config.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["config/config.service",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":71,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":89,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["configservice(`.env.${process.env.node_env",{"_index":355,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configservice.get('jwt_secret",{"_index":298,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configuration",{"_index":1305,"title":{},"body":{"index.html":{}}}],["configure",{"_index":1307,"title":{},"body":{"index.html":{}}}],["configure(consumer",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":1327,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1508,"title":{},"body":{"license.html":{}}}],["console",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(`${time",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":226,"title":{},"body":{"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":152,"title":{},"body":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["constructor(articlesrepository",{"_index":214,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["constructor(authservice",{"_index":592,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(config",{"_index":153,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(filepath",{"_index":374,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(jwtservice",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["constructor(requestrepository",{"_index":809,"title":{},"body":{"injectables/RequestService.html":{}}}],["constructor(shoppinglistrepository",{"_index":977,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["constructor(userrepository",{"_index":1097,"title":{},"body":{"injectables/UsersService.html":{}}}],["consumer",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":166,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/CreateArticleDto.html":{}}}],["container",{"_index":1344,"title":{},"body":{"index.html":{}}}],["contract",{"_index":1504,"title":{},"body":{"license.html":{}}}],["contrib",{"_index":1301,"title":{},"body":{"index.html":{}}}],["controller",{"_index":38,"title":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('articles",{"_index":204,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["controller('auth",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('call",{"_index":338,"title":{},"body":{"controllers/CallController.html":{}}}],["controller('request",{"_index":724,"title":{},"body":{"controllers/RequestController.html":{}}}],["controller('shopping",{"_index":935,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["controller('user",{"_index":1065,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1446,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1474,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1334,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1449,"title":{},"body":{"license.html":{}}}],["cordova",{"_index":467,"title":{},"body":{"classes/ConfigService.html":{}}}],["coverage",{"_index":1154,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crash",{"_index":546,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["create",{"_index":212,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(createarticledto",{"_index":218,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["create(createrequestdto",{"_index":812,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{}}}],["create(payload",{"_index":1100,"title":{},"body":{"injectables/UsersService.html":{}}}],["createarticledto",{"_index":190,"title":{"classes/CreateArticleDto.html":{}},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["createarticledto.name",{"_index":229,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["created",{"_index":192,"title":{},"body":{"controllers/ArticlesController.html":{},"index.html":{}}}],["created_at",{"_index":748,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["createdatecolumn",{"_index":780,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["createhmac('sha256",{"_index":1125,"title":{},"body":{"injectables/UsersService.html":{}}}],["createparamdecorator",{"_index":560,"title":{},"body":{"interfaces/IRequestUser.html":{}}}],["createparamdecorator((data",{"_index":562,"title":{},"body":{"interfaces/IRequestUser.html":{},"miscellaneous/variables.html":{}}}],["createquerybuilder('users",{"_index":1120,"title":{},"body":{"injectables/UsersService.html":{}}}],["createrequestarticledto",{"_index":507,"title":{"classes/CreateRequestArticleDto.html":{}},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestFormDto.html":{},"coverage.html":{}}}],["createrequestdto",{"_index":699,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["createrequestdto.additionalrequest",{"_index":849,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.articles",{"_index":839,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.articles.foreach(art",{"_index":840,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.city",{"_index":855,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.deliverycomment",{"_index":853,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.number",{"_index":859,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.phonenumber",{"_index":851,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.street",{"_index":857,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.zipcode",{"_index":861,"title":{},"body":{"injectables/RequestService.html":{}}}],["credentials",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["cross",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["crypto",{"_index":624,"title":{},"body":{"classes/PasswordTransformer.html":{},"dependencies.html":{}}}],["crypto.createhmac('sha256",{"_index":626,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["ctrl",{"_index":1322,"title":{},"body":{"index.html":{}}}],["current",{"_index":1425,"title":{},"body":{"index.html":{}}}],["custom",{"_index":572,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["d",{"_index":1355,"title":{},"body":{"index.html":{}}}],["damages",{"_index":1500,"title":{},"body":{"license.html":{}}}],["database",{"_index":534,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["database/database.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["database_host=localhost",{"_index":1338,"title":{},"body":{"index.html":{}}}],["database_port=54321",{"_index":1339,"title":{},"body":{"index.html":{}}}],["database_type",{"_index":464,"title":{},"body":{"classes/ConfigService.html":{}}}],["database_type=postgresdatabase_host=dbdatabase_port=5432database_username=usernamedatabase_password=secretpassworddatabase_name=dbname",{"_index":1332,"title":{},"body":{"index.html":{}}}],["databasehost",{"_index":363,"title":{},"body":{"classes/ConfigService.html":{}}}],["databasemodule",{"_index":72,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databasename",{"_index":367,"title":{},"body":{"classes/ConfigService.html":{}}}],["databasepassword",{"_index":366,"title":{},"body":{"classes/ConfigService.html":{}}}],["databaseport",{"_index":364,"title":{},"body":{"classes/ConfigService.html":{}}}],["databasetype",{"_index":362,"title":{},"body":{"classes/ConfigService.html":{}}}],["databaseusername",{"_index":365,"title":{},"body":{"classes/ConfigService.html":{}}}],["date",{"_index":757,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"miscellaneous/variables.html":{}}}],["date().tojson",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date.replace('t",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db",{"_index":1377,"title":{},"body":{"index.html":{}}}],["dbname",{"_index":1318,"title":{},"body":{"index.html":{}}}],["deal",{"_index":1462,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1509,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"classes/Article.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":394,"title":{},"body":{"classes/ConfigService.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":463,"title":{},"body":{"classes/ConfigService.html":{}}}],["default(true",{"_index":483,"title":{},"body":{"classes/ConfigService.html":{}}}],["defaults",{"_index":1379,"title":{},"body":{"index.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ShoppingListController.html":{}}}],["delete(':shoppinglistid/:requestid",{"_index":951,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["delete(':shoppinglistid/:requestid')@apiokresponse({description",{"_index":915,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["deleterequestfromlist",{"_index":901,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["deleterequestfromlist(shoppinglistid",{"_index":914,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["deliverycomment",{"_index":521,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{}}}],["dependencies",{"_index":60,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy:local",{"_index":1383,"title":{},"body":{"index.html":{}}}],["describe",{"_index":1397,"title":{},"body":{"index.html":{}}}],["description",{"_index":173,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingListFormDto.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":1412,"title":{},"body":{"index.html":{}}}],["development",{"_index":441,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["directly",{"_index":541,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["directory",{"_index":1417,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1470,"title":{},"body":{"license.html":{}}}],["doc",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["docker",{"_index":1295,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1411,"title":{},"body":{"index.html":{}}}],["document",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documentbuilder",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dotenv",{"_index":432,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["dotenvparseoutput",{"_index":377,"title":{},"body":{"classes/ConfigService.html":{}}}],["dpage/pgadmin4",{"_index":1373,"title":{},"body":{"index.html":{}}}],["dto/create",{"_index":200,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["dto/request",{"_index":716,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["dto/response",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/shopping",{"_index":933,"title":{},"body":{"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["dto/update",{"_index":1063,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["e",{"_index":1359,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":1392,"title":{},"body":{"index.html":{}}}],["each",{"_index":400,"title":{},"body":{"classes/ConfigService.html":{}}}],["edit",{"_index":957,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["editrequestdto",{"_index":1110,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.city",{"_index":1137,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.firstname",{"_index":1145,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.lastname",{"_index":1147,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.number",{"_index":1141,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.role",{"_index":1149,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.street",{"_index":1139,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.telephone",{"_index":1151,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.zipcode",{"_index":1143,"title":{},"body":{"injectables/UsersService.html":{}}}],["email",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{}}}],["encrypted",{"_index":1316,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":1400,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":385,"title":{},"body":{"classes/ConfigService.html":{}}}],["entities",{"_index":540,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["entity",{"_index":170,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/RequestArticle.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["entity.requester",{"_index":734,"title":{},"body":{"controllers/RequestController.html":{}}}],["enum",{"_index":638,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["enumerations",{"_index":1277,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1218,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["env.development",{"_index":1336,"title":{},"body":{"index.html":{}}}],["envconfig",{"_index":357,"title":{},"body":{"classes/ConfigService.html":{}}}],["environment",{"_index":401,"title":{},"body":{"classes/ConfigService.html":{}}}],["envvarsschema",{"_index":456,"title":{},"body":{"classes/ConfigService.html":{}}}],["err",{"_index":584,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":494,"title":{},"body":{"classes/ConfigService.html":{}}}],["error(`config",{"_index":498,"title":{},"body":{"classes/ConfigService.html":{}}}],["error.message",{"_index":499,"title":{},"body":{"classes/ConfigService.html":{}}}],["establish",{"_index":578,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["etc",{"_index":1408,"title":{},"body":{"index.html":{}}}],["event",{"_index":1495,"title":{},"body":{"license.html":{}}}],["example",{"_index":576,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"classes/RegisterPayload.html":{},"index.html":{}}}],["example.sql",{"_index":1416,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":783,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["executes",{"_index":1384,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":568,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exist",{"_index":741,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{}}}],["existing",{"_index":183,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["exists",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["exit",{"_index":1324,"title":{},"body":{"index.html":{}}}],["exp",{"_index":587,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["expiration",{"_index":880,"title":{},"body":{"classes/ResponseTokenDto.html":{},"index.html":{}}}],["expiresin",{"_index":300,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ResponseTokenDto.html":{}}}],["export",{"_index":33,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1194,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":519,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["externals",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["extractjwt",{"_index":597,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":603,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":552,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestFillableFields-1.html":{},"injectables/RequestService.html":{},"classes/ShoppingListFormDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["false})@column({length",{"_index":1043,"title":{},"body":{"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["filepath",{"_index":376,"title":{},"body":{"classes/ConfigService.html":{}}}],["files",{"_index":1461,"title":{},"body":{"license.html":{}}}],["findall",{"_index":180,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["findone",{"_index":902,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["findone(@param('id",{"_index":1069,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":232,"title":{},"body":{"injectables/ArticlesService.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["findrequest",{"_index":805,"title":{},"body":{"injectables/RequestService.html":{}}}],["findrequest(id",{"_index":814,"title":{},"body":{"injectables/RequestService.html":{}}}],["findshoppinglist",{"_index":903,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["findshoppinglist(id",{"_index":921,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["firstname",{"_index":629,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["fitness",{"_index":1491,"title":{},"body":{"license.html":{}}}],["fixtures",{"_index":1422,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1306,"title":{},"body":{"index.html":{}}}],["following",{"_index":1347,"title":{},"body":{"index.html":{},"license.html":{}}}],["forbidden",{"_index":1071,"title":{},"body":{"controllers/UserController.html":{}}}],["forbidden'})@apiparam({name",{"_index":1058,"title":{},"body":{"controllers/UserController.html":{}}}],["forbiddenexception",{"_index":931,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["forbiddenexception('you",{"_index":955,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["form",{"_index":992,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["form.dto",{"_index":717,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["form.dto.ts",{"_index":509,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestFormDto.html":{},"classes/ShoppingListFormDto.html":{},"coverage.html":{}}}],["form.dto.ts:10",{"_index":516,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/ShoppingListFormDto.html":{}}}],["form.dto.ts:17",{"_index":513,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/ShoppingListFormDto.html":{}}}],["form.dto.ts:24",{"_index":662,"title":{},"body":{"classes/RequestArticleStatusDto.html":{}}}],["form.dto.ts:26",{"_index":794,"title":{},"body":{"classes/RequestFormDto.html":{}}}],["form.dto.ts:29",{"_index":793,"title":{},"body":{"classes/RequestFormDto.html":{}}}],["form.dto.ts:31",{"_index":795,"title":{},"body":{"classes/RequestFormDto.html":{}}}],["form.dto.ts:33",{"_index":796,"title":{},"body":{"classes/RequestFormDto.html":{}}}],["format",{"_index":1404,"title":{},"body":{"index.html":{}}}],["forroutes",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":691,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["found'})@apibadrequestresponse({description",{"_index":1052,"title":{},"body":{"controllers/UserController.html":{}}}],["found'})@apiforbiddenresponse({description",{"_index":919,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["free",{"_index":1455,"title":{},"body":{"license.html":{}}}],["from(value",{"_index":620,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["from.requests",{"_index":1016,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["from.requests.foreach(reqid",{"_index":1017,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["from.status",{"_index":1015,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["fs",{"_index":434,"title":{},"body":{"classes/ConfigService.html":{}}}],["function",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1290,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1477,"title":{},"body":{"license.html":{}}}],["generatetoken",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetoken(user",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["generic",{"_index":380,"title":{},"body":{"classes/ConfigService.html":{}}}],["get(':id",{"_index":939,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apiokresponse({description",{"_index":917,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["get(':requestid",{"_index":736,"title":{},"body":{"controllers/RequestController.html":{}}}],["get(':requestid')@apiokresponse({description",{"_index":688,"title":{},"body":{"controllers/RequestController.html":{}}}],["get('listen",{"_index":340,"title":{},"body":{"controllers/CallController.html":{}}}],["get('listen')@apiokresponse({description",{"_index":333,"title":{},"body":{"controllers/CallController.html":{}}}],["get('webhook",{"_index":341,"title":{},"body":{"controllers/CallController.html":{}}}],["get('webhook')@apiokresponse({description",{"_index":336,"title":{},"body":{"controllers/CallController.html":{}}}],["get()@apiokresponse({description",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["get(id",{"_index":816,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["get(key",{"_index":378,"title":{},"body":{"classes/ConfigService.html":{}}}],["getall",{"_index":671,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["getall(onlymine",{"_index":676,"title":{},"body":{"controllers/RequestController.html":{}}}],["getall(user",{"_index":818,"title":{},"body":{"injectables/RequestService.html":{}}}],["getallbyuser",{"_index":974,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["getallbyuser(userid",{"_index":984,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["getbyemail",{"_index":1095,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyemail(email",{"_index":1104,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyemailandpass",{"_index":1096,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyemailandpass(email",{"_index":1106,"title":{},"body":{"injectables/UsersService.html":{}}}],["getdatabasehost",{"_index":409,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdatabasename",{"_index":417,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdatabasepassword",{"_index":415,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdatabaseport",{"_index":411,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdatabasetype",{"_index":407,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdatabaseusername",{"_index":413,"title":{},"body":{"classes/ConfigService.html":{}}}],["getgoogleauthclientid",{"_index":421,"title":{},"body":{"classes/ConfigService.html":{}}}],["getgoogleauthclientsecret",{"_index":423,"title":{},"body":{"classes/ConfigService.html":{}}}],["getgoogleauthredirecturi",{"_index":425,"title":{},"body":{"classes/ConfigService.html":{}}}],["getisdev",{"_index":397,"title":{},"body":{"classes/ConfigService.html":{}}}],["getisprod",{"_index":403,"title":{},"body":{"classes/ConfigService.html":{}}}],["getistest",{"_index":405,"title":{},"body":{"classes/ConfigService.html":{}}}],["getjwtsecret",{"_index":419,"title":{},"body":{"classes/ConfigService.html":{}}}],["getone",{"_index":1123,"title":{},"body":{"injectables/UsersService.html":{}}}],["getsinglerequest",{"_index":672,"title":{},"body":{"controllers/RequestController.html":{}}}],["getsinglerequest(requestid",{"_index":687,"title":{},"body":{"controllers/RequestController.html":{}}}],["getter",{"_index":381,"title":{},"body":{"classes/ConfigService.html":{}}}],["getters",{"_index":399,"title":{},"body":{"classes/ConfigService.html":{}}}],["getting",{"_index":1292,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettwillioaccountssid",{"_index":427,"title":{},"body":{"classes/ConfigService.html":{}}}],["gettwillioauthtoken",{"_index":429,"title":{},"body":{"classes/ConfigService.html":{}}}],["getuserlists",{"_index":904,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["getuserlists(@requser",{"_index":937,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["getuserlists(user",{"_index":923,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["git",{"_index":1420,"title":{},"body":{"index.html":{}}}],["gives",{"_index":1405,"title":{},"body":{"index.html":{}}}],["glob",{"_index":543,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["googleauthclientid",{"_index":369,"title":{},"body":{"classes/ConfigService.html":{}}}],["googleauthclientsecret",{"_index":370,"title":{},"body":{"classes/ConfigService.html":{}}}],["googleauthredirecturi",{"_index":371,"title":{},"body":{"classes/ConfigService.html":{}}}],["granted",{"_index":1454,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1514,"title":{},"body":{"modules.html":{}}}],["great",{"_index":1432,"title":{},"body":{"index.html":{}}}],["guard",{"_index":720,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["guard.ts",{"_index":567,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["handlerequest(err",{"_index":583,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hashing",{"_index":1426,"title":{},"body":{"index.html":{}}}],["hbs",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["headers",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helmet",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["helper",{"_index":1030,"title":{},"body":{"classes/UpdateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["here",{"_index":575,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hereby",{"_index":1453,"title":{},"body":{"license.html":{}}}],["high",{"_index":786,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["holders",{"_index":1497,"title":{},"body":{"license.html":{}}}],["host",{"_index":531,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["http://localhost:3000/api/docs",{"_index":1402,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com/middleware",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/nestjs/nest/issues/711",{"_index":547,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["husky",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["iat",{"_index":588,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["id",{"_index":160,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"classes/CreateRequestArticleDto.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":667,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/ShoppingListFormDto.html":{}}}],["ignore",{"_index":581,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["ignored",{"_index":1419,"title":{},"body":{"index.html":{}}}],["ignoreexpiration",{"_index":604,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1354,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":1429,"title":{},"body":{"index.html":{}}}],["implements",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"classes/PasswordTransformer.html":{}}}],["implicit",{"_index":582,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["implied",{"_index":1487,"title":{},"body":{"license.html":{}}}],["import",{"_index":27,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["importing",{"_index":539,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["imports",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":1482,"title":{},"body":{"license.html":{}}}],["including",{"_index":392,"title":{},"body":{"classes/ConfigService.html":{},"controllers/RequestController.html":{},"license.html":{}}}],["incremented",{"_index":163,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":775,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["inject",{"_index":302,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["injectable",{"_index":149,"title":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/CallService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/CallService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":150,"title":{},"body":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/CallService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":223,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(article",{"_index":224,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["injectrepository(requestentity",{"_index":832,"title":{},"body":{"injectables/RequestService.html":{}}}],["injectrepository(shoppinglist",{"_index":994,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["injectrepository(user",{"_index":1115,"title":{},"body":{"injectables/UsersService.html":{}}}],["insertnewshoppinglist",{"_index":905,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["insertnewshoppinglist(createrequestdto",{"_index":925,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["insertone",{"_index":182,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["insertone(@body",{"_index":208,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["insertone(createarticledto",{"_index":189,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["insertrequestwitharticles",{"_index":673,"title":{},"body":{"controllers/RequestController.html":{}}}],["insertrequestwitharticles(createrequestdto",{"_index":694,"title":{},"body":{"controllers/RequestController.html":{}}}],["install",{"_index":1300,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1303,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1438,"title":{},"body":{"index.html":{}}}],["integer",{"_index":174,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"controllers/UserController.html":{}}}],["integer'})@column",{"_index":770,"title":{},"body":{"classes/RequestEntity.html":{}}}],["integer'})@primarygeneratedcolumn",{"_index":164,"title":{},"body":{"classes/Article.html":{},"classes/RequestEntity.html":{}}}],["integrated",{"_index":1398,"title":{},"body":{"index.html":{}}}],["interface",{"_index":556,"title":{"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{}},"body":{"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["interfaces",{"_index":558,"title":{},"body":{"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"overview.html":{}}}],["irequestuser",{"_index":557,"title":{"interfaces/IRequestUser.html":{}},"body":{"interfaces/IRequestUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isdev",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["isemail",{"_index":613,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["isexpired",{"_index":607,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["isnotempty",{"_index":614,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{}}}],["isprod",{"_index":360,"title":{},"body":{"classes/ConfigService.html":{}}}],["isstring",{"_index":505,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["istest",{"_index":361,"title":{},"body":{"classes/ConfigService.html":{}}}],["it's",{"_index":1418,"title":{},"body":{"index.html":{}}}],["items",{"_index":512,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestFormDto.html":{}}}],["javascript",{"_index":390,"title":{},"body":{"classes/ConfigService.html":{}}}],["jest",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["joi",{"_index":435,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["joi.boolean",{"_index":482,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.number",{"_index":480,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.object",{"_index":458,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.objectschema",{"_index":457,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.string",{"_index":460,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.string().required",{"_index":489,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.validate",{"_index":497,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.validationoptions",{"_index":492,"title":{},"body":{"classes/ConfigService.html":{}}}],["join",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["join(__dirname",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["json",{"_index":1403,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":294,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/ResponseTokenDto.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy",{"_index":291,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_secret=jwt_awesome_key",{"_index":1333,"title":{},"body":{"index.html":{}}}],["jwtauthguard",{"_index":565,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":602,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":287,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":295,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":585,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtsecret",{"_index":368,"title":{},"body":{"classes/ConfigService.html":{}}}],["jwtservice",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":285,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":382,"title":{},"body":{"classes/ConfigService.html":{}}}],["kind",{"_index":1486,"title":{},"body":{"license.html":{}}}],["l",{"_index":1319,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":630,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["legend",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":34,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["liability",{"_index":1501,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1498,"title":{},"body":{"license.html":{}}}],["license",{"_index":1447,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":1465,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1488,"title":{},"body":{"license.html":{}}}],["line",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["list",{"_index":515,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["list'})@apinotfoundresponse({description",{"_index":911,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/ShoppingListModule.html":{}}}],["list.controller.ts",{"_index":899,"title":{},"body":{"controllers/ShoppingListController.html":{},"coverage.html":{}}}],["list.controller.ts:110",{"_index":916,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:119",{"_index":922,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:47",{"_index":924,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:55",{"_index":920,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:65",{"_index":927,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:77",{"_index":930,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:91",{"_index":912,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.entity",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{}}}],["list.entity.ts",{"_index":884,"title":{},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"coverage.html":{}}}],["list.entity.ts:12",{"_index":889,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:16",{"_index":891,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:21",{"_index":887,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:26",{"_index":895,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:34",{"_index":893,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:42",{"_index":892,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:46",{"_index":959,"title":{},"body":{"classes/ShoppingListFillableFields.html":{}}}],["list.module",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["list.module.ts",{"_index":964,"title":{},"body":{"modules/ShoppingListModule.html":{}}}],["list.service",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{}}}],["list.service.ts",{"_index":973,"title":{},"body":{"injectables/ShoppingListService.html":{},"coverage.html":{}}}],["list.service.ts:15",{"_index":978,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:23",{"_index":983,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:31",{"_index":982,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:41",{"_index":985,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:48",{"_index":991,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:53",{"_index":981,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:64",{"_index":989,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:76",{"_index":987,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["listen",{"_index":330,"title":{},"body":{"controllers/CallController.html":{}}}],["lists",{"_index":958,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["loader",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":1345,"title":{},"body":{"index.html":{}}}],["logger",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["logger('auth",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger('request",{"_index":725,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["logger('shoppinglist",{"_index":936,"title":{},"body":{"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["logger('user",{"_index":1067,"title":{},"body":{"controllers/UserController.html":{}}}],["loggermiddleware",{"_index":1169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":553,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["logic",{"_index":574,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["login",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["login(@body",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(credentials",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["login.payload",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["loginpayload",{"_index":242,"title":{"classes/LoginPayload.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"coverage.html":{}}}],["look",{"_index":1410,"title":{},"body":{"index.html":{}}}],["low",{"_index":765,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["main/models/address.model",{"_index":517,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["manytoone",{"_index":655,"title":{},"body":{"classes/RequestArticle.html":{},"classes/RequestFillableFields-1.html":{},"classes/ShoppingListRequest.html":{}}}],["manytoone(undefined",{"_index":653,"title":{},"body":{"classes/RequestArticle.html":{},"classes/ShoppingListRequest.html":{}}}],["mariadb",{"_index":468,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["markarticleasdone",{"_index":674,"title":{},"body":{"controllers/RequestController.html":{}}}],["markarticleasdone(requestid",{"_index":700,"title":{},"body":{"controllers/RequestController.html":{}}}],["matching",{"_index":36,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":785,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["merchantability",{"_index":1490,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1468,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["migrations",{"_index":549,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["minlength",{"_index":615,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["minlength(5",{"_index":616,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["miscellaneous",{"_index":1276,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1448,"title":{},"body":{"license.html":{}}}],["mode",{"_index":1388,"title":{},"body":{"index.html":{}}}],["models/address.model",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["modify",{"_index":1467,"title":{},"body":{"license.html":{}}}],["module",{"_index":57,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":59,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":469,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{},"index.html":{}}}],["mongoose",{"_index":1437,"title":{},"body":{"index.html":{}}}],["more",{"_index":485,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["mount",{"_index":1380,"title":{},"body":{"index.html":{}}}],["mssql",{"_index":470,"title":{},"body":{"classes/ConfigService.html":{}}}],["mysql",{"_index":471,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["name",{"_index":156,"title":{},"body":{"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"classes/RequestArticle.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["name=pgdata",{"_index":1351,"title":{},"body":{"index.html":{}}}],["native",{"_index":476,"title":{},"body":{"classes/ConfigService.html":{}}}],["nativescript",{"_index":472,"title":{},"body":{"classes/ConfigService.html":{}}}],["nearbuy",{"_index":1356,"title":{},"body":{"index.html":{}}}],["needed",{"_index":386,"title":{},"body":{"classes/ConfigService.html":{}}}],["nestjs",{"_index":1434,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":288,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":290,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/ArticlesService.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"modules/ShoppingListModule.html":{},"injectables/ShoppingListService.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["network",{"_index":1368,"title":{},"body":{"index.html":{}}}],["new",{"_index":227,"title":{},"body":{"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["newarticle",{"_index":841,"title":{},"body":{"injectables/RequestService.html":{}}}],["newarticle.articlecount",{"_index":844,"title":{},"body":{"injectables/RequestService.html":{}}}],["newarticle.articledone",{"_index":846,"title":{},"body":{"injectables/RequestService.html":{}}}],["newarticle.articleid",{"_index":842,"title":{},"body":{"injectables/RequestService.html":{}}}],["newrequest",{"_index":1004,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["newrequest.requestid",{"_index":1005,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["newuser",{"_index":1133,"title":{},"body":{"injectables/UsersService.html":{}}}],["next",{"_index":1330,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["nextfunction",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["node_env",{"_index":459,"title":{},"body":{"classes/ConfigService.html":{}}}],["nodejs",{"_index":1294,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["none",{"_index":1289,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noninfringement",{"_index":1494,"title":{},"body":{"license.html":{}}}],["notacceptableexception",{"_index":1111,"title":{},"body":{"injectables/UsersService.html":{}}}],["note",{"_index":1341,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":707,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('shopping",{"_index":996,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["notfoundexception('this",{"_index":740,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["notfoundexception('user",{"_index":1117,"title":{},"body":{"injectables/UsersService.html":{}}}],["notice",{"_index":1480,"title":{},"body":{"license.html":{}}}],["nullable",{"_index":20,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["number",{"_index":11,"title":{},"body":{"classes/AddressModel.html":{},"modules/AppModule.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/CreateRequestArticleDto.html":{},"interfaces/JwtPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{}}}],["number(articleid",{"_index":869,"title":{},"body":{"injectables/RequestService.html":{}}}],["number(configservice.get('jwt_expiration_time",{"_index":301,"title":{},"body":{"modules/AuthModule.html":{}}}],["number(requestid",{"_index":1009,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["number(this.configservice.get('jwt_expiration_time",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["number(this.envconfig.database_port",{"_index":446,"title":{},"body":{"classes/ConfigService.html":{}}}],["object",{"_index":391,"title":{},"body":{"classes/ConfigService.html":{}}}],["obtaining",{"_index":1458,"title":{},"body":{"license.html":{}}}],["one",{"_index":1442,"title":{},"body":{"index.html":{}}}],["onetomany",{"_index":781,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["ongoing",{"_index":1284,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onlymine",{"_index":678,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["optional",{"_index":9,"title":{},"body":{"classes/AddressModel.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oracle",{"_index":473,"title":{},"body":{"classes/ConfigService.html":{}}}],["ormconfig.json",{"_index":1415,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1506,"title":{},"body":{"license.html":{}}}],["out",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["over",{"_index":1310,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1515,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":885,"title":{},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"injectables/ShoppingListService.html":{},"index.html":{}}}],["ownerthen",{"_index":1321,"title":{},"body":{"index.html":{}}}],["p",{"_index":1357,"title":{},"body":{"index.html":{}}}],["package",{"_index":1187,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":708,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["param('articleid",{"_index":745,"title":{},"body":{"controllers/RequestController.html":{}}}],["param('id",{"_index":941,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["param('requestid",{"_index":738,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["param('shoppinglistid",{"_index":947,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["parameters",{"_index":155,"title":{},"body":{"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parse",{"_index":431,"title":{},"body":{"classes/ConfigService.html":{}}}],["parse(readfilesync(filepath",{"_index":436,"title":{},"body":{"classes/ConfigService.html":{}}}],["parse(request.url).path",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parsedconfig",{"_index":396,"title":{},"body":{"classes/ConfigService.html":{}}}],["particular",{"_index":1492,"title":{},"body":{"license.html":{}}}],["passhash",{"_index":1124,"title":{},"body":{"injectables/UsersService.html":{}}}],["passport",{"_index":599,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["passportmodule",{"_index":289,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register({defaultstrategy",{"_index":293,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":596,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":600,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passreqtocallback",{"_index":606,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["password).digest('hex",{"_index":1126,"title":{},"body":{"injectables/UsersService.html":{}}}],["password.transformer",{"_index":1045,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["passwordtransformer",{"_index":617,"title":{"classes/PasswordTransformer.html":{}},"body":{"classes/PasswordTransformer.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"coverage.html":{}}}],["path",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["paths",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["pattern",{"_index":544,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["payload",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["peer",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["permission",{"_index":1452,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1475,"title":{},"body":{"license.html":{}}}],["person",{"_index":1457,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1476,"title":{},"body":{"license.html":{}}}],["pg",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["pgadmin",{"_index":1375,"title":{},"body":{"index.html":{}}}],["pgadmin_default_email=user@domain.com",{"_index":1371,"title":{},"body":{"index.html":{}}}],["pgadmin_default_password=supersecret",{"_index":1372,"title":{},"body":{"index.html":{}}}],["pgdata:/var/lib/postgresql/data",{"_index":1364,"title":{},"body":{"index.html":{}}}],["phonenumber",{"_index":522,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{}}}],["please",{"_index":1409,"title":{},"body":{"index.html":{}}}],["populaterequest",{"_index":806,"title":{},"body":{"injectables/RequestService.html":{}}}],["populaterequest(request",{"_index":820,"title":{},"body":{"injectables/RequestService.html":{}}}],["populateshoppinglist",{"_index":975,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["populateshoppinglist(from",{"_index":986,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["port",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{}}}],["portions",{"_index":1484,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":1406,"title":{},"body":{"index.html":{}}}],["post",{"_index":196,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["post('login",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apiokresponse({description",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apicreatedresponse({description",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apicreatedresponse({description",{"_index":191,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/ShoppingListController.html":{}}}],["postgis",{"_index":1353,"title":{},"body":{"index.html":{}}}],["postgis/postgis:12",{"_index":1365,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":474,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["postgres_db=dbname",{"_index":1361,"title":{},"body":{"index.html":{}}}],["postgres_password=secretpassword",{"_index":1360,"title":{},"body":{"index.html":{}}}],["postgres_user=username",{"_index":1362,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":1296,"title":{},"body":{"index.html":{}}}],["preconfigured",{"_index":1423,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":179,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["prettier",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["primarygeneratedcolumn",{"_index":171,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["primarygeneratedcolumn()@apihideproperty",{"_index":967,"title":{},"body":{"classes/ShoppingListRequest.html":{}}}],["priority",{"_index":749,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["private",{"_index":225,"title":{},"body":{"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["process.env.port",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":442,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["project",{"_index":1381,"title":{},"body":{"index.html":{}}}],["promise",{"_index":188,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["provide",{"_index":353,"title":{},"body":{"modules/ConfigModule.html":{}}}],["provided",{"_index":1132,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{},"license.html":{}}}],["providers",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["provision",{"_index":462,"title":{},"body":{"classes/ConfigService.html":{}}}],["psql",{"_index":1314,"title":{},"body":{"index.html":{}}}],["public",{"_index":439,"title":{},"body":{"classes/ConfigService.html":{}}}],["publish",{"_index":1469,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1493,"title":{},"body":{"license.html":{}}}],["put",{"_index":709,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["put(':id",{"_index":944,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["put(':id')@apiokresponse({description",{"_index":929,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["put(':requestid",{"_index":742,"title":{},"body":{"controllers/RequestController.html":{}}}],["put(':requestid')@apiokresponse({description",{"_index":705,"title":{},"body":{"controllers/RequestController.html":{}}}],["put(':requestid/:articleid",{"_index":744,"title":{},"body":{"controllers/RequestController.html":{}}}],["put(':requestid/:articleid')@apiokresponse({description",{"_index":702,"title":{},"body":{"controllers/RequestController.html":{}}}],["put(':shoppinglistid/:requestid",{"_index":946,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["put(':shoppinglistid/:requestid')@apiokresponse({description",{"_index":908,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["query",{"_index":710,"title":{},"body":{"controllers/RequestController.html":{},"miscellaneous/variables.html":{}}}],["query('onlymine",{"_index":726,"title":{},"body":{"controllers/RequestController.html":{}}}],["query('zipcode",{"_index":727,"title":{},"body":{"controllers/RequestController.html":{}}}],["r",{"_index":730,"title":{},"body":{"controllers/RequestController.html":{}}}],["r.requester",{"_index":731,"title":{},"body":{"controllers/RequestController.html":{}}}],["r.requestid",{"_index":1003,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["react",{"_index":475,"title":{},"body":{"classes/ConfigService.html":{}}}],["readfilesync",{"_index":433,"title":{},"body":{"classes/ConfigService.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["received",{"_index":514,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestFormDto.html":{}}}],["reflect",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(payload",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["register.payload",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerpayload",{"_index":250,"title":{"classes/RegisterPayload.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterPayload.html":{},"coverage.html":{}}}],["registration",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["relations",{"_index":834,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{}}}],["remove",{"_index":213,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["remove(id",{"_index":221,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["removerequest",{"_index":976,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["removerequest(requestid",{"_index":988,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["replied",{"_index":685,"title":{},"body":{"controllers/RequestController.html":{}}}],["replied.'})@apiquery({name",{"_index":680,"title":{},"body":{"controllers/RequestController.html":{}}}],["repository",{"_index":215,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["req",{"_index":563,"title":{},"body":{"interfaces/IRequestUser.html":{},"miscellaneous/variables.html":{}}}],["req.user",{"_index":564,"title":{},"body":{"interfaces/IRequestUser.html":{},"miscellaneous/variables.html":{}}}],["reqid",{"_index":1019,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["request",{"_index":186,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"interfaces/IRequestUser.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request'})@apiforbiddenresponse({description",{"_index":910,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["request'})@apinotacceptableresponse({description",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["request'})@apinotfoundresponse({description",{"_index":690,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["request'})@apiparam({name",{"_index":1053,"title":{},"body":{"controllers/UserController.html":{}}}],["request'})@apiunauthorizedresponse({description",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.additionalrequest",{"_index":848,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.articles",{"_index":657,"title":{},"body":{"classes/RequestArticle.html":{},"classes/RequestFillableFields-1.html":{},"injectables/RequestService.html":{}}}],["request.articles.find((v",{"_index":867,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.articles.push(newarticle",{"_index":847,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.city",{"_index":854,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.controller",{"_index":802,"title":{},"body":{"modules/RequestModule.html":{}}}],["request.deliverycomment",{"_index":852,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.entity",{"_index":528,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/RequestArticle.html":{},"controllers/RequestController.html":{},"classes/RequestFillableFields-1.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"injectables/ShoppingListService.html":{}}}],["request.entity.ts",{"_index":966,"title":{},"body":{"classes/ShoppingListRequest.html":{},"coverage.html":{}}}],["request.entity.ts:11",{"_index":968,"title":{},"body":{"classes/ShoppingListRequest.html":{}}}],["request.entity.ts:15",{"_index":969,"title":{},"body":{"classes/ShoppingListRequest.html":{}}}],["request.entity.ts:21",{"_index":970,"title":{},"body":{"classes/ShoppingListRequest.html":{}}}],["request.number",{"_index":858,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.phonenumber",{"_index":850,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.requesterid",{"_index":836,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.service",{"_index":715,"title":{},"body":{"controllers/RequestController.html":{},"modules/RequestModule.html":{}}}],["request.street",{"_index":856,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.zipcode",{"_index":860,"title":{},"body":{"injectables/RequestService.html":{}}}],["request/request.controller",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["request/request.entity",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["request/request.module",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/ShoppingListModule.html":{}}}],["request/request.service",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"controllers/ShoppingListController.html":{}}}],["request/requestarticle.entity",{"_index":526,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["requestarticle",{"_index":525,"title":{"classes/RequestArticle.html":{}},"body":{"modules/DatabaseModule.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["requestarticle.entity",{"_index":782,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"injectables/RequestService.html":{}}}],["requestarticle.request",{"_index":789,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["requestarticlestatusdto",{"_index":660,"title":{"classes/RequestArticleStatusDto.html":{}},"body":{"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/ShoppingListFormDto.html":{},"coverage.html":{}}}],["requestcontroller",{"_index":86,"title":{"controllers/RequestController.html":{}},"body":{"modules/AppModule.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"coverage.html":{}}}],["requestentity",{"_index":99,"title":{"classes/RequestEntity.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"classes/RequestArticle.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["requestentity})@apibadrequestresponse({description",{"_index":689,"title":{},"body":{"controllers/RequestController.html":{}}}],["requestentity})@post",{"_index":697,"title":{},"body":{"controllers/RequestController.html":{}}}],["requester",{"_index":659,"title":{},"body":{"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{}}}],["requesterid",{"_index":750,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["requestfillablefields",{"_index":658,"title":{"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{}},"body":{"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"coverage.html":{}}}],["requestformdto",{"_index":518,"title":{"classes/RequestFormDto.html":{}},"body":{"classes/CreateRequestArticleDto.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["requesthandler",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestid",{"_index":693,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{}}}],["requesting",{"_index":679,"title":{},"body":{"controllers/RequestController.html":{}}}],["requestmethod.all",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmodule",{"_index":73,"title":{"modules/RequestModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules.html":{},"overview.html":{}}}],["requestrepository",{"_index":811,"title":{},"body":{"injectables/RequestService.html":{}}}],["requests",{"_index":668,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{}}}],["requests.map(async",{"_index":729,"title":{},"body":{"controllers/RequestController.html":{}}}],["requestservice",{"_index":77,"title":{"injectables/RequestService.html":{}},"body":{"modules/AppModule.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"coverage.html":{},"overview.html":{}}}],["requeststatus",{"_index":773,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"miscellaneous/enumerations.html":{}}}],["requeststatus.new",{"_index":788,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["required",{"_index":479,"title":{},"body":{"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"classes/ShoppingListFormDto.html":{}}}],["requser",{"_index":561,"title":{},"body":{"interfaces/IRequestUser.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsetokendto",{"_index":265,"title":{"classes/ResponseTokenDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResponseTokenDto.html":{},"coverage.html":{}}}],["responsetokendto})@apibadrequestresponse({description",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["restful",{"_index":1395,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":1464,"title":{},"body":{"license.html":{}}}],["result",{"_index":35,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":37,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"classes/PasswordTransformer.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["rights",{"_index":1466,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":631,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["role.ts",{"_index":1282,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roles",{"_index":829,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles('admin",{"_index":1112,"title":{},"body":{"injectables/UsersService.html":{}}}],["roles('helper",{"_index":993,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["roles('user",{"_index":831,"title":{},"body":{"injectables/RequestService.html":{}}}],["root",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["rootpath",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rules",{"_index":487,"title":{},"body":{"classes/ConfigService.html":{}}}],["run",{"_index":1352,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":682,"title":{},"body":{"controllers/RequestController.html":{}}}],["seconds",{"_index":878,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["secret",{"_index":297,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":605,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secretpassword",{"_index":1317,"title":{},"body":{"index.html":{}}}],["secure",{"_index":1428,"title":{},"body":{"index.html":{}}}],["see",{"_index":956,"title":{},"body":{"controllers/ShoppingListController.html":{},"index.html":{}}}],["seeding",{"_index":1421,"title":{},"body":{"index.html":{}}}],["seeker",{"_index":1031,"title":{},"body":{"classes/UpdateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["sell",{"_index":1473,"title":{},"body":{"license.html":{}}}],["server",{"_index":1312,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":579,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["set",{"_index":388,"title":{},"body":{"classes/ConfigService.html":{},"controllers/RequestController.html":{},"index.html":{}}}],["setdescription(swagger_api_description",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('roles",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setparameter('email",{"_index":1122,"title":{},"body":{"injectables/UsersService.html":{}}}],["setparameter('password",{"_index":1128,"title":{},"body":{"injectables/UsersService.html":{}}}],["settitle(swagger_api_name",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setupswagger",{"_index":1184,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setversion(swagger_api_current_version",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":1481,"title":{},"body":{"license.html":{}}}],["shell",{"_index":1325,"title":{},"body":{"index.html":{}}}],["shopping",{"_index":664,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{}}}],["shoppinglist",{"_index":114,"title":{"classes/ShoppingList.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{}}}],["shoppinglist.owner",{"_index":954,"title":{},"body":{"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["shoppinglist.requests",{"_index":972,"title":{},"body":{"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{}}}],["shoppinglist.requests.find(r",{"_index":1002,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglist.requests.findindex(r",{"_index":1008,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglist.requests.push(newrequest",{"_index":1006,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglist.requests.splice(index",{"_index":1012,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglist.status",{"_index":998,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglist/dto/shopping",{"_index":721,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["shoppinglist/shopping",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["shoppinglistcontroller",{"_index":87,"title":{"controllers/ShoppingListController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{},"coverage.html":{}}}],["shoppinglistcontroller.logger.log(request",{"_index":949,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["shoppinglistfillablefields",{"_index":898,"title":{"classes/ShoppingListFillableFields.html":{}},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"coverage.html":{}}}],["shoppinglistformdto",{"_index":666,"title":{"classes/ShoppingListFormDto.html":{}},"body":{"classes/RequestArticleStatusDto.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{}}}],["shoppinglistid",{"_index":913,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["shoppinglistmodule",{"_index":74,"title":{"modules/ShoppingListModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ShoppingListModule.html":{},"modules.html":{},"overview.html":{}}}],["shoppinglistrepository",{"_index":979,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglistrequest",{"_index":527,"title":{"classes/ShoppingListRequest.html":{}},"body":{"modules/DatabaseModule.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{}}}],["shoppinglistrequest.shoppinglist",{"_index":897,"title":{},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["shoppinglistservice",{"_index":78,"title":{"injectables/ShoppingListService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{},"overview.html":{}}}],["shoppinglistservice.logger.log(index",{"_index":1010,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglistservice.logger.log(shoppinglist",{"_index":1011,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppingliststatus",{"_index":663,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{},"miscellaneous/enumerations.html":{}}}],["shoppingliststatus.active",{"_index":669,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{}}}],["shoppinglist})@apibadrequestresponse({description",{"_index":909,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["shoppinglist})@apinotfoundresponse({description",{"_index":918,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["signoptions",{"_index":299,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice(0",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":1459,"title":{},"body":{"license.html":{}}}],["something",{"_index":1427,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["sources",{"_index":1431,"title":{},"body":{"index.html":{}}}],["spin",{"_index":1342,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":477,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["sqljs",{"_index":478,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/.../constants.ts",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.middleware.ts",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1291,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../request",{"_index":1278,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../roles.decorator.ts",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shopping",{"_index":1280,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":1281,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.decorator.ts",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1157,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/modules/**/*.entity{.ts,.js",{"_index":548,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/modules/**/*.migration{.ts,.js",{"_index":550,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/modules/articles/article.entity.ts",{"_index":159,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"coverage.html":{}}}],["src/modules/articles/article.entity.ts:13",{"_index":165,"title":{},"body":{"classes/Article.html":{}}}],["src/modules/articles/article.entity.ts:19",{"_index":169,"title":{},"body":{"classes/Article.html":{}}}],["src/modules/articles/article.entity.ts:23",{"_index":177,"title":{},"body":{"classes/ArticleFillableFields.html":{}}}],["src/modules/articles/articles.controller.ts",{"_index":178,"title":{},"body":{"controllers/ArticlesController.html":{},"coverage.html":{}}}],["src/modules/articles/articles.controller.ts:16",{"_index":194,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.controller.ts:26",{"_index":187,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.modules.ts",{"_index":1091,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/articles/articles.service.ts",{"_index":211,"title":{},"body":{"injectables/ArticlesService.html":{},"coverage.html":{}}}],["src/modules/articles/articles.service.ts:14",{"_index":219,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/articles.service.ts:21",{"_index":220,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/articles.service.ts:29",{"_index":222,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/articles.service.ts:8",{"_index":216,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/dto/create",{"_index":500,"title":{},"body":{"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["src/modules/articles/interfaces/article.interface.ts",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:35",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:47",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":286,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:10",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:18",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:29",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/response",{"_index":874,"title":{},"body":{"classes/ResponseTokenDto.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.payload.ts",{"_index":586,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":590,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:10",{"_index":593,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:37",{"_index":595,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/login.payload.ts",{"_index":608,"title":{},"body":{"classes/LoginPayload.html":{},"coverage.html":{}}}],["src/modules/auth/login.payload.ts:12",{"_index":612,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/auth/login.payload.ts:7",{"_index":610,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/auth/register.payload.ts",{"_index":628,"title":{},"body":{"classes/RegisterPayload.html":{},"coverage.html":{}}}],["src/modules/auth/register.payload.ts:12",{"_index":635,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/register.payload.ts:16",{"_index":636,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/register.payload.ts:19",{"_index":641,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/register.payload.ts:24",{"_index":637,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/register.payload.ts:8",{"_index":633,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/call/call.controller.ts",{"_index":328,"title":{},"body":{"controllers/CallController.html":{},"coverage.html":{}}}],["src/modules/call/call.controller.ts:10",{"_index":332,"title":{},"body":{"controllers/CallController.html":{}}}],["src/modules/call/call.controller.ts:17",{"_index":335,"title":{},"body":{"controllers/CallController.html":{}}}],["src/modules/call/call.controller.ts:23",{"_index":337,"title":{},"body":{"controllers/CallController.html":{}}}],["src/modules/call/call.module.ts",{"_index":345,"title":{},"body":{"modules/CallModule.html":{}}}],["src/modules/call/call.service.ts",{"_index":348,"title":{},"body":{"injectables/CallService.html":{},"coverage.html":{}}}],["src/modules/common/decorators/roles.decorator.ts",{"_index":1167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/common/decorators/user.decorator.ts",{"_index":559,"title":{},"body":{"interfaces/IRequestUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/common/guards/jwt",{"_index":566,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/modules/common/middlewares/logger.middleware.ts",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/config/config.module.ts",{"_index":351,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/modules/config/config.service.ts",{"_index":356,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["src/modules/config/config.service.ts:16",{"_index":398,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:20",{"_index":404,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:24",{"_index":406,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:28",{"_index":408,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:32",{"_index":410,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:36",{"_index":412,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:40",{"_index":414,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:44",{"_index":416,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:48",{"_index":418,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:52",{"_index":420,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:56",{"_index":422,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:6",{"_index":375,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:60",{"_index":424,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:64",{"_index":426,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:68",{"_index":428,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:72",{"_index":430,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:79",{"_index":379,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:87",{"_index":384,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/database/database.module.ts",{"_index":523,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/modules/main/app.controller.ts",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/modules/main/app.controller.ts:13",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/main/app.module.ts",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/main/app.service.ts",{"_index":151,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/modules/main/app.service.ts:10",{"_index":157,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/main/app.service.ts:6",{"_index":154,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/main/models/address.model.ts",{"_index":6,"title":{},"body":{"classes/AddressModel.html":{},"coverage.html":{}}}],["src/modules/main/models/address.model.ts:10",{"_index":25,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/modules/main/models/address.model.ts:17",{"_index":24,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/modules/main/models/address.model.ts:24",{"_index":26,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/modules/main/models/address.model.ts:31",{"_index":23,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/modules/request/dto/request",{"_index":508,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestFormDto.html":{},"coverage.html":{}}}],["src/modules/request/request",{"_index":1283,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/request/request.controller.ts",{"_index":670,"title":{},"body":{"controllers/RequestController.html":{},"coverage.html":{}}}],["src/modules/request/request.controller.ts:106",{"_index":703,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:46",{"_index":686,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:64",{"_index":698,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:77",{"_index":692,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:92",{"_index":706,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.entity.ts",{"_index":747,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"coverage.html":{}}}],["src/modules/request/request.entity.ts:15",{"_index":761,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:20",{"_index":759,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:24",{"_index":771,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:33",{"_index":766,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:37",{"_index":752,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:41",{"_index":760,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:48",{"_index":763,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:56",{"_index":774,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:64",{"_index":756,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:68",{"_index":769,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:72",{"_index":790,"title":{},"body":{"classes/RequestFillableFields.html":{}}}],["src/modules/request/request.module.ts",{"_index":801,"title":{},"body":{"modules/RequestModule.html":{}}}],["src/modules/request/request.service.ts",{"_index":804,"title":{},"body":{"injectables/RequestService.html":{},"coverage.html":{}}}],["src/modules/request/request.service.ts:14",{"_index":810,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:22",{"_index":817,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:26",{"_index":813,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:34",{"_index":821,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:54",{"_index":819,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:67",{"_index":827,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:77",{"_index":824,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:84",{"_index":815,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/requestarticle.entity.ts",{"_index":645,"title":{},"body":{"classes/RequestArticle.html":{},"classes/RequestFillableFields-1.html":{},"coverage.html":{}}}],["src/modules/request/requestarticle.entity.ts:10",{"_index":652,"title":{},"body":{"classes/RequestArticle.html":{}}}],["src/modules/request/requestarticle.entity.ts:14",{"_index":651,"title":{},"body":{"classes/RequestArticle.html":{}}}],["src/modules/request/requestarticle.entity.ts:18",{"_index":648,"title":{},"body":{"classes/RequestArticle.html":{}}}],["src/modules/request/requestarticle.entity.ts:22",{"_index":650,"title":{},"body":{"classes/RequestArticle.html":{}}}],["src/modules/request/requestarticle.entity.ts:28",{"_index":654,"title":{},"body":{"classes/RequestArticle.html":{}}}],["src/modules/request/requestarticle.entity.ts:32",{"_index":792,"title":{},"body":{"classes/RequestFillableFields-1.html":{}}}],["src/modules/shoppinglist/dto/shopping",{"_index":661,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/ShoppingListFormDto.html":{},"coverage.html":{}}}],["src/modules/shoppinglist/shopping",{"_index":883,"title":{},"body":{"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/user/dto/update",{"_index":1022,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/user/password.transformer.ts",{"_index":618,"title":{},"body":{"classes/PasswordTransformer.html":{},"coverage.html":{}}}],["src/modules/user/password.transformer.ts:10",{"_index":623,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["src/modules/user/password.transformer.ts:6",{"_index":621,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["src/modules/user/user",{"_index":1288,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/user/user.controller.ts",{"_index":1050,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:29",{"_index":1055,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:42",{"_index":1054,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:56",{"_index":1059,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.entity.ts",{"_index":1032,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"coverage.html":{}}}],["src/modules/user/user.entity.ts:14",{"_index":1036,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:18",{"_index":1035,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:22",{"_index":1037,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:26",{"_index":1034,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:34",{"_index":1042,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:41",{"_index":1044,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:49",{"_index":1040,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:53",{"_index":1076,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:54",{"_index":1077,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:55",{"_index":1078,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:56",{"_index":1080,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:57",{"_index":1081,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:58",{"_index":1075,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:59",{"_index":1079,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:63",{"_index":1082,"title":{},"body":{"classes/UserID.html":{}}}],["src/modules/user/user.module.ts",{"_index":1086,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":1094,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:11",{"_index":1098,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:18",{"_index":1102,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:26",{"_index":1105,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:35",{"_index":1107,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:46",{"_index":1101,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:59",{"_index":1109,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:72",{"_index":1103,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/swagger/constants.ts",{"_index":1178,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/index.ts",{"_index":1183,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["staged",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["start",{"_index":1386,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1389,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1390,"title":{},"body":{"index.html":{}}}],["started",{"_index":1293,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{}}}],["status",{"_index":665,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{}}}],["status.ts",{"_index":1279,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["strategy",{"_index":598,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["street",{"_index":12,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["string",{"_index":16,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"injectables/ArticlesService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":589,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["subject",{"_index":1478,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1471,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1483,"title":{},"body":{"license.html":{}}}],["successful",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["successful'})@apibadrequestresponse({description",{"_index":334,"title":{},"body":{"controllers/CallController.html":{}}}],["sudo",{"_index":1298,"title":{},"body":{"index.html":{}}}],["suggested",{"_index":1424,"title":{},"body":{"index.html":{}}}],["super",{"_index":601,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":580,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super.login(request",{"_index":577,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["supertest",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["support",{"_index":1511,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1512,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1252,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["swagger_api_current_version",{"_index":1179,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_description",{"_index":1180,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_name",{"_index":1181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_root",{"_index":1182,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(swagger_api_root",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":1309,"title":{},"body":{"index.html":{}}}],["synchronize",{"_index":551,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["table",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1430,"title":{},"body":{"index.html":{}}}],["telephone",{"_index":1024,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["temporary",{"_index":1340,"title":{},"body":{"index.html":{}}}],["test",{"_index":443,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["test:covswagger",{"_index":1394,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1393,"title":{},"body":{"index.html":{}}}],["test@test.com",{"_index":643,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["test@test.com'})@isemail",{"_index":632,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["tests",{"_index":1391,"title":{},"body":{"index.html":{}}}],["this.appservice.root",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["this.articlesrepository.delete(id",{"_index":235,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.find",{"_index":231,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.findone(id",{"_index":233,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.save(article",{"_index":230,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesservice.create(createarticledto",{"_index":209,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articlesservice.findall",{"_index":210,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.authservice.generatetoken(user",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(credentials",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.config.get('api_url",{"_index":158,"title":{},"body":{"injectables/AppService.html":{}}}],["this.envconfig",{"_index":437,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.database_host",{"_index":445,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.database_name",{"_index":449,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.database_password",{"_index":448,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.database_type",{"_index":444,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.database_username",{"_index":447,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.googleauth_client_id",{"_index":451,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.googleauth_client_secret",{"_index":452,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.googleauth_redirect_uri",{"_index":453,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.jwt_secret",{"_index":450,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.node_env",{"_index":440,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.twilio_account_ssid",{"_index":454,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig[key",{"_index":455,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.findrequest(requestid",{"_index":866,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.findshoppinglist(id",{"_index":942,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.findshoppinglist(shoppinglistid",{"_index":948,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.get(id",{"_index":873,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.getbyemail(payload.email",{"_index":1130,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.sign({...userpayload",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.populaterequest(request",{"_index":835,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.populateshoppinglist(createrequestdto",{"_index":997,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["this.populateshoppinglist(form",{"_index":1001,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["this.requestrepository.find",{"_index":865,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.requestrepository.findone(id",{"_index":833,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.requestrepository.save(request",{"_index":838,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.requestservice.create(createrequestdto",{"_index":733,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.requestservice.get(requestid",{"_index":739,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["this.requestservice.getall(user",{"_index":728,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.requestservice.update(requestid",{"_index":743,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.requestservice.updaterequestarticle(requestid",{"_index":746,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.shoppinglistrepository.find",{"_index":1000,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["this.shoppinglistrepository.findone(id",{"_index":995,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["this.shoppinglistrepository.save(shoppinglist",{"_index":999,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["this.shoppinglistservice.addrequesttolist(request.id",{"_index":950,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.shoppinglistservice.create(createrequestdto",{"_index":943,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.shoppinglistservice.get(id",{"_index":953,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.shoppinglistservice.getallbyuser(user.userid",{"_index":938,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.shoppinglistservice.removerequest(requestid",{"_index":952,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.shoppinglistservice.update(updateshoppinglist",{"_index":945,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.userrepository",{"_index":1119,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.create(payload",{"_index":1134,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.find",{"_index":1153,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone(id",{"_index":1116,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone({email",{"_index":1118,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(newuser",{"_index":1135,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(user",{"_index":1152,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.create(payload",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.get(entity.requesterid",{"_index":735,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.userservice.get(id",{"_index":1070,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.get(r.requesterid",{"_index":732,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.userservice.getall",{"_index":1068,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getbyemailandpass(email",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(updateuserdto",{"_index":1074,"title":{},"body":{"controllers/UserController.html":{}}}],["this.validateinput(parsedconfig",{"_index":438,"title":{},"body":{"classes/ConfigService.html":{}}}],["through",{"_index":1414,"title":{},"body":{"index.html":{}}}],["throw",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to(value",{"_index":622,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["to.requests.find(r",{"_index":1018,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["to.requests.push(newrequest",{"_index":1020,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["to.status",{"_index":1014,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["todo",{"_index":1113,"title":{},"body":{"injectables/UsersService.html":{}}}],["token",{"_index":876,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["token.dt",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dt.ts",{"_index":875,"title":{},"body":{"classes/ResponseTokenDto.html":{},"coverage.html":{}}}],["token.dt.ts:13",{"_index":877,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["token.dt.ts:19",{"_index":882,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["token.dt.ts:8",{"_index":881,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["tokens",{"_index":1441,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1505,"title":{},"body":{"license.html":{}}}],["toundra",{"_index":1451,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":784,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"dependencies.html":{}}}],["true",{"_index":21,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AuthController.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["true})@column",{"_index":647,"title":{},"body":{"classes/RequestArticle.html":{},"classes/ShoppingListRequest.html":{}}}],["true})@column({default",{"_index":649,"title":{},"body":{"classes/RequestArticle.html":{}}}],["true})@column({length",{"_index":1033,"title":{},"body":{"classes/User.html":{}}}],["true})@column({type",{"_index":1041,"title":{},"body":{"classes/User.html":{}}}],["true})@isemail",{"_index":609,"title":{},"body":{"classes/LoginPayload.html":{}}}],["true})@isnotempty",{"_index":634,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{}}}],["true})@isnotempty()@minlength(5",{"_index":611,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["try",{"_index":1326,"title":{},"body":{"index.html":{}}}],["ts",{"_index":545,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["tsconfig",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tutorial",{"_index":1433,"title":{},"body":{"index.html":{}}}],["twilio_account_ssid",{"_index":488,"title":{},"body":{"classes/ConfigService.html":{}}}],["twilio_auth_token",{"_index":490,"title":{},"body":{"classes/ConfigService.html":{}}}],["twillioaccountssid",{"_index":372,"title":{},"body":{"classes/ConfigService.html":{}}}],["twillioauthtoken",{"_index":373,"title":{},"body":{"classes/ConfigService.html":{}}}],["type",{"_index":14,"title":{},"body":{"classes/AddressModel.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":29,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"injectables/ArticlesService.html":{},"classes/PasswordTransformer.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([article",{"_index":1093,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([requestentity",{"_index":803,"title":{},"body":{"modules/RequestModule.html":{}}}],["typeormmodule.forfeature([shoppinglist",{"_index":965,"title":{},"body":{"modules/ShoppingListModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":529,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":524,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types",{"_index":1407,"title":{},"body":{"index.html":{}}}],["types/dotenv",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["types/express",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["types/helmet",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["types/jest",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["types/joi",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["types/supertest",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["typing",{"_index":1313,"title":{},"body":{"index.html":{}}}],["u",{"_index":1308,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["unauthorizedexception",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('wrong",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":640,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["undefined})@apibadrequestresponse({description",{"_index":184,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["undefined})@apiquery({name",{"_index":677,"title":{},"body":{"controllers/RequestController.html":{}}}],["undefined})@exclude",{"_index":1039,"title":{},"body":{"classes/User.html":{}}}],["undefined})@isnotempty",{"_index":1027,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["undefined})@onetomany(undefined",{"_index":754,"title":{},"body":{"classes/RequestEntity.html":{},"classes/ShoppingList.html":{}}}],["unit",{"_index":175,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/CreateArticleDto.html":{},"index.html":{}}}],["unit.'})@column({length",{"_index":167,"title":{},"body":{"classes/Article.html":{}}}],["unit.'})@isstring",{"_index":503,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["until",{"_index":879,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["up",{"_index":1343,"title":{},"body":{"index.html":{}}}],["update",{"_index":807,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["update(editrequestdto",{"_index":1108,"title":{},"body":{"injectables/UsersService.html":{}}}],["update(form",{"_index":990,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["update(id",{"_index":1056,"title":{},"body":{"controllers/UserController.html":{}}}],["update(requestid",{"_index":823,"title":{},"body":{"injectables/RequestService.html":{}}}],["updated_at",{"_index":886,"title":{},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["updatedatecolumn",{"_index":896,"title":{},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["updaterequest",{"_index":675,"title":{},"body":{"controllers/RequestController.html":{}}}],["updaterequest(requestid",{"_index":704,"title":{},"body":{"controllers/RequestController.html":{}}}],["updaterequestarticle",{"_index":808,"title":{},"body":{"injectables/RequestService.html":{}}}],["updaterequestarticle(requestid",{"_index":825,"title":{},"body":{"injectables/RequestService.html":{}}}],["updateshoppinglist",{"_index":906,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["updateshoppinglist(id",{"_index":928,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["updateuserdto",{"_index":1021,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usage",{"_index":1385,"title":{},"body":{"index.html":{}}}],["use",{"_index":1382,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":1349,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":296,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["useguards",{"_index":711,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":723,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["usenewurlparser",{"_index":555,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["user",{"_index":97,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["user.city",{"_index":1136,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.controller",{"_index":1087,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":1064,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":1023,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":1026,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:16",{"_index":1028,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:19",{"_index":1029,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":1025,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.entity",{"_index":1061,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{}}}],["user.firstname",{"_index":1144,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.id",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.lastname",{"_index":1146,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.module",{"_index":625,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["user.number",{"_index":1140,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.role",{"_index":1148,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.service",{"_index":1062,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.street",{"_index":1138,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.telephone",{"_index":1150,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.userid",{"_index":837,"title":{},"body":{"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{}}}],["user.zipcode",{"_index":1142,"title":{},"body":{"injectables/UsersService.html":{}}}],["user/user",{"_index":642,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["user/user.controller",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.entity",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["user/user.module",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RequestModule.html":{}}}],["user/user.service",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/RequestController.html":{}}}],["usercontroller",{"_index":85,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userfillablefields",{"_index":1048,"title":{"classes/UserFillableFields.html":{}},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userid",{"_index":695,"title":{"classes/UserID.html":{}},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"coverage.html":{}}}],["usermodule",{"_index":75,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/PasswordTransformer.html":{},"modules/RequestModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":536,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["userpayload",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["userpayload.password",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrepository",{"_index":1099,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrole",{"_index":639,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.none",{"_index":644,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["users",{"_index":1046,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["users.password",{"_index":1127,"title":{},"body":{"injectables/UsersService.html":{}}}],["userservice",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/RequestController.html":{},"controllers/UserController.html":{}}}],["usersmodule",{"_index":1088,"title":{"modules/UsersModule.html":{}},"body":{"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":79,"title":{"injectables/UsersService.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/RequestController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usertoupdate",{"_index":1072,"title":{},"body":{"controllers/UserController.html":{}}}],["usertoupdate.id",{"_index":1073,"title":{},"body":{"controllers/UserController.html":{}}}],["user})@apibadrequestresponse({description",{"_index":1057,"title":{},"body":{"controllers/UserController.html":{}}}],["user})@apinotfoundresponse({description",{"_index":1051,"title":{},"body":{"controllers/UserController.html":{}}}],["user})@exclude",{"_index":768,"title":{},"body":{"classes/RequestEntity.html":{}}}],["usevalue",{"_index":354,"title":{},"body":{"modules/ConfigModule.html":{}}}],["using",{"_index":1378,"title":{},"body":{"index.html":{}}}],["usually",{"_index":1315,"title":{},"body":{"index.html":{}}}],["v",{"_index":1363,"title":{},"body":{"index.html":{}}}],["v.articleid",{"_index":868,"title":{},"body":{"injectables/RequestService.html":{}}}],["valid",{"_index":465,"title":{},"body":{"classes/ConfigService.html":{}}}],["valid(['development",{"_index":461,"title":{},"body":{"classes/ConfigService.html":{}}}],["validate",{"_index":591,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":594,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":389,"title":{},"body":{"classes/ConfigService.html":{}}}],["validatedenvconfig",{"_index":496,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateinput",{"_index":358,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateinput(parsedconfig",{"_index":383,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateuser",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(undefined",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser({email",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":486,"title":{},"body":{"classes/ConfigService.html":{}}}],["validationoptions",{"_index":491,"title":{},"body":{"classes/ConfigService.html":{}}}],["validator",{"_index":506,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":495,"title":{},"body":{"classes/ConfigService.html":{},"classes/PasswordTransformer.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value).digest('hex",{"_index":627,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["values",{"_index":395,"title":{},"body":{"classes/ConfigService.html":{}}}],["valuetransformer",{"_index":619,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["variable",{"_index":402,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["variables",{"_index":387,"title":{"miscellaneous/variables.html":{}},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["variant",{"_index":1445,"title":{},"body":{"index.html":{}}}],["vars",{"_index":1331,"title":{},"body":{"index.html":{}}}],["visit",{"_index":1401,"title":{},"body":{"index.html":{}}}],["void",{"_index":822,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{}}}],["volume",{"_index":1350,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1489,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1485,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1387,"title":{},"body":{"index.html":{}}}],["web",{"_index":1440,"title":{},"body":{"index.html":{}}}],["webhook",{"_index":331,"title":{},"body":{"controllers/CallController.html":{}}}],["webpack",{"_index":542,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["where('users.email",{"_index":1121,"title":{},"body":{"injectables/UsersService.html":{}}}],["whether",{"_index":1502,"title":{},"body":{"license.html":{}}}],["within",{"_index":681,"title":{},"body":{"controllers/RequestController.html":{}}}],["without",{"_index":1463,"title":{},"body":{"license.html":{}}}],["withpsql",{"_index":1328,"title":{},"body":{"index.html":{}}}],["working",{"_index":1413,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":1302,"title":{},"body":{"index.html":{}}}],["yarnenvironment",{"_index":1304,"title":{},"body":{"index.html":{}}}],["zip",{"_index":683,"title":{},"body":{"controllers/RequestController.html":{}}}],["zipcode",{"_index":13,"title":{},"body":{"classes/AddressModel.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["zoom",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddressModel.html":{"url":"classes/AddressModel.html","title":"class - AddressModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/main/models/address.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                number\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/main/models/address.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/main/models/address.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/main/models/address.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/main/models/address.model.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column} from 'typeorm';\nimport {ApiProperty, ApiPropertyOptional} from '@nestjs/swagger';\n\nexport class AddressModel {\n  @ApiPropertyOptional()\n  @Column({\n    length: 10,\n    nullable: true,\n  })\n  street?: string;\n\n  @ApiPropertyOptional()\n  @Column({\n    length: 10,\n    nullable: true,\n  })\n  number?: string;\n\n  @ApiPropertyOptional()\n  @Column({\n    length: 10,\n    nullable: true,\n  })\n  zipCode?: string;\n\n  @ApiPropertyOptional()\n  @Column({\n    length: 10,\n    nullable: true,\n  })\n  city?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/main/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Successful'})\n                \n            \n\n            \n                \n                    Defined in src/modules/main/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Controller, Get} from '@nestjs/common';\n\nimport {AppService} from './app.service';\nimport {ApiOkResponse} from '@nestjs/swagger';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {\n  }\n\n  @Get()\n  @ApiOkResponse({description: 'Successful'})\n  root(): string {\n    return this.appService.root();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddressModel\n\nAddressModel\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressModel->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCallModule\n\nCallModule\n\nAppModule -->\n\nCallModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nRequestModule\n\nRequestModule\n\nAppModule -->\n\nRequestModule->AppModule\n\n\n\n\n\nShoppingListModule\n\nShoppingListModule\n\nAppModule -->\n\nShoppingListModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nArticlesService\n\nArticlesService\n\nAppModule -->\n\nArticlesService->AppModule\n\n\n\n\n\nRequestService\n\nRequestService\n\nAppModule -->\n\nRequestService->AppModule\n\n\n\n\n\nShoppingListService\n\nShoppingListService\n\nAppModule -->\n\nShoppingListService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/main/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ArticlesService\n                        \n                        \n                            RequestService\n                        \n                        \n                            ShoppingListService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            ArticlesController\n                        \n                        \n                            UserController\n                        \n                        \n                            RequestController\n                        \n                        \n                            ShoppingListController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddressModel\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CallModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            RequestModule\n                        \n                        \n                            ShoppingListModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {ConfigService} from '../config/config.service';\nimport {Module} from '@nestjs/common';\nimport {TypeOrmModule} from '@nestjs/typeorm';\n\nimport {ConfigModule} from '../config/config.module';\nimport {DatabaseModule} from '../database/database.module';\nimport {AppController} from './app.controller';\nimport {AppService} from './app.service';\nimport {AuthModule} from '../auth/auth.module';\nimport {User} from '../user/user.entity';\nimport {RequestEntity} from '../request/request.entity';\nimport {Article} from '../articles/article.entity';\nimport {ArticlesController} from '../articles/articles.controller';\nimport {ArticlesService} from '../articles/articles.service';\nimport {RequestModule} from '../request/request.module';\nimport {CallModule} from '../call/call.module';\nimport {UserModule} from '../user/user.module';\nimport {UserController} from '../user/user.controller';\nimport {RequestController} from '../request/request.controller';\nimport {UsersService} from '../user/user.service';\nimport {RequestService} from '../request/request.service';\nimport {ShoppingListController} from '../shoppingList/shopping-list.controller';\nimport {ShoppingList} from '../shoppingList/shopping-list.entity';\nimport {ShoppingListModule} from '../shoppingList/shopping-list.module';\nimport {ShoppingListService} from '../shoppingList/shopping-list.service';\nimport {AddressModel} from './models/address.model';\nimport {ServeStaticModule} from '@nestjs/serve-static';\nimport {join} from 'path';\n\n@Module({\n  imports: [\n    AuthModule,\n    ConfigModule,\n    DatabaseModule,\n    RequestModule,\n    UserModule,\n    ShoppingListModule,\n    TypeOrmModule.forFeature([User, Article, RequestEntity, ShoppingList]),\n    CallModule,\n    AddressModel,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'documentation'),\n    }),\n  ],\n  controllers: [\n    AppController,\n    ArticlesController,\n    UserController,\n    RequestController,\n    ShoppingListController,\n  ],\n  providers: [AppService, ArticlesService, UsersService, RequestService, ShoppingListService],\n})\nexport class AppModule /* implements NestModule */ {\n  static port: string | number;\n  static isDev: boolean;\n\n  constructor(private readonly config: ConfigService) {\n    AppModule.port = process.env.PORT || config.get('API_PORT');\n    AppModule.isDev = config.isDev;\n  }\n\n  // DOC: https://docs.nestjs.com/middleware\n  // configure(consumer: MiddlewareConsumer) {\n  //   consumer\n  //     .apply(loggerMiddleware)\n  //     .forRoutes({ path: '/', method: RequestMethod.ALL });\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/main/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/main/app.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/main/app.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@nestjs/common';\n\nimport {ConfigService} from '../config/config.service';\n\n@Injectable()\nexport class AppService {\n  constructor(private config: ConfigService) {\n  }\n\n  root(): string {\n    return this.config.get('API_URL');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Article.html":{"url":"classes/Article.html","title":"class - Article","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Article\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/article.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Auto-incremented id of an article.', type: 'integer'})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/articles/article.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Name of the article, should also contain the unit.'})@Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/articles/article.entity.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({\n  name: 'articles',\n})\nexport class Article {\n  @ApiProperty({\n    description: 'Auto-incremented id of an article.',\n    type: 'integer',\n  })\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({\n    description: 'Name of the article, should also contain the unit.',\n  })\n  @Column({ length: 255 })\n  name!: string;\n}\n\nexport class ArticleFillableFields {\n  name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArticleFillableFields.html":{"url":"classes/ArticleFillableFields.html","title":"class - ArticleFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArticleFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/article.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/articles/article.entity.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({\n  name: 'articles',\n})\nexport class Article {\n  @ApiProperty({\n    description: 'Auto-incremented id of an article.',\n    type: 'integer',\n  })\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({\n    description: 'Name of the article, should also contain the unit.',\n  })\n  @Column({ length: 255 })\n  name!: string;\n}\n\nexport class ArticleFillableFields {\n  name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticlesController.html":{"url":"controllers/ArticlesController.html","title":"controller - ArticlesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticlesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/articles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                articles\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                insertOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'All existing articles', type: undefined})@ApiBadRequestResponse({description: 'Bad Request'})\n                \n            \n\n            \n                \n                    Defined in src/modules/articles/articles.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertOne(createArticleDto: CreateArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({description: 'Created', type: Article})@ApiBadRequestResponse({description: 'Bad Request'})\n                \n            \n\n            \n                \n                    Defined in src/modules/articles/articles.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createArticleDto\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, Get, Post} from '@nestjs/common';\nimport {ApiBadRequestResponse, ApiCreatedResponse, ApiOkResponse, ApiTags} from '@nestjs/swagger';\nimport {CreateArticleDto} from './dto/create-article.dto';\nimport {ArticlesService} from './articles.service';\nimport {Article} from './article.entity';\n\n@Controller('articles')\n@ApiTags('Articles')\nexport class ArticlesController {\n  constructor(private readonly articlesService: ArticlesService) {\n  }\n\n  @Post()\n  @ApiCreatedResponse({description: 'Created', type: Article})\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  async insertOne(@Body() createArticleDto: CreateArticleDto): Promise {\n    return this.articlesService.create(createArticleDto);\n  }\n\n  @Get()\n  @ApiOkResponse({\n    description: 'All existing articles',\n    type: [Article],\n  })\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  findAll(): Promise {\n    return this.articlesService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticlesService.html":{"url":"injectables/ArticlesService.html","title":"injectable - ArticlesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArticlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/articles.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(articlesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/articles/articles.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        articlesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createArticleDto: CreateArticleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/articles/articles.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createArticleDto\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/articles/articles.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/articles/articles.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateArticleDto } from './dto/create-article.dto';\nimport { Article } from './article.entity';\n\n@Injectable()\nexport class ArticlesService {\n  constructor(\n    @InjectRepository(Article)\n    private readonly articlesRepository: Repository,\n  ) {}\n\n  create(createArticleDto: CreateArticleDto): Promise {\n    const article = new Article();\n    article.name = createArticleDto.name;\n\n    return this.articlesRepository.save(article);\n  }\n\n  async findAll(): Promise {\n    return this.articlesRepository.find();\n  }\n\n  // findOne(id: string): Promise {\n  //   return this.articlesRepository.findOne(id);\n  // }\n\n  async remove(id: string): Promise {\n    await this.articlesRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: LoginPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiOkResponse({description: 'Successful Login', type: ResponseTokenDto})@ApiBadRequestResponse({description: 'Bad Request'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(payload: RegisterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiCreatedResponse({description: 'Successful Registration', type: ResponseTokenDto})@ApiBadRequestResponse({description: 'Bad Request'})@ApiNotAcceptableResponse({description: 'Already exists'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, Logger, Post} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiNotAcceptableResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\n\nimport {AuthService} from './auth.service';\nimport {LoginPayload} from './login.payload';\nimport {RegisterPayload} from './register.payload';\nimport {UsersService} from '../user/user.service';\nimport {ResponseTokenDto} from './dto/response-token.dt';\n\n@Controller('auth')\n@ApiTags('Authentication')\nexport class AuthController {\n  static LOGGER = new Logger('Auth', true);\n\n  constructor(\n    private readonly authService: AuthService,\n    private readonly userService: UsersService,\n  ) {\n  }\n\n  @Post('login')\n  @ApiOkResponse({\n    description: 'Successful Login',\n    type: ResponseTokenDto,\n  })\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  @ApiUnauthorizedResponse({description: 'Unauthorized'})\n  async login(@Body() credentials: LoginPayload): Promise {\n    const user = await this.authService.validateUser(credentials);\n    return await this.authService.generateToken(user);\n  }\n\n  @Post('register')\n  @ApiCreatedResponse({\n    description: 'Successful Registration',\n    type: ResponseTokenDto,\n  })\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  @ApiNotAcceptableResponse({description: 'Already exists'})\n  async register(@Body() payload: RegisterPayload): Promise {\n    const user = await this.userService.create(payload);\n    AuthController.LOGGER.log(user);\n    return await this.authService.generateToken(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {JwtModule} from '@nestjs/jwt';\nimport {PassportModule} from '@nestjs/passport';\n\nimport {ConfigModule} from '../config/config.module';\nimport {ConfigService} from '../config/config.service';\nimport {UserModule} from '../user/user.module';\nimport {AuthService} from './auth.service';\nimport {JwtStrategy} from './jwt.strategy';\nimport {AuthController} from './auth.controller';\n\n@Module({\n  imports: [\n    UserModule,\n    ConfigModule,\n    PassportModule.register({defaultStrategy: 'jwt'}),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          secret: configService.get('JWT_SECRET'),\n          signOptions: {\n            expiresIn: Number(configService.get('JWT_EXPIRATION_TIME')),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [PassportModule.register({defaultStrategy: 'jwt'})],\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(undefined: LoginPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable, UnauthorizedException} from '@nestjs/common';\nimport {JwtService} from '@nestjs/jwt';\n\nimport {ConfigService} from '../config/config.service';\nimport {User} from '../user/user.entity';\nimport {UsersService} from '../user/user.service';\nimport {LoginPayload} from './login.payload';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    private readonly userService: UsersService,\n  ) {\n  }\n\n  async generateToken(user: User) {\n    const userPayload = user;\n    delete userPayload.password;\n\n    return {\n      expiresIn: Number(this.configService.get('JWT_EXPIRATION_TIME')),\n      accessToken: this.jwtService.sign({...userPayload}),\n      id: user.id,\n    };\n  }\n\n  async validateUser({email, password}: LoginPayload): Promise {\n    const user = await this.userService.getByEmailAndPass(email, password);\n    if (!user) {\n      throw new UnauthorizedException('Wrong email or password !');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CallController.html":{"url":"controllers/CallController.html","title":"controller - CallController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CallController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/call/call.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                call\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                    Async\n                                listen\n                            \n                            \n                                    Async\n                                webhook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            index\n                        \n                        \n                    \n                \n            \n            \n                \nindex()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Successful'})\n                \n            \n\n            \n                \n                    Defined in src/modules/call/call.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            listen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listen()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('listen')@ApiOkResponse({description: 'Successful'})@ApiBadRequestResponse({description: 'Bad Request'})\n                \n            \n\n            \n                \n                    Defined in src/modules/call/call.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            webhook\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    webhook()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('webhook')@ApiOkResponse({description: 'Successful'})@ApiBadRequestResponse({description: 'Bad Request'})\n                \n            \n\n            \n                \n                    Defined in src/modules/call/call.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Controller, Get} from '@nestjs/common';\nimport {ApiBadRequestResponse, ApiOkResponse, ApiTags, ApiUnauthorizedResponse} from '@nestjs/swagger';\n\n@Controller('call')\n@ApiTags('Calls')\n@ApiUnauthorizedResponse({description: 'Unauthorized'})\nexport class CallController {\n  @Get()\n  @ApiOkResponse({description: 'Successful'})\n  index(): string {\n    return 'call';\n  }\n\n  @Get('listen')\n  @ApiOkResponse({description: 'Successful'})\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  async listen(): Promise {\n  }\n\n  @Get('webhook')\n  @ApiOkResponse({description: 'Successful'})\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  async webhook(): Promise {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CallModule.html":{"url":"modules/CallModule.html","title":"module - CallModule","body":"\n                   \n\n\n\n\n    Modules\n    CallModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CallModule\n\n\n\ncluster_CallModule_providers\n\n\n\n\nCallService\n\nCallService\n\n\n\nCallModule\n\nCallModule\n\nCallModule -->\n\nCallService->CallModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/call/call.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CallService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CallController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CallController } from './call.controller';\nimport { CallService } from './call.service';\n\n@Module({\n  controllers: [CallController],\n  providers: [CallService],\n})\nexport class CallModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CallService.html":{"url":"injectables/CallService.html","title":"injectable - CallService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CallService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/call/call.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CallService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\n\nimport {ConfigService} from './config.service';\n\n@Module({\n  providers: [\n    {\n      provide: ConfigService,\n      useValue: new ConfigService(`.env.${process.env.NODE_ENV}`),\n    },\n  ],\n  exports: [ConfigService],\n})\nexport class ConfigModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                envConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                    Private\n                                validateInput\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isDev\n                                \n                                \n                                    isProd\n                                \n                                \n                                    isTest\n                                \n                                \n                                    databaseType\n                                \n                                \n                                    databaseHost\n                                \n                                \n                                    databasePort\n                                \n                                \n                                    databaseUsername\n                                \n                                \n                                    databasePassword\n                                \n                                \n                                    databaseName\n                                \n                                \n                                    jwtSecret\n                                \n                                \n                                    googleauthClientId\n                                \n                                \n                                    googleauthClientSecret\n                                \n                                \n                                    googleauthRedirectUri\n                                \n                                \n                                    twillioAccountSSID\n                                \n                                \n                                    twillioAuthtoken\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePath: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/config/config.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            envConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DotenvParseOutput\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/config/config.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:79\n                \n            \n\n\n            \n                \n                    Generic getter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateInput(parsedConfig: DotenvParseOutput)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:87\n                \n            \n\n\n            \n                \n                    Ensures all needed variables are set, and returns the validated JavaScript object\nincluding the applied default values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parsedConfig\n                                    \n                                            DotenvParseOutput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isDev\n                    \n                \n\n                \n                    \n                        getisDev()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:16\n                                \n                            \n                    \n                        \n                                Getters for each environment variable\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isProd\n                    \n                \n\n                \n                    \n                        getisProd()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:20\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTest\n                    \n                \n\n                \n                    \n                        getisTest()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseType\n                    \n                \n\n                \n                    \n                        getdatabaseType()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseHost\n                    \n                \n\n                \n                    \n                        getdatabaseHost()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databasePort\n                    \n                \n\n                \n                    \n                        getdatabasePort()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseUsername\n                    \n                \n\n                \n                    \n                        getdatabaseUsername()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:40\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databasePassword\n                    \n                \n\n                \n                    \n                        getdatabasePassword()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseName\n                    \n                \n\n                \n                    \n                        getdatabaseName()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        jwtSecret\n                    \n                \n\n                \n                    \n                        getjwtSecret()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:52\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        googleauthClientId\n                    \n                \n\n                \n                    \n                        getgoogleauthClientId()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:56\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        googleauthClientSecret\n                    \n                \n\n                \n                    \n                        getgoogleauthClientSecret()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:60\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        googleauthRedirectUri\n                    \n                \n\n                \n                    \n                        getgoogleauthRedirectUri()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:64\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        twillioAccountSSID\n                    \n                \n\n                \n                    \n                        gettwillioAccountSSID()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:68\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        twillioAuthtoken\n                    \n                \n\n                \n                    \n                        gettwillioAuthtoken()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:72\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {DotenvParseOutput, parse} from 'dotenv';\nimport {readFileSync} from 'fs';\nimport * as Joi from 'joi';\n\nexport class ConfigService {\n  private readonly envConfig: DotenvParseOutput;\n\n  constructor(filePath: string) {\n    const parsedConfig = parse(readFileSync(filePath));\n    this.envConfig = this.validateInput(parsedConfig);\n  }\n\n  /**\n   * Getters for each environment variable\n   */\n  public get isDev() {\n    return this.envConfig.NODE_ENV === 'development';\n  }\n\n  public get isProd() {\n    return this.envConfig.NODE_ENV === 'production';\n  }\n\n  public get isTest() {\n    return this.envConfig.NODE_ENV === 'test';\n  }\n\n  public get databaseType() {\n    return this.envConfig.DATABASE_TYPE;\n  }\n\n  public get databaseHost() {\n    return this.envConfig.DATABASE_HOST;\n  }\n\n  public get databasePort() {\n    return Number(this.envConfig.DATABASE_PORT);\n  }\n\n  public get databaseUsername() {\n    return this.envConfig.DATABASE_USERNAME;\n  }\n\n  public get databasePassword() {\n    return this.envConfig.DATABASE_PASSWORD;\n  }\n\n  public get databaseName() {\n    return this.envConfig.DATABASE_NAME;\n  }\n\n  public get jwtSecret() {\n    return this.envConfig.JWT_SECRET;\n  }\n\n  public get googleauthClientId() {\n    return this.envConfig.GOOGLEAUTH_CLIENT_ID;\n  }\n\n  public get googleauthClientSecret() {\n    return this.envConfig.GOOGLEAUTH_CLIENT_SECRET;\n  }\n\n  public get googleauthRedirectUri() {\n    return this.envConfig.GOOGLEAUTH_REDIRECT_URI;\n  }\n\n  public get twillioAccountSSID(){\n    return this.envConfig.TWILIO_ACCOUNT_SSID;\n  }\n\n  public get twillioAuthtoken(){\n    return this.envConfig.TWILIO_ACCOUNT_SSID;\n  }\n\n  /**\n   * Generic getter\n   */\n  get(key: string) {\n    return this.envConfig[key];\n  }\n\n  /**\n   * Ensures all needed variables are set, and returns the validated JavaScript object\n   * including the applied default values.\n   */\n  private validateInput(parsedConfig: DotenvParseOutput) {\n    const envVarsSchema: Joi.ObjectSchema = Joi.object({\n      NODE_ENV: Joi.string()\n        .valid(['development', 'production', 'test', 'provision'])\n        .default('development'),\n      DATABASE_TYPE: Joi.string()\n        .valid([\n          'cockroachdb',\n          'cordova',\n          'mariadb',\n          'mongodb',\n          'mssql',\n          'mysql',\n          'nativescript',\n          'oracle',\n          'postgres',\n          'react-native',\n          'sqlite',\n          'sqljs',\n        ])\n        .required(),\n      PORT: Joi.number(),\n      // API_AUTH_ENABLED: Joi.boolean()\n      //   .required()\n      //   .default(true),\n      // add more validation rules ...\n      TWILIO_ACCOUNT_SSID: Joi.string().required(),\n      TWILIO_AUTH_TOKEN: Joi.string().required()\n    });\n\n    const validationOptions: Joi.ValidationOptions = {allowUnknown: true};\n\n    const {error, value: validatedEnvConfig} = Joi.validate(\n      parsedConfig,\n      envVarsSchema,\n      validationOptions,\n    );\n    if (error) {\n      throw new Error(`Config validation error: ${error.message}`);\n    }\n    return validatedEnvConfig;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateArticleDto.html":{"url":"classes/CreateArticleDto.html","title":"class - CreateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/dto/create-article.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'Name of the article, should also contain the unit.'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/articles/dto/create-article.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class CreateArticleDto {\n  @ApiProperty({\n    required: true,\n    description: 'Name of the article, should also contain the unit.',\n  })\n  @IsString()\n  readonly name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRequestArticleDto.html":{"url":"classes/CreateRequestArticleDto.html","title":"class - CreateRequestArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRequestArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/dto/request-form.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                articleCount\n                            \n                            \n                                    Readonly\n                                articleId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            articleCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'Number of items', type: 'integer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            articleId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'Article ID received from the article list', type: 'integer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger';\nimport {AddressModel} from '../../main/models/address.model';\n\nexport class CreateRequestArticleDto {\n  @ApiProperty({\n    required: true,\n    description: 'Article ID received from the article list',\n    type: 'integer',\n  })\n  readonly articleId!: number;\n\n  @ApiProperty({\n    required: true,\n    description: 'Number of items',\n    type: 'integer',\n  })\n  readonly articleCount!: number;\n}\n\nexport class RequestFormDto extends AddressModel {\n  @ApiProperty({\n    required: true,\n    description: 'List of articles',\n    type: [CreateRequestArticleDto],\n  })\n  readonly articles!: CreateRequestArticleDto[];\n\n  @ApiProperty()\n  readonly additionalRequest?: string;\n  @ApiProperty()\n  readonly deliveryComment?: string;\n  @ApiProperty()\n  readonly phoneNumber?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\n\nimport { ConfigModule } from '../config/config.module';\nimport { ConfigService } from '../config/config.service';\nimport { User } from '../user/user.entity';\nimport { RequestEntity } from '../request/request.entity';\nimport { Article } from '../articles/article.entity';\nimport { RequestArticle } from '../request/requestArticle.entity';\nimport {ShoppingList} from '../shoppingList/shopping-list.entity';\nimport {ShoppingListRequest} from '../shoppingList/shopping-list-request.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) =>\n        ({\n          type: config.databaseType,\n          host: config.databaseHost,\n          port: config.databasePort,\n          database: config.databaseName,\n          username: config.databaseUsername,\n          password: config.databasePassword,\n          // importing entities directly because Webpack + glob path pattern + ts file = crash\n          // https://github.com/nestjs/nest/issues/711\n          entities: [User, Article, RequestEntity, RequestArticle, ShoppingList, ShoppingListRequest], // ['src/modules/**/*.entity{.ts,.js}'],\n          migrations: [User, Article, RequestEntity, RequestArticle, ShoppingList, ShoppingListRequest], // ['src/modules/**/*.migration{.ts,.js}'],\n          synchronize: config.isDev,\n          // synchronize: false,\n          logging: !config.isProd,\n          useNewUrlParser: true,\n        } as TypeOrmModuleOptions),\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequestUser.html":{"url":"interfaces/IRequestUser.html","title":"interface - IRequestUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRequestUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/decorators/user.decorator.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createParamDecorator } from '@nestjs/common';\nimport { User } from '../../user/user.entity';\n\nexport interface IRequestUser extends Request {\n  user?: User;\n}\n\nexport const ReqUser = createParamDecorator((data, req: IRequestUser) => {\n  return req.user;\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/guards/jwt-guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  // canActivate(context: ExecutionContext) {\n  //   // Add your custom authentication logic here\n  //   // for example, call super.logIn(request) to establish a session.\n  //   return super.canActivate(context);\n  // }\n  // // @ts-ignore: implicit-any\n  // handleRequest(err, user, info) {\n  //   if (err || !user) {\n  //     throw err || new UnauthorizedException();\n  //   }\n  //   return user;\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        exp\n                                \n                                \n                                            Optional\n                                        iat\n                                \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  sub: string;\n  iat?: number;\n  exp?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/jwt.strategy.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport { ConfigService } from '../config/config.service';\nimport { AuthService } from './auth.service';\nimport { LoginPayload } from './login.payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly configService: ConfigService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: true,\n      secretOrKey: configService.get('JWT_SECRET'),\n      // passReqToCallback: true,\n    });\n  }\n\n  // async validate({ iat, exp }: JwtPayload) {\n  //   const isExpired = exp - iat \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayload.html":{"url":"classes/LoginPayload.html","title":"class - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/login.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/login.payload.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()@MinLength(5)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/login.payload.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger';\nimport {IsEmail, IsNotEmpty, MinLength} from 'class-validator';\n\nexport class LoginPayload {\n  @ApiProperty({required: true})\n  @IsEmail()\n  email!: string;\n\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  @MinLength(5)\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordTransformer.html":{"url":"classes/PasswordTransformer.html","title":"class - PasswordTransformer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordTransformer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/password.transformer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ValueTransformer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            from\n                        \n                        \n                    \n                \n            \n            \n                \nfrom(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/password.transformer.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            to\n                        \n                        \n                    \n                \n            \n            \n                \nto(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/password.transformer.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\nimport { ValueTransformer } from 'typeorm';\nimport { UserModule } from './user.module';\n\nexport class PasswordTransformer implements ValueTransformer {\n  from(value: string) {\n    return value;\n  }\n\n  to(value: string) {\n    return crypto.createHmac('sha256', value).digest('hex');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterPayload.html":{"url":"classes/RegisterPayload.html","title":"class - RegisterPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/register.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, example: 'test@test.com'})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/register.payload.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/register.payload.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/register.payload.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()@MinLength(5)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/register.payload.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, enum: UserRole, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/register.payload.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger';\nimport {IsEmail, IsNotEmpty, MinLength} from 'class-validator';\nimport {UserRole} from '../user/user-role';\n\nexport class RegisterPayload {\n  @ApiProperty({required: true, example: 'test@test.com'})\n  @IsEmail()\n  email!: string;\n\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  firstName!: string;\n\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  lastName!: string;\n\n  @ApiProperty({required: false, enum: UserRole, default: UserRole.NONE})\n  role?: string;\n\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  @MinLength(5)\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestArticle.html":{"url":"classes/RequestArticle.html","title":"class - RequestArticle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestArticle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/requestArticle.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articleCount\n                            \n                            \n                                articleDone\n                            \n                            \n                                articleId\n                            \n                            \n                                id\n                            \n                            \n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articleCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articleDone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articleId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, Entity, ManyToOne, PrimaryGeneratedColumn} from 'typeorm';\nimport {RequestEntity} from './request.entity';\nimport {ApiProperty} from '@nestjs/swagger';\n\n@Entity({\n  name: 'requestArticle',\n})\nexport class RequestArticle {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({required: true})\n  @Column()\n  articleId!: number;\n\n  @ApiProperty({required: true})\n  @Column()\n  articleCount!: number;\n\n  @ApiProperty({required: true})\n  @Column({default: false})\n  articleDone!: boolean;\n\n  @ManyToOne(\n    type => RequestEntity,\n    request => request.articles,\n  )\n  request!: RequestEntity;\n}\n\nexport class RequestFillableFields {\n  requester!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestArticleStatusDto.html":{"url":"classes/RequestArticleStatusDto.html","title":"class - RequestArticleStatusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestArticleStatusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/dto/shopping-list-form.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articleDone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articleDone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/dto/shopping-list-form.dto.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ShoppingListStatus } from '../shopping-list-status';\n\nexport class ShoppingListFormDto {\n  @ApiProperty({\n    required: true,\n    description: 'List of request IDs',\n    type: [Number],\n  })\n  readonly requests!: number[];\n\n  @ApiProperty({\n    required: false,\n    enum: ShoppingListStatus,\n    default: ShoppingListStatus.ACTIVE,\n  })\n  status!: string;\n}\n\nexport class RequestArticleStatusDto {\n  @ApiProperty({\n    required: true,\n  })\n  articleDone!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RequestController.html":{"url":"controllers/RequestController.html","title":"controller - RequestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RequestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/request.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                request\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getSingleRequest\n                            \n                            \n                                    Async\n                                insertRequestWithArticles\n                            \n                            \n                                    Async\n                                markArticleAsDone\n                            \n                            \n                                    Async\n                                updateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(onlyMine: string, zipCode: string, user: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Successful', type: undefined})@ApiQuery({name: 'onlyMine', required: false, description: 'if \"true\", only the requesting user requests will be replied.'})@ApiQuery({name: 'zipCode', required: false, description: 'if set, only requests within the same zip code will be replied'})\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onlyMine\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    zipCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSingleRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSingleRequest(requestId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':requestId')@ApiOkResponse({description: 'Successful', type: RequestEntity})@ApiBadRequestResponse({description: 'Bad request'})@ApiNotFoundResponse({description: 'Request not found'})\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertRequestWithArticles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertRequestWithArticles(createRequestDto: RequestFormDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({description: 'Add a complete request including articles.', type: RequestEntity})@Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRequestDto\n                                    \n                                                RequestFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            markArticleAsDone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markArticleAsDone(requestId: number, articleId: number, articleStatus: RequestArticleStatusDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':requestId/:articleId')@ApiOkResponse({description: 'Successful', type: RequestEntity})@ApiBadRequestResponse({description: 'Bad request'})@ApiNotFoundResponse({description: 'Request not found'})\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleStatus\n                                    \n                                                RequestArticleStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRequest(requestId: number, requestFormDto: RequestFormDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':requestId')@ApiOkResponse({description: 'Successful', type: RequestEntity})@ApiBadRequestResponse({description: 'Bad request'})@ApiNotFoundResponse({description: 'Request not found'})\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestFormDto\n                                    \n                                                RequestFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, Get, Logger, NotFoundException, Param, Post, Put, Query, UseGuards} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiQuery,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport {RequestService} from './request.service';\nimport {RequestEntity} from './request.entity';\nimport {RequestFormDto} from './dto/request-form.dto';\nimport {ReqUser} from '../common/decorators/user.decorator';\nimport {JwtAuthGuard} from '../common/guards/jwt-guard';\nimport {RequestArticleStatusDto} from '../shoppingList/dto/shopping-list-form.dto';\nimport {UserID} from '../user/user.entity';\nimport {UsersService} from '../user/user.service';\n\n@ApiBearerAuth()\n@ApiTags('Request')\n@UseGuards(JwtAuthGuard)\n@ApiUnauthorizedResponse({description: 'Unauthorized'})\n@Controller('request')\nexport class RequestController {\n  static LOGGER = new Logger('Request', true);\n\n  constructor(private readonly requestService: RequestService, private readonly userService: UsersService) {\n  }\n\n  @Get()\n  @ApiOkResponse({description: 'Successful', type: [RequestEntity]})\n  @ApiQuery({\n    name: 'onlyMine',\n    required: false,\n    description:\n      'if \"true\", only the requesting user requests will be replied.',\n  })\n  @ApiQuery({\n    name: 'zipCode',\n    required: false,\n    description:\n      'if set, only requests within the same zip code will be replied',\n  })\n  async getAll(\n    @Query('onlyMine') onlyMine: string,\n    @Query('zipCode') zipCode: string,\n    @ReqUser() user: any,\n  ): Promise {\n    const requests = await this.requestService.getAll(user, onlyMine, zipCode);\n    if (onlyMine !== 'true')\n      requests.map(async (r) => {\n        r.requester = await this.userService.get(r.requesterId);\n      });\n    return requests;\n  }\n\n  @ApiCreatedResponse({\n    description: 'Add a complete request including articles.',\n    type: RequestEntity,\n  })\n  @Post()\n  async insertRequestWithArticles(\n    @Body() createRequestDto: RequestFormDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const entity = await this.requestService.create(createRequestDto, user);\n    entity.requester = await this.userService.get(entity.requesterId);\n    return entity;\n  }\n\n  @Get(':requestId')\n  @ApiOkResponse({description: 'Successful', type: RequestEntity})\n  @ApiBadRequestResponse({description: 'Bad request'})\n  @ApiNotFoundResponse({description: 'Request not found'})\n  async getSingleRequest(\n    @Param('requestId') requestId: number,\n  ): Promise {\n    const entity = await this.requestService.get(requestId);\n    if (!entity) {\n      throw new NotFoundException('This request does not exist');\n    }\n    entity.requester = await this.userService.get(entity.requesterId);\n    return entity;\n  }\n\n  @Put(':requestId')\n  @ApiOkResponse({description: 'Successful', type: RequestEntity})\n  @ApiBadRequestResponse({description: 'Bad request'})\n  @ApiNotFoundResponse({description: 'Request not found'})\n  async updateRequest(\n    @Param('requestId') requestId: number,\n    @Body() requestFormDto: RequestFormDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const entity = await this.requestService.update(requestId, requestFormDto);\n    entity.requester = await this.userService.get(entity.requesterId);\n    return entity;\n  }\n\n  @Put(':requestId/:articleId')\n  @ApiOkResponse({description: 'Successful', type: RequestEntity})\n  @ApiBadRequestResponse({description: 'Bad request'})\n  @ApiNotFoundResponse({description: 'Request not found'})\n  async markArticleAsDone(\n    @Param('requestId') requestId: number,\n    @Param('articleId') articleId: number,\n    @Body() articleStatus: RequestArticleStatusDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const entity = await this.requestService.updateRequestArticle(requestId, articleId, articleStatus);\n    entity.requester = await this.userService.get(entity.requesterId);\n    return entity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestEntity.html":{"url":"classes/RequestEntity.html","title":"class - RequestEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/request.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AddressModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                additionalRequest\n                            \n                            \n                                articles\n                            \n                            \n                                created_at\n                            \n                            \n                                    Optional\n                                deliveryComment\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    Optional\n                                priority\n                            \n                            \n                                requester\n                            \n                            \n                                requesterId\n                            \n                            \n                                status\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                number\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            additionalRequest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestArticle[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: undefined})@OneToMany(undefined, undefined, {cascade: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()@CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deliveryComment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'integer'})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            priority\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({name: 'priority', type: 'enum', default: 'low', enum: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requester\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: User})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requesterId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'integer'})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({type: 'enum', enum: RequestStatus, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:24\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, CreateDateColumn, Entity, OneToMany, PrimaryGeneratedColumn} from 'typeorm';\nimport {RequestArticle} from './requestArticle.entity';\nimport {ApiProperty, ApiPropertyOptional} from '@nestjs/swagger';\nimport {RequestStatus} from './request-status';\nimport {AddressModel} from '../main/models/address.model';\nimport {User} from '../user/user.entity';\nimport {Exclude} from 'class-transformer';\n\n@Entity({\n  name: 'request',\n})\nexport class RequestEntity extends AddressModel {\n  @ApiProperty({type: 'integer'})\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty()\n  @Column()\n  @CreateDateColumn()\n  created_at!: Date;\n\n  @ApiProperty({type: 'integer'})\n  @Column()\n  requesterId!: number;\n\n  @ApiProperty()\n  @Column({\n    name: 'priority',\n    type: 'enum',\n    default: 'low',\n    enum: ['low', 'medium', 'high'],\n  })\n  priority?: string;\n\n  @ApiProperty()\n  @Column({nullable: true})\n  additionalRequest?: string;\n\n  @ApiProperty()\n  @Column({nullable: true})\n  deliveryComment?: string;\n\n  @ApiProperty()\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  phoneNumber?: string;\n\n  @ApiProperty()\n  @Column({\n    type: 'enum',\n    enum: RequestStatus,\n    default: RequestStatus.NEW,\n  })\n  status!: string;\n\n  @ApiProperty({type: [RequestArticle]})\n  @OneToMany(\n    type => RequestArticle,\n    requestArticle => requestArticle.request,\n    {cascade: true},\n  )\n  articles!: RequestArticle[];\n\n  @ApiPropertyOptional({type: User})\n  @Exclude()\n  requester!: User;\n}\n\nexport class RequestFillableFields {\n  requesterId!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestFillableFields.html":{"url":"classes/RequestFillableFields.html","title":"class - RequestFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/request.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                requesterId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requesterId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:72\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, CreateDateColumn, Entity, OneToMany, PrimaryGeneratedColumn} from 'typeorm';\nimport {RequestArticle} from './requestArticle.entity';\nimport {ApiProperty, ApiPropertyOptional} from '@nestjs/swagger';\nimport {RequestStatus} from './request-status';\nimport {AddressModel} from '../main/models/address.model';\nimport {User} from '../user/user.entity';\nimport {Exclude} from 'class-transformer';\n\n@Entity({\n  name: 'request',\n})\nexport class RequestEntity extends AddressModel {\n  @ApiProperty({type: 'integer'})\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty()\n  @Column()\n  @CreateDateColumn()\n  created_at!: Date;\n\n  @ApiProperty({type: 'integer'})\n  @Column()\n  requesterId!: number;\n\n  @ApiProperty()\n  @Column({\n    name: 'priority',\n    type: 'enum',\n    default: 'low',\n    enum: ['low', 'medium', 'high'],\n  })\n  priority?: string;\n\n  @ApiProperty()\n  @Column({nullable: true})\n  additionalRequest?: string;\n\n  @ApiProperty()\n  @Column({nullable: true})\n  deliveryComment?: string;\n\n  @ApiProperty()\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  phoneNumber?: string;\n\n  @ApiProperty()\n  @Column({\n    type: 'enum',\n    enum: RequestStatus,\n    default: RequestStatus.NEW,\n  })\n  status!: string;\n\n  @ApiProperty({type: [RequestArticle]})\n  @OneToMany(\n    type => RequestArticle,\n    requestArticle => requestArticle.request,\n    {cascade: true},\n  )\n  articles!: RequestArticle[];\n\n  @ApiPropertyOptional({type: User})\n  @Exclude()\n  requester!: User;\n}\n\nexport class RequestFillableFields {\n  requesterId!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestFillableFields-1.html":{"url":"classes/RequestFillableFields-1.html","title":"class - RequestFillableFields-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/requestArticle.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                requester\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requester\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, Entity, ManyToOne, PrimaryGeneratedColumn} from 'typeorm';\nimport {RequestEntity} from './request.entity';\nimport {ApiProperty} from '@nestjs/swagger';\n\n@Entity({\n  name: 'requestArticle',\n})\nexport class RequestArticle {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({required: true})\n  @Column()\n  articleId!: number;\n\n  @ApiProperty({required: true})\n  @Column()\n  articleCount!: number;\n\n  @ApiProperty({required: true})\n  @Column({default: false})\n  articleDone!: boolean;\n\n  @ManyToOne(\n    type => RequestEntity,\n    request => request.articles,\n  )\n  request!: RequestEntity;\n}\n\nexport class RequestFillableFields {\n  requester!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestFormDto.html":{"url":"classes/RequestFormDto.html","title":"class - RequestFormDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestFormDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/dto/request-form.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AddressModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                additionalRequest\n                            \n                            \n                                    Readonly\n                                articles\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deliveryComment\n                            \n                            \n                                    Readonly\n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                number\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            additionalRequest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            articles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CreateRequestArticleDto[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'List of articles', type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deliveryComment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:24\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger';\nimport {AddressModel} from '../../main/models/address.model';\n\nexport class CreateRequestArticleDto {\n  @ApiProperty({\n    required: true,\n    description: 'Article ID received from the article list',\n    type: 'integer',\n  })\n  readonly articleId!: number;\n\n  @ApiProperty({\n    required: true,\n    description: 'Number of items',\n    type: 'integer',\n  })\n  readonly articleCount!: number;\n}\n\nexport class RequestFormDto extends AddressModel {\n  @ApiProperty({\n    required: true,\n    description: 'List of articles',\n    type: [CreateRequestArticleDto],\n  })\n  readonly articles!: CreateRequestArticleDto[];\n\n  @ApiProperty()\n  readonly additionalRequest?: string;\n  @ApiProperty()\n  readonly deliveryComment?: string;\n  @ApiProperty()\n  readonly phoneNumber?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RequestModule.html":{"url":"modules/RequestModule.html","title":"module - RequestModule","body":"\n                   \n\n\n\n\n    Modules\n    RequestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RequestModule\n\n\n\ncluster_RequestModule_imports\n\n\n\ncluster_RequestModule_exports\n\n\n\ncluster_RequestModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nRequestModule\n\nRequestModule\n\nRequestModule -->\n\nUserModule->RequestModule\n\n\n\n\n\nRequestService \n\nRequestService \n\nRequestService  -->\n\nRequestModule->RequestService \n\n\n\n\n\nRequestService\n\nRequestService\n\nRequestModule -->\n\nRequestService->RequestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/request/request.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RequestService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RequestController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RequestService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {TypeOrmModule} from '@nestjs/typeorm';\nimport {RequestService} from './request.service';\nimport {RequestEntity} from './request.entity';\nimport {RequestController} from './request.controller';\nimport {UserModule} from '../user/user.module';\n\n@Module({\n  imports: [UserModule, TypeOrmModule.forFeature([RequestEntity])],\n  exports: [RequestService],\n  controllers: [RequestController],\n  providers: [RequestService],\n})\nexport class RequestModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestService.html":{"url":"injectables/RequestService.html","title":"injectable - RequestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/request.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                LOGGER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Private\n                                    Async\n                                findRequest\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Private\n                                populateRequest\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateRequestArticle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(requestRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/request/request.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRequestDto: RequestFormDto, user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRequestDto\n                                    \n                                                RequestFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findRequest(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(user: any, onlyMine: string, zipCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    onlyMine\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    zipCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            populateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populateRequest(request: RequestEntity, createRequestDto: RequestFormDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createRequestDto\n                                    \n                                                RequestFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(requestId: number, requestEntity: RequestFormDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestEntity\n                                    \n                                                RequestFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateRequestArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRequestArticle(requestId: number, articleId: number, articleStatusDto: RequestArticleStatusDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleStatusDto\n                                    \n                                                RequestArticleStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            LOGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('Request', true)\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {BadRequestException, Injectable, Logger, NotFoundException} from '@nestjs/common';\nimport {InjectRepository} from '@nestjs/typeorm';\nimport {Repository} from 'typeorm';\n\nimport {Roles} from '../common/decorators/roles.decorator';\nimport {RequestEntity} from './request.entity';\nimport {RequestFormDto} from './dto/request-form.dto';\nimport {RequestArticle} from './requestArticle.entity';\nimport {RequestArticleStatusDto} from '../shoppingList/dto/shopping-list-form.dto';\n\n@Injectable()\n@Roles('user')\nexport class RequestService {\n  static LOGGER = new Logger('Request', true);\n\n  constructor(\n    @InjectRepository(RequestEntity)\n    private readonly requestRepository: Repository,\n  ) {\n  }\n\n  async get(id: number) {\n    return this.requestRepository.findOne(id, {relations: ['articles']});\n  }\n\n  async create(createRequestDto: RequestFormDto, user: any) {\n    const request = new RequestEntity();\n    this.populateRequest(request, createRequestDto);\n    request.requesterId = user.userId;\n\n    return this.requestRepository.save(request);\n  }\n\n  private populateRequest(request: RequestEntity, createRequestDto: RequestFormDto) {\n    request.articles = [];\n    if (createRequestDto.articles) {\n      createRequestDto.articles.forEach(art => {\n        const newArticle = new RequestArticle();\n        newArticle.articleId = art.articleId;\n        newArticle.articleCount = art.articleCount;\n        newArticle.articleDone = false;\n        request.articles.push(newArticle);\n      });\n    }\n    request.additionalRequest = createRequestDto.additionalRequest;\n    request.phoneNumber = createRequestDto.phoneNumber;\n    request.deliveryComment = createRequestDto.deliveryComment;\n    request.city = createRequestDto.city;\n    request.street = createRequestDto.street;\n    request.number = createRequestDto.number;\n    request.zipCode = createRequestDto.zipCode;\n  }\n\n  async getAll(user: any, onlyMine: string, zipCode: string) {\n    const conditions: any = {};\n    if (onlyMine === 'true') {\n      conditions.requester = user.userId;\n    }\n    if (zipCode) {\n      conditions.zipCode = zipCode;\n    }\n    return await this.requestRepository.find({\n      where: conditions, relations: ['articles'],\n    });\n  }\n\n  async updateRequestArticle(requestId: number, articleId: number, articleStatusDto: RequestArticleStatusDto) {\n    const request: RequestEntity = await this.findRequest(requestId);\n    const article = request.articles.find((v) => v.articleId === Number(articleId));\n    if (!article) {\n      throw new BadRequestException('This article does not exist in the request');\n    }\n    article.articleDone = articleStatusDto.articleDone;\n    return await this.requestRepository.save(request);\n  }\n\n  async update(requestId: number, requestEntity: RequestFormDto) {\n    const request: RequestEntity = await this.findRequest(requestId);\n    this.populateRequest(request, requestEntity);\n\n    return await this.requestRepository.save(request);\n  }\n\n  private async findRequest(id: number) {\n    const request: RequestEntity | undefined = await this.get(id);\n    if (!request) {\n      throw new NotFoundException('This request does not exist');\n    }\n    return request;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseTokenDto.html":{"url":"classes/ResponseTokenDto.html","title":"class - ResponseTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/response-token.dt.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                expiresIn\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'jwt token'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/response-token.dt.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'seconds until expiration', type: 'integer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/response-token.dt.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'user id', type: 'integer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/response-token.dt.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ResponseTokenDto {\n  @ApiProperty({\n    description: 'seconds until expiration',\n    type: 'integer',\n  })\n  expiresIn!: number;\n\n  @ApiProperty({\n    description: 'jwt token',\n  })\n  accessToken!: string;\n\n  @ApiProperty({\n    description: 'user id',\n    type: 'integer',\n  })\n  id!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingList.html":{"url":"classes/ShoppingList.html","title":"class - ShoppingList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                id\n                            \n                            \n                                owner\n                            \n                            \n                                requests\n                            \n                            \n                                status\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()@CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ShoppingListRequest[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: undefined})@OneToMany(undefined, undefined, {cascade: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({type: 'enum', enum: ShoppingListStatus, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()@UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, CreateDateColumn, Entity, OneToMany, PrimaryGeneratedColumn, UpdateDateColumn} from 'typeorm';\nimport {ShoppingListRequest} from './shopping-list-request.entity';\nimport {ApiProperty} from '@nestjs/swagger';\nimport {ShoppingListStatus} from './shopping-list-status';\n\n@Entity({\n  name: 'shoppingList',\n})\nexport class ShoppingList {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty()\n  @Column()\n  owner!: number;\n\n  @ApiProperty()\n  @Column()\n  @CreateDateColumn()\n  created_at!: Date;\n\n  @ApiProperty()\n  @Column()\n  @UpdateDateColumn()\n  updated_at!: Date;\n\n  @ApiProperty()\n  @Column({\n    type: 'enum',\n    enum: ShoppingListStatus,\n    default: ShoppingListStatus.ACTIVE,\n  })\n  status!: string;\n\n  @ApiProperty({type: [ShoppingListRequest]})\n  @OneToMany(\n    type => ShoppingListRequest,\n    shoppingListRequest => shoppingListRequest.shoppingList,\n    {cascade: true},\n  )\n  requests!: ShoppingListRequest[];\n}\n\nexport class ShoppingListFillableFields {\n  owner!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ShoppingListController.html":{"url":"controllers/ShoppingListController.html","title":"controller - ShoppingListController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ShoppingListController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                shopping-list\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRequestToList\n                            \n                            \n                                    Async\n                                deleteRequestFromList\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                    Async\n                                findShoppingList\n                            \n                            \n                                    Async\n                                getUserLists\n                            \n                            \n                                    Async\n                                insertNewShoppingList\n                            \n                            \n                                    Async\n                                updateShoppingList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addRequestToList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addRequestToList(shoppingListId: number, requestId: number, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':shoppingListId/:requestId')@ApiOkResponse({description: 'Successful', type: ShoppingList})@ApiBadRequestResponse({description: 'Bad request'})@ApiForbiddenResponse({description: 'This is not your shopping list'})@ApiNotFoundResponse({description: 'Shopping list not found'})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shoppingListId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteRequestFromList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRequestFromList(shoppingListId: number, requestId: number, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':shoppingListId/:requestId')@ApiOkResponse({description: 'Successful', type: ShoppingList})@ApiBadRequestResponse({description: 'Bad request'})@ApiForbiddenResponse({description: 'This is not your shopping list'})@ApiNotFoundResponse({description: 'Shopping list not found'})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shoppingListId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({description: 'Successful', type: ShoppingList})@ApiNotFoundResponse({description: 'Shopping list not found'})@ApiForbiddenResponse({description: 'This is not your shopping list'})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findShoppingList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findShoppingList(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserLists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserLists(user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Successful', type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertNewShoppingList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertNewShoppingList(createRequestDto: ShoppingListFormDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({description: 'Added a new shopping list', type: ShoppingList})@ApiBadRequestResponse({description: 'Bad request'})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRequestDto\n                                    \n                                                ShoppingListFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateShoppingList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateShoppingList(id: number, updateShoppingList: ShoppingListFormDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOkResponse({description: 'Successful', type: ShoppingList})@ApiBadRequestResponse({description: 'Bad request'})@ApiNotFoundResponse({description: 'Shopping list not found'})@ApiForbiddenResponse({description: 'This is not your shopping list'})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateShoppingList\n                                    \n                                                ShoppingListFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Logger,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiForbiddenResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport {ShoppingListService} from './shopping-list.service';\nimport {ShoppingList} from './shopping-list.entity';\nimport {ShoppingListFormDto} from './dto/shopping-list-form.dto';\nimport {ReqUser} from '../common/decorators/user.decorator';\nimport {JwtAuthGuard} from '../common/guards/jwt-guard';\nimport {UserID} from '../user/user.entity';\nimport {RequestService} from '../request/request.service';\n\n@ApiBearerAuth()\n@ApiTags('Shopping List')\n@ApiUnauthorizedResponse({description: 'Unauthorized'})\n@UseGuards(JwtAuthGuard)\n@Controller('shopping-list')\nexport class ShoppingListController {\n  static LOGGER = new Logger('ShoppingList', true);\n\n  constructor(private readonly shoppingListService: ShoppingListService,\n              private readonly requestService: RequestService,\n  ) {\n  }\n\n  @Get()\n  @ApiOkResponse({description: 'Successful', type: [ShoppingList]})\n  async getUserLists(@ReqUser() user: UserID): Promise {\n    return await this.shoppingListService.getAllByUser(user.userId);\n  }\n\n  @Get(':id')\n  @ApiOkResponse({description: 'Successful', type: ShoppingList})\n  @ApiNotFoundResponse({description: 'Shopping list not found'})\n  @ApiForbiddenResponse({description: 'This is not your shopping list'})\n  async findOne(\n    @Param('id') id: number,\n    @ReqUser() user: UserID,\n  ): Promise {\n    return await this.findShoppingList(id, user.userId);\n  }\n\n  @Post()\n  @ApiCreatedResponse({description: 'Added a new shopping list', type: ShoppingList})\n  @ApiBadRequestResponse({description: 'Bad request'})\n  async insertNewShoppingList(\n    @Body() createRequestDto: ShoppingListFormDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    return this.shoppingListService.create(createRequestDto, user);\n  }\n\n  @Put(':id')\n  @ApiOkResponse({description: 'Successful', type: ShoppingList})\n  @ApiBadRequestResponse({description: 'Bad request'})\n  @ApiNotFoundResponse({description: 'Shopping list not found'})\n  @ApiForbiddenResponse({description: 'This is not your shopping list'})\n  async updateShoppingList(\n    @Param('id') id: number,\n    @Body() updateShoppingList: ShoppingListFormDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const shoppingList = await this.findShoppingList(id, user.userId);\n    return this.shoppingListService.update(updateShoppingList, shoppingList);\n  }\n\n  @Put(':shoppingListId/:requestId')\n  @ApiOkResponse({description: 'Successful', type: ShoppingList})\n  @ApiBadRequestResponse({description: 'Bad request'})\n  @ApiForbiddenResponse({description: 'This is not your shopping list'})\n  @ApiNotFoundResponse({description: 'Shopping list not found'})\n  async addRequestToList(\n    @Param('shoppingListId') shoppingListId: number,\n    @Param('requestId') requestId: number,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const shoppingList = await this.findShoppingList(shoppingListId, user.userId);\n    const request = await this.requestService.get(requestId);\n    ShoppingListController.LOGGER.log(request);\n    if (!request) {\n      throw new BadRequestException('This request does not exist');\n    }\n    return this.shoppingListService.addRequestToList(request.id, shoppingList);\n  }\n\n  @Delete(':shoppingListId/:requestId')\n  @ApiOkResponse({description: 'Successful', type: ShoppingList})\n  @ApiBadRequestResponse({description: 'Bad request'})\n  @ApiForbiddenResponse({description: 'This is not your shopping list'})\n  @ApiNotFoundResponse({description: 'Shopping list not found'})\n  async deleteRequestFromList(\n    @Param('shoppingListId') shoppingListId: number,\n    @Param('requestId') requestId: number,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const shoppingList = await this.findShoppingList(shoppingListId, user.userId);\n    return this.shoppingListService.removeRequest(requestId, shoppingList);\n  }\n\n  private async findShoppingList(id: number, userId: number) {\n    const shoppingList = await this.shoppingListService.get(id);\n    if (shoppingList.owner !== userId) {\n      throw new ForbiddenException('You can only see or edit your own shopping lists!');\n    }\n    return shoppingList;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingListFillableFields.html":{"url":"classes/ShoppingListFillableFields.html","title":"class - ShoppingListFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingListFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, CreateDateColumn, Entity, OneToMany, PrimaryGeneratedColumn, UpdateDateColumn} from 'typeorm';\nimport {ShoppingListRequest} from './shopping-list-request.entity';\nimport {ApiProperty} from '@nestjs/swagger';\nimport {ShoppingListStatus} from './shopping-list-status';\n\n@Entity({\n  name: 'shoppingList',\n})\nexport class ShoppingList {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty()\n  @Column()\n  owner!: number;\n\n  @ApiProperty()\n  @Column()\n  @CreateDateColumn()\n  created_at!: Date;\n\n  @ApiProperty()\n  @Column()\n  @UpdateDateColumn()\n  updated_at!: Date;\n\n  @ApiProperty()\n  @Column({\n    type: 'enum',\n    enum: ShoppingListStatus,\n    default: ShoppingListStatus.ACTIVE,\n  })\n  status!: string;\n\n  @ApiProperty({type: [ShoppingListRequest]})\n  @OneToMany(\n    type => ShoppingListRequest,\n    shoppingListRequest => shoppingListRequest.shoppingList,\n    {cascade: true},\n  )\n  requests!: ShoppingListRequest[];\n}\n\nexport class ShoppingListFillableFields {\n  owner!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingListFormDto.html":{"url":"classes/ShoppingListFormDto.html","title":"class - ShoppingListFormDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingListFormDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/dto/shopping-list-form.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                requests\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            requests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'List of request IDs', type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/dto/shopping-list-form.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, enum: ShoppingListStatus, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/dto/shopping-list-form.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ShoppingListStatus } from '../shopping-list-status';\n\nexport class ShoppingListFormDto {\n  @ApiProperty({\n    required: true,\n    description: 'List of request IDs',\n    type: [Number],\n  })\n  readonly requests!: number[];\n\n  @ApiProperty({\n    required: false,\n    enum: ShoppingListStatus,\n    default: ShoppingListStatus.ACTIVE,\n  })\n  status!: string;\n}\n\nexport class RequestArticleStatusDto {\n  @ApiProperty({\n    required: true,\n  })\n  articleDone!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShoppingListModule.html":{"url":"modules/ShoppingListModule.html","title":"module - ShoppingListModule","body":"\n                   \n\n\n\n\n    Modules\n    ShoppingListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShoppingListModule\n\n\n\ncluster_ShoppingListModule_imports\n\n\n\ncluster_ShoppingListModule_exports\n\n\n\ncluster_ShoppingListModule_providers\n\n\n\n\nRequestModule\n\nRequestModule\n\n\n\nShoppingListModule\n\nShoppingListModule\n\nShoppingListModule -->\n\nRequestModule->ShoppingListModule\n\n\n\n\n\nShoppingListService \n\nShoppingListService \n\nShoppingListService  -->\n\nShoppingListModule->ShoppingListService \n\n\n\n\n\nShoppingListService\n\nShoppingListService\n\nShoppingListModule -->\n\nShoppingListService->ShoppingListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ShoppingListService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ShoppingListController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RequestModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ShoppingListService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {TypeOrmModule} from '@nestjs/typeorm';\nimport {ShoppingListService} from './shopping-list.service';\nimport {ShoppingListController} from './shopping-list.controller';\nimport {ShoppingList} from './shopping-list.entity';\nimport {RequestModule} from '../request/request.module';\n\n@Module({\n  imports: [RequestModule, TypeOrmModule.forFeature([ShoppingList])],\n  exports: [ShoppingListService],\n  controllers: [ShoppingListController],\n  providers: [ShoppingListService],\n})\nexport class ShoppingListModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingListRequest.html":{"url":"classes/ShoppingListRequest.html","title":"class - ShoppingListRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingListRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list-request.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                requestId\n                            \n                            \n                                shoppingList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()@ApiHideProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list-request.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list-request.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shoppingList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ShoppingList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list-request.entity.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, Entity, ManyToOne, PrimaryGeneratedColumn} from 'typeorm';\nimport {ShoppingList} from './shopping-list.entity';\nimport {ApiHideProperty, ApiProperty} from '@nestjs/swagger';\n\n@Entity({\n  name: 'shoppingListRequest',\n})\nexport class ShoppingListRequest {\n  @PrimaryGeneratedColumn()\n  @ApiHideProperty()\n  id!: number;\n\n  @ApiProperty({required: true})\n  @Column()\n  requestId!: number;\n\n  @ManyToOne(\n    type => ShoppingList,\n    shoppingList => shoppingList.requests,\n  )\n  shoppingList!: ShoppingList;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingListService.html":{"url":"injectables/ShoppingListService.html","title":"injectable - ShoppingListService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                LOGGER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRequestToList\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAllByUser\n                            \n                            \n                                    Private\n                                populateShoppingList\n                            \n                            \n                                    Async\n                                removeRequest\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingListRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/shoppingList/shopping-list.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingListRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addRequestToList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addRequestToList(requestId: number, shoppingList: ShoppingList)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shoppingList\n                                    \n                                                ShoppingList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRequestDto: ShoppingListFormDto, user: UserID)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRequestDto\n                                    \n                                                ShoppingListFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllByUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllByUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            populateShoppingList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populateShoppingList(from: ShoppingListFormDto, to: ShoppingList)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                ShoppingListFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                ShoppingList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRequest(requestId: number, shoppingList: ShoppingList)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shoppingList\n                                    \n                                                ShoppingList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(form: ShoppingListFormDto, shoppingList: ShoppingList)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                ShoppingListFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shoppingList\n                                    \n                                                ShoppingList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            LOGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('ShoppingList', true)\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {BadRequestException, Injectable, Logger, NotFoundException} from '@nestjs/common';\nimport {InjectRepository} from '@nestjs/typeorm';\nimport {Repository} from 'typeorm';\n\nimport {Roles} from '../common/decorators/roles.decorator';\nimport {ShoppingList} from './shopping-list.entity';\nimport {ShoppingListFormDto} from './dto/shopping-list-form.dto';\nimport {ShoppingListStatus} from './shopping-list-status';\nimport {ShoppingListRequest} from './shopping-list-request.entity';\nimport {UserID} from '../user/user.entity';\n\n@Injectable()\n@Roles('helper')\nexport class ShoppingListService {\n  static LOGGER = new Logger('ShoppingList', true);\n\n  constructor(\n    @InjectRepository(ShoppingList)\n    private readonly shoppingListRepository: Repository,\n  ) {\n  }\n\n  async get(id: number) {\n    const shoppingList = await this.shoppingListRepository.findOne(id, {relations: ['requests']});\n    if (!shoppingList) {\n      throw new NotFoundException('Shopping List not found');\n    }\n    return shoppingList;\n  }\n\n  async create(createRequestDto: ShoppingListFormDto, user: UserID) {\n    const shoppingList = new ShoppingList();\n    shoppingList.requests = [];\n    this.populateShoppingList(createRequestDto, shoppingList);\n    shoppingList.owner = user.userId;\n    shoppingList.status = ShoppingListStatus.ACTIVE;\n\n    return this.shoppingListRepository.save(shoppingList);\n  }\n\n  async getAllByUser(userId: number) {\n    return await this.shoppingListRepository.find({\n      where: {owner: userId},\n      relations: ['requests'],\n    });\n  }\n\n  async update(form: ShoppingListFormDto, shoppingList: ShoppingList) {\n    this.populateShoppingList(form, shoppingList);\n    return await this.shoppingListRepository.save(shoppingList);\n  }\n\n  async addRequestToList(requestId: number, shoppingList: ShoppingList) {\n    if (!shoppingList.requests.find(r => r.requestId === requestId)) {\n      const newRequest = new ShoppingListRequest();\n      newRequest.requestId = requestId;\n      shoppingList.requests.push(newRequest);\n    } else {\n      throw new BadRequestException('Already exists');\n    }\n    return await this.shoppingListRepository.save(shoppingList);\n  }\n\n  async removeRequest(requestId: number, shoppingList: ShoppingList) {\n    const index = shoppingList.requests.findIndex(r => r.requestId === Number(requestId));\n    ShoppingListService.LOGGER.log(index);\n    ShoppingListService.LOGGER.log(shoppingList);\n    if (index > -1) {\n      shoppingList.requests.splice(index, 1);\n    } else {\n      throw new BadRequestException('Does not exists');\n    }\n    return await this.shoppingListRepository.save(shoppingList);\n  }\n\n  private populateShoppingList(from: ShoppingListFormDto, to: ShoppingList) {\n    to.status = from.status;\n    if (from.requests) {\n      from.requests.forEach(reqId => {\n        if (!to.requests.find(r => r.requestId === reqId)) {\n          const newRequest = new ShoppingListRequest();\n          newRequest.requestId = reqId;\n          to.requests.push(newRequest);\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/update-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AddressModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                role\n                            \n                            \n                                    Optional\n                                telephone\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                number\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, enum: undefined})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            telephone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:24\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty, ApiPropertyOptional} from '@nestjs/swagger';\nimport {IsNotEmpty} from 'class-validator';\nimport {AddressModel} from '../../main/models/address.model';\n\nexport class UpdateUserDto extends AddressModel {\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  firstName!: string;\n\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  lastName!: string;\n\n  @ApiProperty({required: true, enum: ['helper', 'seeker']})\n  @IsNotEmpty()\n  role!: string;\n\n  @ApiPropertyOptional()\n  telephone?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AddressModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                    Optional\n                                telephone\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                number\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'password', length: 255, transformer: undefined})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column({type: 'enum', enum: UserRole, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            telephone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:24\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Exclude} from 'class-transformer';\nimport {Column, Entity, PrimaryGeneratedColumn} from 'typeorm';\n\nimport {PasswordTransformer} from './password.transformer';\nimport {UserRole} from './user-role';\nimport {ApiProperty} from '@nestjs/swagger';\nimport {AddressModel} from '../main/models/address.model';\n\n@Entity({\n  name: 'users',\n})\nexport class User extends AddressModel {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  firstName!: string;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  lastName!: string;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  email!: string;\n\n  @ApiProperty({required: true})\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.NONE,\n  })\n  role!: string;\n\n  @ApiProperty({required: false})\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  telephone?: string;\n\n  @Column({\n    name: 'password',\n    length: 255,\n    transformer: new PasswordTransformer(),\n  })\n  @Exclude()\n  password!: string;\n}\n\nexport class UserFillableFields {\n  email!: string;\n  firstName!: string;\n  lastName!: string;\n  role?: string;\n  telephone?: string;\n  address?: string;\n  password!: string;\n}\n\nexport class UserID {\n  userId!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({description: 'Successful', type: User})@ApiNotFoundResponse({description: 'User not found'})@ApiBadRequestResponse({description: 'Bad Request'})@ApiParam({name: 'id', description: 'user id', type: 'integer'})\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Successful', type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateUserDto: UpdateUserDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOkResponse({description: 'Successful', type: User})@ApiBadRequestResponse({description: 'Bad Request'})@ApiNotFoundResponse({description: 'User not found'})@ApiForbiddenResponse({description: 'Forbidden'})@ApiParam({name: 'id', description: 'user id', type: 'integer'})\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, ForbiddenException, Get, Logger, Param, Put, UseGuards} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiForbiddenResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger';\nimport {ReqUser} from '../common/decorators/user.decorator';\nimport {User, UserID} from './user.entity';\nimport {UsersService} from './user.service';\nimport {UpdateUserDto} from './dto/update-user.dto';\nimport {JwtAuthGuard} from '../common/guards/jwt-guard';\n\n@ApiBearerAuth()\n@Controller('user')\n@UseGuards(JwtAuthGuard)\n@ApiTags('User')\nexport class UserController {\n  static LOGGER = new Logger('User', true);\n\n  constructor(private readonly userService: UsersService) {\n  }\n\n  @Get()\n  @ApiOkResponse({description: 'Successful', type: [User]})\n  async getAll(): Promise {\n    return await this.userService.getAll();\n  }\n\n  @Get(':id')\n  @ApiOkResponse({description: 'Successful', type: User})\n  @ApiNotFoundResponse({description: 'User not found'})\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  @ApiParam({\n    name: 'id',\n    description: 'user id',\n    type: 'integer',\n  })\n  async findOne(@Param('id') id: number): Promise {\n    return await this.userService.get(id);\n  }\n\n  @Put(':id')\n  @ApiOkResponse({description: 'Successful', type: User})\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  @ApiNotFoundResponse({description: 'User not found'})\n  @ApiForbiddenResponse({description: 'Forbidden'})\n  @ApiParam({\n    name: 'id',\n    description: 'user id',\n    type: 'integer',\n  })\n  async update(\n    @Param('id') id: number,\n    @Body() updateUserDto: UpdateUserDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const userToUpdate = await this.userService.get(id);\n    if (userToUpdate.id !== user.userId) {\n      throw new ForbiddenException('You cannot edit other users!');\n    }\n    return this.userService.update(updateUserDto, userToUpdate);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserFillableFields.html":{"url":"classes/UserFillableFields.html","title":"class - UserFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Optional\n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            telephone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Exclude} from 'class-transformer';\nimport {Column, Entity, PrimaryGeneratedColumn} from 'typeorm';\n\nimport {PasswordTransformer} from './password.transformer';\nimport {UserRole} from './user-role';\nimport {ApiProperty} from '@nestjs/swagger';\nimport {AddressModel} from '../main/models/address.model';\n\n@Entity({\n  name: 'users',\n})\nexport class User extends AddressModel {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  firstName!: string;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  lastName!: string;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  email!: string;\n\n  @ApiProperty({required: true})\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.NONE,\n  })\n  role!: string;\n\n  @ApiProperty({required: false})\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  telephone?: string;\n\n  @Column({\n    name: 'password',\n    length: 255,\n    transformer: new PasswordTransformer(),\n  })\n  @Exclude()\n  password!: string;\n}\n\nexport class UserFillableFields {\n  email!: string;\n  firstName!: string;\n  lastName!: string;\n  role?: string;\n  telephone?: string;\n  address?: string;\n  password!: string;\n}\n\nexport class UserID {\n  userId!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserID.html":{"url":"classes/UserID.html","title":"class - UserID","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserID\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Exclude} from 'class-transformer';\nimport {Column, Entity, PrimaryGeneratedColumn} from 'typeorm';\n\nimport {PasswordTransformer} from './password.transformer';\nimport {UserRole} from './user-role';\nimport {ApiProperty} from '@nestjs/swagger';\nimport {AddressModel} from '../main/models/address.model';\n\n@Entity({\n  name: 'users',\n})\nexport class User extends AddressModel {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  firstName!: string;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  lastName!: string;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  email!: string;\n\n  @ApiProperty({required: true})\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.NONE,\n  })\n  role!: string;\n\n  @ApiProperty({required: false})\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  telephone?: string;\n\n  @Column({\n    name: 'password',\n    length: 255,\n    transformer: new PasswordTransformer(),\n  })\n  @Exclude()\n  password!: string;\n}\n\nexport class UserFillableFields {\n  email!: string;\n  firstName!: string;\n  lastName!: string;\n  role?: string;\n  telephone?: string;\n  address?: string;\n  password!: string;\n}\n\nexport class UserID {\n  userId!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUserModule\n\nUserModule\n\nUsersService  -->\n\nUserModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUserModule -->\n\nUsersService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Logger, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { User } from './user.entity';\nimport { UsersService } from './user.service';\nimport { UserController } from './user.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  exports: [UsersService],\n  controllers: [UserController],\n  providers: [UsersService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nArticlesService\n\nArticlesService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nArticlesService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/articles/articles.modules.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticlesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticlesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Article } from './article.entity';\nimport { ArticlesController } from './articles.controller';\nimport { ArticlesService } from './articles.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Article])],\n  providers: [ArticlesService],\n  controllers: [ArticlesController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getByEmail\n                            \n                            \n                                    Async\n                                getByEmailAndPass\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(payload: UserFillableFields)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                UserFillableFields\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByEmailAndPass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmailAndPass(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(editRequestDto: UpdateUserDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editRequestDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable, NotAcceptableException, NotFoundException} from '@nestjs/common';\nimport {InjectRepository} from '@nestjs/typeorm';\nimport {Repository} from 'typeorm';\n\nimport {Roles} from '../common/decorators/roles.decorator';\nimport {User, UserFillableFields} from './user.entity';\nimport {UpdateUserDto} from './dto/update-user.dto';\n\n@Injectable()\n@Roles('admin') // TODO: Add 'authenticatedUser'\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n  ) {\n  }\n\n  async get(id: number) {\n    const user = await this.userRepository.findOne(id);\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return user;\n  }\n\n  async getByEmail(email: string) {\n    return await this.userRepository.findOne({email});\n    // return await this.userRepository\n    //   .createQueryBuilder('users')\n    //   .where('users.email = :email')\n    //   .setParameter('email', email)\n    //   .getOne();\n  }\n\n  async getByEmailAndPass(email: string, password: string) {\n    // const passHash = createHmac('sha256', password).digest('hex');\n    return await this.userRepository.findOne({email, password});\n    // return await this.userRepository\n    //   .createQueryBuilder('users')\n    //   .where('users.email = :email and users.password = :password')\n    //   .setParameter('email', email)\n    //   .setParameter('password', passHash)\n    //   .getOne();\n  }\n\n  async create(payload: UserFillableFields) {\n    const checkUserExistence = await this.getByEmail(payload.email);\n\n    if (checkUserExistence) {\n      throw new NotAcceptableException(\n        'Another user with provided email already exists.',\n      );\n    }\n\n    const newUser = this.userRepository.create(payload);\n    return await this.userRepository.save(newUser);\n  }\n\n  async update(editRequestDto: UpdateUserDto, user: User) {\n    user.city = editRequestDto.city;\n    user.street = editRequestDto.street;\n    user.number = editRequestDto.number;\n    user.zipCode = editRequestDto.zipCode;\n    user.firstName = editRequestDto.firstName;\n    user.lastName = editRequestDto.lastName;\n    user.role = editRequestDto.role;\n    user.telephone = editRequestDto.telephone;\n\n    return await this.userRepository.save(user);\n  }\n\n  async getAll() {\n    return await this.userRepository.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/articles/article.entity.ts\n            \n            class\n            Article\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/articles/article.entity.ts\n            \n            class\n            ArticleFillableFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/articles/articles.controller.ts\n            \n            controller\n            ArticlesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/articles/articles.service.ts\n            \n            injectable\n            ArticlesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/articles/dto/create-article.dto.ts\n            \n            class\n            CreateArticleDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/articles/interfaces/article.interface.ts\n            \n            interface\n            Article\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/response-token.dt.ts\n            \n            class\n            ResponseTokenDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/login.payload.ts\n            \n            class\n            LoginPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/register.payload.ts\n            \n            class\n            RegisterPayload\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/call/call.controller.ts\n            \n            controller\n            CallController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/call/call.service.ts\n            \n            injectable\n            CallService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/decorators/user.decorator.ts\n            \n            interface\n            IRequestUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/common/decorators/user.decorator.ts\n            \n            variable\n            ReqUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/guards/jwt-guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/middlewares/logger.middleware.ts\n            \n            variable\n            loggerMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/modules/main/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/main/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/main/models/address.model.ts\n            \n            class\n            AddressModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/request/dto/request-form.dto.ts\n            \n            class\n            CreateRequestArticleDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/request/dto/request-form.dto.ts\n            \n            class\n            RequestFormDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/request/request.controller.ts\n            \n            controller\n            RequestController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/request/request.entity.ts\n            \n            class\n            RequestEntity\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/modules/request/request.entity.ts\n            \n            class\n            RequestFillableFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/request/request.service.ts\n            \n            injectable\n            RequestService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/request/requestArticle.entity.ts\n            \n            class\n            RequestArticle\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/request/requestArticle.entity.ts\n            \n            class\n            RequestFillableFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/dto/shopping-list-form.dto.ts\n            \n            class\n            RequestArticleStatusDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/dto/shopping-list-form.dto.ts\n            \n            class\n            ShoppingListFormDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/shopping-list-request.entity.ts\n            \n            class\n            ShoppingListRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/shopping-list.controller.ts\n            \n            controller\n            ShoppingListController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/shopping-list.entity.ts\n            \n            class\n            ShoppingList\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/shopping-list.entity.ts\n            \n            class\n            ShoppingListFillableFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/shopping-list.service.ts\n            \n            injectable\n            ShoppingListService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/user/password.transformer.ts\n            \n            class\n            PasswordTransformer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            UserFillableFields\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            UserID\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_CURRENT_VERSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_DESCRIPTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_ROOT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/index.ts\n            \n            variable\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @nestjs/common : ^6.10.14\n        \n            @nestjs/core : ^6.10.14\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/passport : ^6.1.1\n        \n            @nestjs/platform-express : 7.0.0\n        \n            @nestjs/swagger : ^4.1.10\n        \n            @nestjs/testing : ^6.10.14\n        \n            @nestjs/typeorm : ^6.2.0\n        \n            @types/dotenv : ^8.2.0\n        \n            @types/express : ^4.17.3\n        \n            @types/helmet : ^0.0.45\n        \n            @types/jest : ^24.0.25\n        \n            @types/joi : ^14.3.4\n        \n            @types/node : ^13.1.6\n        \n            @types/passport-jwt : ^3.0.3\n        \n            @types/supertest : ^2.0.8\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.0\n        \n            cross-env : ^6.0.3\n        \n            crypto : ^1.0.1\n        \n            dotenv : ^8.2.0\n        \n            express : ^4.17.1\n        \n            hbs : ^4.1.0\n        \n            helmet : ^3.21.2\n        \n            husky : ^4.0.7\n        \n            jest : ^25.1.0\n        \n            joi : ^14.3.1\n        \n            lint-staged : ^9.5.0\n        \n            mongodb : ^3.4.1\n        \n            nodemon : ^2.0.2\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^7.17.1\n        \n            prettier : ^1.19.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.4\n        \n            supertest : ^4.0.2\n        \n            swagger-ui-express : ^4.1.3\n        \n            ts-jest : ^24.3.0\n        \n            ts-loader : ^6.2.1\n        \n            ts-node : ^8.6.1\n        \n            tsconfig-paths : ^3.9.0\n        \n            tslint : 5.20.1\n        \n            typeorm : ^0.2.24\n        \n            typescript : ^3.7.4\n        \n            webpack : ^4.41.5\n        \n            webpack-cli : ^3.3.10\n        \n            webpack-node-externals : ^1.7.2\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            acorn : ^7.1.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RequestStatus   (src/.../request-status.ts)\n                        \n                        \n                            ShoppingListStatus   (src/.../shopping-list-status.ts)\n                        \n                        \n                            UserRole   (src/.../user-role.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/request/request-status.ts\n    \n        \n            \n                \n                    \n                        \n                        RequestStatus\n                    \n                \n                        \n                            \n                                 NEW\n                            \n                        \n                        \n                            \n                                Value : new\n                            \n                        \n                        \n                            \n                                 ONGOING\n                            \n                        \n                        \n                            \n                                Value : ongoing\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    src/modules/shoppingList/shopping-list-status.ts\n    \n        \n            \n                \n                    \n                        \n                        ShoppingListStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : active\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : canceled\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    src/modules/user/user-role.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 HELPER\n                            \n                        \n                        \n                            \n                                Value : helper\n                            \n                        \n                        \n                            \n                                 SEEKER\n                            \n                        \n                        \n                            \n                                Value : seeker\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDependencies\n\nNodeJS\nDocker\nPostgreSQL Client\nsudo apt install postgresql postgresql-contrib\n\n\nYarn\n\nInstallation\nInstall dependencies\nyarnEnvironment Configuration\nCreate a .env file in the root folder\nConfigure PostgreSQL:\nsudo -i -u postgres # Switch over to the postgres account on your server by typing:\npsql -U postgres # type the default password, usually 'postgres'\ncreate user username with encrypted password 'secretpassword';\ncreate database dbname with owner username;\n\\l # dbname should appear with username as ownerthen ctrl + c to exit the shell, then try to connect withpsql -U username dbname (it will ask for your password)\nNext, in .env, set these vars:\n\nDATABASE_TYPE=postgresDATABASE_HOST=dbDATABASE_PORT=5432DATABASE_USERNAME=usernameDATABASE_PASSWORD=secretpasswordDATABASE_NAME=dbname\nJWT_SECRET=jwt_awesome_key\n\nCreate a copy of .env called .env.development and change these vars:\n\nDATABASE_HOST=localhost\nDATABASE_PORT=54321\n\nDocker\nTemporary Note\nTo spin up a docker container for local API development, following commands can be used.\nCreate the postgres docker volume:\ndocker volume create --name=pgdata\nRun the postgis image:\ndocker run -d --name postgres-nearbuy -p 5432:5432 -e POSTGRES_PASSWORD=secretpassword -e POSTGRES_DB=dbname -e POSTGRES_USER=username -v pgdata:/var/lib/postgresql/data postgis/postgis:12-2.5\n\nPostgres admin:\ndocker run --network nearbuy-backend_default -p 3010:80 -e 'PGADMIN_DEFAULT_EMAIL=user@domain.com' -e 'PGADMIN_DEFAULT_PASSWORD=SuperSecret' -d dpage/pgadmin4\nThat adds a pgadmin container to the docker network created by docker-compose. You can connect in there to the host \"db\" (if using defaults).\n\nTo mount the project with Docker, you can use yarn deploy:local (which executes docker-compose up)\nUsage\n# development\nyarn start\n\n# watch mode\nyarn start:dev\n\n# production mode\nyarn start:prodTest\n# unit tests\nyarn test\n\n# e2e tests\nyarn test:e2e\n\n# test coverage\nyarn test:covSwagger\nRESTful APIs you can describe with already integrated Swagger.\nTo see all available endpoints visit http://localhost:3000/api/docs\nTo get the endpoints in JSON format, visit http://localhost:3000/api/docs-json\nTypeORM\nTypeORM gives you possibility to use next db types:\nmysql, postgres, mariadb, sqlite, etc. Please look at docs for more details.\nWe have provided working example with sqlite, but you have possibility to change\nthis through ormconfig.json. By default you will get sqlite-example.sql file\ncreated in the root directory, but it's ignored by git.\nSeeding\nSee TypeORM-Fixtures\nAuthentication - JWT\nAlready preconfigured JWT authentication.\nIt's suggested to change current password hashing to something more secure.\nYou can start use already working implementation of Login and Registration\nendpoints, just take a look at http://localhost:3000/api/docs.\nSources\n\nTypeORM MongoDB Documentation\n\nGreat MongoDB tutorial\n\nAnother NestJS boilerplate\n\nTutorial to build NestJS API + MongoDB with Mongoose instead of TypeORM\n\nBasic Authentication with JSON Web Tokens and Passport\n\n... or this one better integrated with NestJS\n\nBoilerplate with expiration-based JWT tokens\n\nVariant using Basic auth with cookie in session\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2019 Toundra\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CallModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RequestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShoppingListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CallModule\n\n\n\ncluster_CallModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_RequestModule\n\n\n\ncluster_RequestModule_exports\n\n\n\ncluster_ShoppingListModule\n\n\n\ncluster_ShoppingListModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UsersModule\n\n\n\n\nAddressModel\n\nAddressModel\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressModel->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCallModule\n\nCallModule\n\nAppModule -->\n\nCallModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nRequestModule\n\nRequestModule\n\n\n\nShoppingListModule\n\nShoppingListModule\n\nShoppingListModule -->\n\nRequestModule->ShoppingListModule\n\n\n\nAppModule -->\n\nRequestModule->AppModule\n\n\n\n\n\nRequestService \n\nRequestService \n\nRequestService  -->\n\nRequestModule->RequestService \n\n\n\nAppModule -->\n\nShoppingListModule->AppModule\n\n\n\n\n\nShoppingListService \n\nShoppingListService \n\nShoppingListService  -->\n\nShoppingListModule->ShoppingListService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nRequestModule -->\n\nUserModule->RequestModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUserModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nArticlesService\n\nArticlesService\n\nAppModule -->\n\nArticlesService->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nArticlesService->UsersModule\n\n\n\n\n\nRequestService\n\nRequestService\n\nRequestModule -->\n\nRequestService->RequestModule\n\n\n\nAppModule -->\n\nRequestService->AppModule\n\n\n\n\n\nShoppingListService\n\nShoppingListService\n\nShoppingListModule -->\n\nShoppingListService->ShoppingListModule\n\n\n\nAppModule -->\n\nShoppingListService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUserModule -->\n\nUsersService->UserModule\n\n\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nCallService\n\nCallService\n\nCallModule -->\n\nCallService->CallModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    24 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            loggerMiddleware   (src/.../logger.middleware.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            ReqUser   (src/.../user.decorator.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            setupSwagger   (src/.../index.ts)\n                        \n                        \n                            SWAGGER_API_CURRENT_VERSION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_DESCRIPTION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_NAME   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_ROOT   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/common/middlewares/logger.middleware.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loggerMiddleware\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RequestHandler\n\n                        \n                    \n                    \n                        \n                            Default value : (request: any, response: any, next: NextFunction) => {\n  const {headers, method, query, params} = request;\n  const date = new Date().toJSON();\n  const time = date.replace('T', ' ').slice(0, -5);\n  const route = parse(request.url).path;\n  console.log(`${time} ~ ${method} ${route || '/'}`); // tslint:disable-line no-console\n  next();\n}\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/modules/common/decorators/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ReqUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, req: IRequestUser) => {\n  return req.user;\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/common/decorators/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: string[]) => SetMetadata('roles', roles)\n                        \n                    \n\n\n            \n        \n\n    src/swagger/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            setupSwagger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (app: INestApplication) => {\n  const options = new DocumentBuilder()\n    .setTitle(SWAGGER_API_NAME)\n    .setDescription(SWAGGER_API_DESCRIPTION)\n    .setVersion(SWAGGER_API_CURRENT_VERSION)\n    .addBearerAuth()\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup(SWAGGER_API_ROOT, app, document);\n}\n                        \n                    \n\n\n            \n        \n\n    src/swagger/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_CURRENT_VERSION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_DESCRIPTION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Simple API Description'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Simple API'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_ROOT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api/docs'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
