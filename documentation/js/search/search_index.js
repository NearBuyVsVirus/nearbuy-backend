var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AddressModel.html",[0,0.186,1,1.779]],["body/classes/AddressModel.html",[0,0.207,1,2.615,2,0.993,3,0.176,4,0.176,5,0.137,6,3.713,7,0.373,8,1.155,9,1.872,10,4.163,11,1.349,12,4.163,13,3.643,14,0.624,15,0.016,16,1.221,17,1.626,18,4.427,19,4.563,20,3.816,21,1.456,22,0.827,23,4.292,24,4.292,25,4.292,26,4.292,27,0.259,28,2.939,29,1.272,30,1.171,31,4.974,32,0.839,33,0.176,34,3.453,35,0.009,36,0.011,37,0.009]],["title/controllers/AppController.html",[38,1.352,39,2.735]],["body/controllers/AppController.html",[0,0.254,3,0.216,4,0.216,5,0.168,7,0.457,15,0.016,16,1.057,17,1.269,22,0.645,27,0.319,32,1.029,33,0.216,35,0.011,36,0.013,37,0.011,38,2.262,39,4.576,40,1.846,41,4.552,42,2.262,43,5.64,44,3.223,45,3.706,46,5.262,47,1.846,48,1.073,49,4.271,50,4.552,51,3.024,52,3.223,53,1.436,54,4.552,55,1.626,56,5.262]],["title/modules/AppModule.html",[57,1.052,58,2.735]],["body/modules/AppModule.html",[0,0.135,3,0.115,4,0.115,5,0.089,11,0.595,15,0.016,16,0.458,27,0.358,33,0.115,35,0.006,36,0.008,37,0.006,39,3.561,40,1.469,48,0.57,49,3.835,50,2.419,52,1.713,53,0.763,57,1.369,58,5.564,59,1.173,60,1.173,61,1.358,62,1.358,63,1.23,64,2.438,65,1.358,66,2.419,67,2.419,68,2.419,69,3.835,70,4.112,71,4.112,72,3.391,73,4.112,74,3.835,75,4.112,76,3.391,77,3.599,78,3.599,79,3.391,80,3.599,81,3.042,82,2.034,83,1.358,84,1.291,85,2.796,86,3.295,87,3.295,88,3.295,89,3.295,90,3.295,91,2.144,92,1.841,93,1.607,94,1.607,95,1.173,96,1.984,97,2.796,98,2.796,99,2.796,100,1.191,101,1.432,102,2.034,103,2.419,104,1.756,105,2.419,106,2.796,107,2.796,108,2.419,109,2.796,110,2.17,111,2.796,112,2.796,113,1.984,114,2.419,115,4.819,116,2.419,117,2.034,118,1.713,119,2.796,120,2.17,121,2.854,122,2.706,123,2.419,124,2.419,125,2.267,126,1.836,127,2.796,128,2.419,129,2.718,130,2.796,131,2.971,132,2.17,133,2.796,134,2.796,135,2.796,136,2.796,137,1.984,138,2.419,139,2.796,140,2.17,141,2.419,142,1.514,143,1.984,144,2.796,145,2.796,146,2.796,147,2.796,148,2.419,149,2.796,150,2.796,151,2.796,152,2.796,153,2.796,154,2.796,155,2.796,156,2.419,157,2.796]],["title/injectables/AppService.html",[49,2.36,158,1.142]],["body/injectables/AppService.html",[0,0.252,3,0.215,4,0.215,5,0.167,7,0.455,9,1.314,14,0.484,15,0.016,16,1.053,22,0.788,27,0.294,33,0.215,35,0.011,36,0.013,37,0.011,42,2.253,43,5.628,47,1.834,48,1.067,49,3.934,52,3.203,55,1.616,92,3.189,93,3.005,143,4.559,158,1.904,159,2.414,160,4.523,161,2.299,162,5.229,163,5.229,164,1.916,165,1.067,166,5.229,167,5.229]],["title/classes/Article.html",[0,0.186,104,1.616]],["body/classes/Article.html",[0,0.287,2,1.071,3,0.19,4,0.19,5,0.148,7,0.402,8,1.214,11,1.266,14,0.642,15,0.016,16,1.077,17,1.435,22,0.729,27,0.272,28,2.495,29,1.372,30,1.794,32,0.905,33,0.244,34,2.371,35,0.009,36,0.012,37,0.009,104,3.081,165,1.524,168,3.592,169,1.804,170,5.146,171,5.146,172,5.146,173,3.592,174,4.629,175,4.617,176,4.629,177,3.222,178,4.629,179,2.495,180,2.616,181,2.371,182,2.087,183,1.854,184,3.285,185,3.285]],["title/classes/ArticleFillableFields.html",[0,0.186,185,2.735]],["body/classes/ArticleFillableFields.html",[0,0.3,2,1.148,3,0.204,4,0.204,5,0.158,7,0.431,8,1.268,11,1.056,14,0.575,15,0.016,16,1.113,22,0.608,27,0.285,28,2.608,29,1.471,30,1.853,32,0.97,33,0.255,34,2.542,35,0.01,36,0.012,37,0.01,104,2.848,165,1.526,168,3.851,169,1.563,171,4.292,172,4.292,175,3.851,177,2.688,179,2.608,180,2.734,181,2.542,182,2.181,183,1.987,184,3.521,185,4.413,186,4.962]],["title/controllers/ArticlesController.html",[38,1.352,86,2.531]],["body/controllers/ArticlesController.html",[0,0.207,3,0.176,4,0.176,5,0.137,7,0.373,9,1.079,14,0.649,15,0.016,17,1.366,22,0.694,27,0.321,32,0.839,33,0.176,35,0.009,36,0.011,37,0.009,38,1.506,40,1.506,42,1.987,44,2.629,47,1.987,48,0.876,51,3.255,52,2.629,53,1.171,55,1.75,77,3.643,86,3.719,104,2.659,164,1.572,165,0.876,181,3.247,182,1.506,187,3.713,188,2.467,189,5.831,190,2.539,191,5.664,192,5.664,193,4.292,194,4.129,195,2.581,196,4.292,197,3.453,198,4.292,199,4.727,200,3.713,201,4.396,202,4.292,203,4.292,204,2.629,205,3.719,206,2.629,207,3.046,208,2.629,209,3.713,210,3.713,211,3.713,212,3.331,213,4.292,214,4.292,215,3.713,216,4.396,217,4.292,218,4.292,219,4.292]],["title/injectables/ArticlesService.html",[77,2.215,158,1.142]],["body/injectables/ArticlesService.html",[0,0.195,3,0.166,4,0.166,5,0.129,7,0.351,9,1.546,14,0.569,15,0.016,16,1.078,22,0.807,27,0.314,29,1.197,33,0.166,35,0.008,36,0.011,37,0.008,42,1.908,47,2.158,48,0.824,53,1.103,55,1.9,77,3.126,95,1.694,104,2.579,158,1.612,159,1.866,161,2.392,164,2.253,165,1.255,169,1.015,189,5.692,190,2.833,197,3.703,199,4.51,209,3.495,210,3.495,212,3.136,220,3.495,221,3.332,222,5.44,223,4.04,224,4.321,225,4.04,226,5.44,227,5.44,228,4.04,229,4.04,230,5.44,231,4.04,232,2.475,233,4.04,234,1.866,235,1.547,236,1.302,237,4.04,238,4.04,239,4.04,240,4.04,241,3.136,242,4.04,243,1.866,244,4.04]],["title/classes/AudioFile.html",[0,0.186,125,2.087]],["body/classes/AudioFile.html",[0,0.262,2,0.935,3,0.166,4,0.166,5,0.173,7,0.351,8,1.11,11,1.158,14,0.655,15,0.016,16,0.892,17,1.706,20,3.151,21,1.286,22,0.867,27,0.249,28,2.88,29,1.197,33,0.166,34,2.07,35,0.008,36,0.011,37,0.008,121,2.07,122,3.512,125,2.947,131,4.365,142,3.564,165,0.824,169,1.546,177,2.947,179,2.281,180,2.705,201,4.774,245,4.428,246,3.495,247,6.151,248,4.365,249,5.32,250,3.371,251,4.039,252,4.04,253,4.04,254,5.44,255,2.893,256,4.04,257,4.04,258,4.04,259,4.04,260,4.04,261,4.04,262,2.475,263,2.322,264,1.828]],["title/controllers/AudioStorageController.html",[38,1.352,90,2.531]],["body/controllers/AudioStorageController.html",[0,0.278,3,0.237,4,0.237,5,0.184,15,0.015,27,0.265,33,0.237,35,0.012,36,0.014,37,0.012,38,2.027,40,2.027,48,1.178,90,4.479,121,2.959,122,2.806,188,3.32,245,3.539,265,4.997,266,5.9,267,5.777]],["title/modules/AudioStorageModule.html",[57,1.052,69,2.36]],["body/modules/AudioStorageModule.html",[0,0.219,3,0.186,4,0.186,5,0.145,15,0.016,27,0.335,33,0.186,35,0.009,36,0.012,37,0.009,40,2.061,48,0.926,57,1.778,59,1.904,60,1.904,61,2.205,62,2.205,63,1.996,64,3.165,65,3.165,69,4.667,72,3.959,78,4.474,82,2.854,83,2.205,84,2.096,90,4.278,91,3.01,94,2.609,95,1.904,96,3.222,121,3.337,122,2.205,123,3.927,125,2.459,126,2.981,132,3.523,232,2.781,245,2.781,268,3.927,269,4.54,270,3.927,271,4.54,272,4.54,273,4.54]],["title/injectables/AudioStorageService.html",[78,2.215,158,1.142]],["body/injectables/AudioStorageService.html",[0,0.118,3,0.1,4,0.1,5,0.179,7,0.212,8,0.771,9,1.306,11,1.265,14,0.481,15,0.016,16,0.401,21,1.099,22,0.729,27,0.293,29,0.725,33,0.1,35,0.005,36,0.008,37,0.005,42,1.326,45,1.405,47,1.824,48,0.499,53,1.031,55,2.03,78,2.172,92,2.724,93,1.405,95,1.025,121,1.252,122,3.01,125,3.558,126,1.605,142,2.503,143,1.735,158,1.12,159,1.129,161,1.662,164,1.905,165,1.06,169,1.413,190,2.777,195,1.447,197,3.279,221,3.184,224,3.414,232,1.497,234,1.745,235,1.769,236,1.218,243,2.4,245,3.795,248,1.735,250,1.252,255,2.032,264,0.822,266,3.269,274,1.897,275,3.586,276,3.779,277,3.779,278,4.62,279,2.445,280,2.445,281,3.779,282,2.445,283,3.779,284,2.445,285,3.779,286,2.445,287,2.445,288,5.141,289,2.445,290,3.69,291,1.405,292,4.862,293,4.62,294,4.217,295,3.779,296,3.779,297,3.779,298,3.269,299,3.779,300,3.779,301,5.199,302,5.943,303,3.779,304,3.779,305,3.779,306,6.401,307,3.779,308,3.779,309,3.779,310,3.779,311,3.779,312,3.779,313,3.269,314,4.809,315,3.779,316,3.269,317,2.445,318,2.115,319,2.115,320,2.445,321,2.445,322,2.445,323,2.445,324,2.445,325,2.445,326,1.897,327,2.445,328,3.779,329,3.779,330,2.115,331,2.445,332,2.445,333,2.445,334,3.779,335,2.445,336,2.115,337,2.445,338,2.445,339,2.445,340,2.445,341,2.445,342,2.445,343,2.445]],["title/controllers/AuthController.html",[38,1.352,344,2.735]],["body/controllers/AuthController.html",[0,0.178,3,0.152,4,0.152,5,0.118,7,0.321,9,1.287,14,0.637,15,0.016,17,1.235,21,0.723,22,0.628,27,0.323,32,0.723,33,0.152,35,0.007,36,0.01,37,0.007,38,1.297,40,1.297,42,1.796,45,3.644,47,1.796,48,0.754,51,2.942,53,1.397,55,1.582,81,2.487,100,1.456,113,2.624,129,2.002,161,1.626,164,1.876,165,1.044,182,1.796,188,2.125,190,2.759,194,3.884,195,1.96,197,3.248,204,2.264,205,2.428,206,2.264,207,3.634,208,2.264,216,3.974,234,2.364,235,1.96,236,1.191,243,2.928,344,3.634,345,3.198,346,3.198,347,5.485,348,5.12,349,3.697,350,3.884,351,3.697,352,5.12,353,3.697,354,3.634,355,3.697,356,5.12,357,3.697,358,4.5,359,3.697,360,4.429,361,3.697,362,3.974,363,3.974,364,3.697,365,3.974,366,2.942,367,3.697,368,2.624,369,3.376,370,2.869,371,2.869,372,3.697,373,4.169,374,3.697,375,3.697,376,3.697,377,3.697,378,3.697,379,2.624,380,3.697,381,3.697,382,3.697,383,3.697,384,5.12,385,3.697,386,3.697,387,3.697,388,3.697,389,3.697]],["title/modules/AuthModule.html",[57,1.052,70,2.531]],["body/modules/AuthModule.html",[0,0.204,3,0.174,4,0.174,5,0.135,15,0.016,27,0.344,33,0.174,35,0.009,36,0.011,37,0.009,40,1.97,48,0.864,55,1.309,57,1.719,59,1.777,60,1.777,61,2.058,62,2.058,63,1.863,64,3.06,65,2.728,70,5.06,72,3.963,76,3.884,82,2.728,83,2.058,84,1.956,91,3.227,92,2.949,93,2.435,96,3.007,110,3.288,190,1.697,344,4.47,369,4.122,370,3.288,390,3.665,391,4.237,392,3.665,393,4.709,394,4.237,395,4.237,396,3.288,397,4.237,398,3.007,399,4.237,400,4.237,401,5.616,402,3.688,403,4.237,404,3.665,405,4.237,406,3.665,407,4.237,408,3.288,409,4.237,410,3.665]],["title/injectables/AuthService.html",[158,1.142,369,2.215]],["body/injectables/AuthService.html",[0,0.193,3,0.164,4,0.164,5,0.128,7,0.348,9,1.538,14,0.566,15,0.016,22,0.75,27,0.323,33,0.164,35,0.008,36,0.011,37,0.008,42,1.896,47,1.896,48,0.816,53,1.67,55,1.67,81,3.184,92,3.171,93,2.299,100,2.114,101,2.049,113,2.84,158,1.602,159,1.847,161,2.376,164,2.242,165,1.248,169,1.005,190,2.825,197,2.768,234,2.826,235,2.069,236,1.289,243,1.847,350,4.015,369,3.106,371,3.105,379,4.344,396,3.105,408,3.105,411,3.461,412,5.405,413,5.405,414,4.001,415,7.055,416,4.001,417,5.405,418,4.001,419,4.001,420,4.001,421,3.105,422,4.001,423,3.461,424,4.001,425,4.001,426,3.461,427,4.001,428,4.001,429,4.001,430,3.135,431,4.001,432,2.049,433,4.001,434,2.299]],["title/controllers/CallController.html",[38,1.352,435,2.735]],["body/controllers/CallController.html",[0,0.105,3,0.089,4,0.089,5,0.136,7,0.462,9,1.076,11,1.347,14,0.586,15,0.016,16,0.564,17,1.364,22,0.693,27,0.271,32,0.424,33,0.089,35,0.004,36,0.007,37,0.004,38,0.762,40,0.762,42,1.208,44,1.33,45,2.46,47,1.984,48,0.443,51,2.46,52,1.33,53,0.593,55,1.831,78,2.46,121,3.149,122,1.673,125,2.319,126,1.426,132,1.685,164,1.568,165,1.153,169,1.871,182,2.696,183,2.128,188,1.248,190,2.804,194,3.973,195,2.034,197,3.323,204,1.33,205,1.426,206,2.11,208,1.33,235,1.319,243,2.25,248,3.458,275,4.124,288,5.826,290,4.206,314,1.685,326,1.685,330,1.878,336,1.878,354,4.206,368,2.445,435,2.445,436,1.878,437,3.2,438,4.281,439,4.873,440,4.873,441,2.172,442,2.172,443,2.172,444,1.878,445,2.172,446,4.281,447,2.172,448,2.172,449,2.172,450,3.006,451,4.873,452,4.873,453,2.172,454,2.172,455,2.172,456,3.445,457,2.172,458,2.172,459,2.172,460,2.172,461,2.172,462,2.172,463,2.172,464,2.172,465,2.172,466,1.541,467,2.172,468,1.541,469,6.835,470,4.215,471,2.172,472,1.878,473,1.685,474,1.541,475,2.172,476,3.445,477,1.541,478,2.172,479,2.172,480,2.172,481,2.172,482,2.172,483,3.323,484,3.445,485,2.172,486,2.172,487,2.172,488,3.648,489,4.873,490,4.873,491,4.873,492,4.873,493,2.172,494,2.172,495,2.172,496,4.281,497,2.172,498,2.172,499,2.172,500,1.878,501,2.172,502,2.172,503,2.172,504,2.172,505,2.172,506,2.172,507,1.541]],["title/modules/CallModule.html",[57,1.052,71,2.531]],["body/modules/CallModule.html",[0,0.236,3,0.201,4,0.201,5,0.156,15,0.016,27,0.324,33,0.201,35,0.01,36,0.012,37,0.01,40,2.161,48,0.997,57,1.841,59,2.05,60,2.05,61,2.375,62,2.375,63,2.15,64,3.276,65,2.375,69,4.564,71,5.025,82,2.992,83,2.375,84,2.257,91,3.155,121,2.504,122,2.375,124,4.229,435,4.787,508,4.229,509,4.889,510,4.229,511,4.893,512,4.889,513,4.889,514,4.889]],["title/injectables/CallService.html",[158,1.142,511,2.531]],["body/injectables/CallService.html",[0,0.284,3,0.242,4,0.242,5,0.188,15,0.015,27,0.27,33,0.242,35,0.012,36,0.014,37,0.012,48,1.204,158,2.047,159,2.725,511,4.535,515,5.104]],["title/modules/ConfigModule.html",[57,1.052,72,2.087]],["body/modules/ConfigModule.html",[0,0.25,3,0.213,4,0.213,5,0.166,15,0.016,27,0.293,33,0.213,35,0.01,36,0.013,37,0.01,48,1.06,57,1.892,59,2.179,60,2.179,61,2.524,62,2.524,63,2.285,64,3.108,65,3.368,72,4.024,82,3.108,83,2.524,84,2.399,92,3.404,236,1.674,516,4.495,517,4.495,518,5.196,519,5.196,520,5.196,521,5.196,522,5.196]],["title/classes/ConfigService.html",[0,0.186,92,1.695]],["body/classes/ConfigService.html",[0,0.12,2,0.576,3,0.102,4,0.102,5,0.079,7,0.216,8,0.782,9,1.174,14,0.486,15,0.016,16,0.981,21,0.486,22,0.909,27,0.214,33,0.102,35,0.005,36,0.008,37,0.005,42,1.344,47,1.841,53,1.275,55,2.26,92,1.685,140,1.932,141,4.042,161,1.094,164,1.712,165,0.953,234,2.764,235,2.009,236,0.802,264,1.288,291,1.43,298,6.228,314,3.626,432,1.275,500,2.153,507,2.72,523,2.153,524,4.673,525,3.832,526,3.832,527,4.673,528,4.673,529,4.673,530,4.673,531,4.673,532,4.673,533,4.673,534,4.673,535,4.673,536,4.673,537,4.673,538,4.673,539,4.673,540,4.673,541,3.832,542,3.832,543,2.489,544,5.986,545,3.832,546,2.489,547,3.832,548,3.832,549,2.489,550,3.832,551,2.489,552,3.832,553,3.832,554,2.974,555,3.832,556,3.832,557,3.832,558,2.974,559,3.832,560,3.832,561,4.673,562,2.489,563,2.489,564,3.832,565,3.832,566,3.832,567,3.315,568,2.489,569,2.489,570,2.489,571,2.489,572,2.489,573,2.489,574,2.489,575,2.489,576,2.489,577,2.489,578,2.489,579,2.489,580,2.489,581,2.489,582,2.489,583,2.489,584,2.489,585,2.489,586,2.489,587,2.489,588,2.489,589,2.489,590,2.489,591,2.489,592,2.489,593,2.489,594,2.489,595,2.489,596,2.489,597,2.153,598,2.489,599,2.489,600,3.315,601,2.489,602,2.489,603,2.489,604,4.673,605,2.153,606,3.315,607,3.315,608,2.489,609,2.489,610,2.489,611,2.489,612,2.489,613,2.489,614,2.489,615,2.489,616,2.489,617,2.489,618,3.832,619,2.489,620,3.832,621,2.489,622,2.489,623,2.489,624,3.832,625,2.489,626,2.489,627,2.489,628,2.489,629,2.489,630,2.489,631,2.489,632,2.153,633,1.932,634,2.489,635,2.153,636,2.489,637,2.489,638,2.153,639,2.489,640,2.489,641,2.153,642,2.489,643,1.467,644,2.489,645,2.489,646,2.489,647,2.489,648,1.766,649,2.153,650,3.832,651,2.489,652,2.489,653,3.832,654,2.489,655,3.832,656,2.489,657,2.489,658,3.832,659,2.489,660,2.489]],["title/classes/CreateArticleDto.html",[0,0.186,199,2.531]],["body/classes/CreateArticleDto.html",[0,0.306,2,1.187,3,0.211,4,0.211,5,0.164,7,0.446,8,1.295,14,0.475,15,0.016,16,1.04,17,1.237,21,1.241,22,0.629,27,0.291,30,1.733,32,1.003,33,0.211,35,0.01,36,0.013,37,0.01,53,1.882,104,2.663,165,1.51,175,4.928,182,2.227,184,3.642,199,4.169,643,1.965,661,5.492,662,4.439,663,2.152,664,5.132,665,5.132,666,4.928,667,2.949]],["title/classes/CreateRequestArticleDto.html",[0,0.186,668,2.735]],["body/classes/CreateRequestArticleDto.html",[0,0.271,1,2.602,2,0.985,3,0.175,4,0.175,5,0.136,7,0.37,8,1.149,11,1.528,14,0.678,15,0.016,16,1.035,17,1.359,21,1.366,22,0.691,27,0.258,30,1.999,32,0.832,33,0.231,35,0.009,36,0.011,37,0.009,53,2.074,104,2.819,169,1.416,181,2.886,182,2.452,183,2.692,643,2.418,663,2.363,668,4.77,669,4.901,670,2.797,671,4.901,672,4.147,673,4.874,674,4.259,675,4.874,676,2.529,677,3.684,678,2.307,679,2.609,680,1.966,681,3.022,682,3.022,683,3.022]],["title/modules/DatabaseModule.html",[57,1.052,73,2.531]],["body/modules/DatabaseModule.html",[0,0.192,3,0.164,4,0.164,5,0.172,14,0.369,15,0.016,21,0.78,27,0.347,33,0.164,35,0.008,36,0.011,37,0.008,48,0.814,57,1.472,59,1.674,72,2.923,73,3.543,91,2.764,92,2.688,93,2.294,94,2.294,95,1.674,96,2.833,100,1.738,101,2.045,102,2.969,103,3.453,104,2.564,105,3.453,115,4.667,117,2.969,118,2.445,121,2.045,122,1.939,125,3.311,126,2.621,131,2.833,140,3.098,143,2.833,148,3.453,255,1.755,404,3.453,410,3.453,430,2.045,676,1.599,684,3.991,685,5.396,686,3.513,687,3.991,688,3.513,689,2.162,690,3.991,691,3.991,692,3.453,693,3.991,694,3.991,695,3.453,696,3.991,697,3.453,698,3.991,699,3.991,700,3.991,701,5.396,702,3.991,703,3.453,704,3.991,705,3.991,706,3.098,707,3.991,708,3.991,709,3.991,710,3.991,711,3.991,712,5.396,713,3.991,714,3.991,715,3.991]],["title/interfaces/IRequestUser.html",[716,2.531,717,2.735]],["body/interfaces/IRequestUser.html",[3,0.215,4,0.215,5,0.167,7,0.456,8,1.313,9,1.617,14,0.485,15,0.016,27,0.295,33,0.264,35,0.011,36,0.013,37,0.011,48,1.07,55,1.621,100,2.206,101,2.687,195,2.464,235,2.008,290,3.723,680,2.972,716,3.444,717,4.941,718,4.071,719,4.071,720,5.246,721,3.213,722,4.537,723,4.537]],["title/injectables/JwtAuthGuard.html",[158,1.142,724,2.36]],["body/injectables/JwtAuthGuard.html",[0,0.233,3,0.251,4,0.198,5,0.154,15,0.016,27,0.28,33,0.198,35,0.01,36,0.012,37,0.01,48,0.986,55,1.889,100,1.908,158,1.812,159,2.231,236,1.557,398,3.429,421,4.745,432,2.475,437,3.173,648,3.429,680,2.231,706,3.75,724,3.745,725,4.179,726,4.179,727,6.114,728,4.832,729,4.832,730,4.832,731,4.832,732,4.179,733,4.832,734,4.832,735,3.75,736,4.832,737,4.832,738,4.179,739,4.832,740,4.832,741,4.832,742,4.832,743,6.114]],["title/interfaces/JwtPayload.html",[716,2.531,744,2.735]],["body/interfaces/JwtPayload.html",[3,0.22,4,0.22,5,0.17,7,0.465,8,1.328,9,1.836,11,1.621,14,0.65,15,0.015,16,1.151,33,0.22,35,0.011,36,0.013,37,0.011,716,3.511,718,4.15,744,4.621,745,4.626,746,6.321,747,6.321,748,7.308]],["title/injectables/JwtStrategy.html",[158,1.142,393,2.531]],["body/injectables/JwtStrategy.html",[0,0.208,3,0.178,4,0.178,5,0.138,7,0.376,9,1.431,14,0.527,15,0.016,21,1.113,22,0.698,27,0.33,33,0.178,35,0.009,36,0.011,37,0.009,42,1.997,47,1.517,48,0.882,53,1.554,92,3.234,93,2.486,158,1.687,159,1.997,161,2.503,164,2.086,165,1.161,190,2.549,234,2.629,235,1.656,350,2.65,365,3.357,369,4.146,370,3.357,371,3.357,393,3.739,398,3.07,402,2.84,406,3.742,421,3.357,680,1.997,744,3.07,746,4.925,747,4.925,749,3.742,750,6.364,751,4.326,752,4.326,753,4.326,754,4.326,755,4.326,756,4.326,757,4.326,758,3.357,759,4.326,760,4.326,761,4.326,762,4.326,763,4.326,764,4.326,765,4.326,766,4.326]],["title/classes/LoginPayload.html",[0,0.186,350,2.36]],["body/classes/LoginPayload.html",[0,0.307,2,1.195,3,0.212,4,0.212,5,0.165,7,0.449,8,1.3,14,0.59,15,0.016,16,1.183,17,1.537,21,1.246,22,0.781,27,0.292,30,1.409,32,1.009,33,0.212,35,0.01,36,0.013,37,0.01,350,3.904,430,3.542,434,3.973,663,3.028,667,2.967,767,4.467,768,5.164,769,5.164,770,4.467,771,5.164,772,5.513,773,4.947,774,4.467,775,4.467]],["title/classes/PasswordTransformer.html",[0,0.186,776,2.36]],["body/classes/PasswordTransformer.html",[0,0.237,2,1.138,3,0.202,4,0.202,5,0.157,7,0.427,9,1.554,14,0.572,15,0.016,16,1.241,22,0.758,27,0.31,29,1.458,33,0.202,35,0.01,36,0.012,37,0.01,42,2.169,47,2.169,55,1.91,76,2.664,138,5.348,164,2.265,165,1.261,291,3.887,776,3.787,777,4.254,778,6.763,779,6.183,780,4.918,781,6.183,782,4.918,783,5.348,784,4.918,785,4.918,786,4.918]],["title/classes/RegisterPayload.html",[0,0.186,358,2.735]],["body/classes/RegisterPayload.html",[0,0.273,2,0.993,3,0.176,4,0.176,5,0.137,7,0.373,8,1.155,9,1.423,14,0.649,15,0.016,16,1.247,17,1.69,21,1.37,22,0.859,27,0.29,30,1.171,32,0.839,33,0.176,35,0.009,36,0.011,37,0.009,255,2.49,264,1.904,358,4.02,430,3.247,434,3.643,450,1.887,663,3.191,667,2.467,735,4.396,770,3.713,772,4.899,773,5.232,774,3.713,775,3.713,787,3.713,788,4.163,789,4.163,790,4.427,791,4.292,792,4.292,793,4.899,794,4.292,795,4.292,796,4.292,797,2.615,798,4.163,799,4.292,800,4.292,801,4.292,802,3.046]],["title/classes/RequestArticle.html",[0,0.186,686,2.215]],["body/classes/RequestArticle.html",[0,0.203,2,0.975,3,0.173,4,0.173,5,0.134,7,0.366,8,1.142,11,1.524,14,0.663,15,0.016,17,1.68,21,1.228,22,0.854,27,0.288,28,2.807,29,1.249,30,1.827,32,0.824,33,0.173,35,0.008,36,0.011,37,0.008,102,3.252,142,3.031,165,0.86,169,1.579,179,2.347,180,2.763,195,2.563,255,2.461,264,1.417,450,1.854,643,2.406,663,2.635,671,4.876,672,4.126,686,3.611,689,2.283,803,3.646,804,4.876,805,5.597,806,4.215,807,4.215,808,4.215,809,4.215,810,4.215,811,3.646,812,4.215,813,4.841,814,3.646]],["title/classes/RequestArticleStatusDto.html",[0,0.186,815,2.36]],["body/classes/RequestArticleStatusDto.html",[0,0.295,2,1.121,3,0.199,4,0.199,5,0.154,7,0.421,8,1.25,11,1.031,14,0.622,15,0.016,16,0.794,17,1.168,21,1.313,22,0.594,27,0.28,30,1.926,32,0.947,33,0.252,35,0.01,36,0.012,37,0.01,53,1.322,142,3.318,182,1.7,183,1.941,195,1.855,255,2.131,264,1.629,488,3.318,643,2.572,663,2.032,670,3.182,676,2.827,797,2.237,804,5.213,815,3.752,816,4.754,817,4.846,818,4.114,819,2.625,820,2.968,821,4.192,822,2.968,823,3.182]],["title/controllers/RequestController.html",[38,1.352,88,2.531]],["body/controllers/RequestController.html",[0,0.099,3,0.085,4,0.085,5,0.066,7,0.179,9,1.302,11,1.414,13,3.177,14,0.641,15,0.016,16,0.906,17,1.249,21,0.925,22,0.635,27,0.292,32,0.403,33,0.085,35,0.004,36,0.007,37,0.004,38,0.724,40,0.724,42,1.16,44,1.264,45,3.469,47,1.817,48,0.421,51,2.977,53,0.902,55,1.601,79,2.241,81,1.606,88,2.171,100,1.969,101,1.057,102,2.686,113,1.464,129,1.117,161,0.907,164,1.898,165,1.185,179,2.611,181,1.694,182,2.455,188,1.186,190,2.773,194,3.386,195,2.584,197,3.271,204,2.899,205,2.171,206,2.899,207,2.347,208,1.264,215,1.785,234,1.527,235,1.983,236,1.065,243,2.949,255,2.081,354,1.464,366,1.9,368,2.347,379,1.464,432,1.057,466,1.464,468,1.464,507,2.347,558,2.566,643,1.812,648,2.347,672,3.108,676,0.826,679,3.997,689,1.117,721,3.173,724,1.264,815,2.899,822,3.386,824,1.785,825,2.937,826,4.138,827,4.138,828,4.138,829,4.138,830,2.063,831,2.063,832,4.782,833,3.307,834,2.063,835,3.307,836,3.307,837,3.307,838,3.307,839,4.138,840,2.063,841,2.063,842,2.063,843,4.138,844,3.212,845,3.63,846,2.063,847,3.813,848,2.063,849,3.271,850,3.307,851,2.063,852,2.063,853,2.347,854,2.063,855,4.734,856,2.063,857,2.063,858,2.063,859,2.063,860,2.063,861,1.464,862,1.785,863,1.601,864,2.566,865,3.674,866,4.138,867,1.785,868,1.785,869,2.347,870,1.601,871,1.601,872,1.601,873,1.785,874,2.063,875,1.601,876,2.063,877,1.785,878,2.063,879,2.063,880,2.063,881,2.063,882,1.785,883,2.063,884,2.063,885,2.063,886,4.734,887,4.734,888,2.063,889,3.58,890,1.785,891,1.785,892,1.601,893,2.063,894,2.063,895,2.063,896,2.063,897,2.063]],["title/classes/RequestEntity.html",[0,0.186,102,1.872]],["body/classes/RequestEntity.html",[0,0.233,1,2.936,2,0.609,3,0.108,4,0.108,5,0.084,7,0.229,8,0.816,9,1.843,10,2.626,11,1.353,12,2.626,13,2.298,14,0.701,15,0.016,16,1.182,17,1.739,18,3.548,19,3.309,20,3.357,21,1.379,22,0.884,27,0.291,28,2.748,29,0.78,30,1.868,31,2.838,32,0.514,33,0.164,34,1.348,35,0.005,36,0.008,37,0.005,100,1.536,101,1.348,102,1.943,165,0.816,169,1.215,173,2.042,177,2.166,179,1.677,180,1.758,181,2.478,183,1.602,195,1.531,250,2.048,251,2.626,262,2.449,263,1.512,264,1.816,450,2.127,488,2.926,678,1.425,680,1.846,681,3.433,682,3.433,683,3.433,686,3.516,797,3.026,898,2.042,899,3.433,900,5.026,901,4.184,902,4.673,903,3.999,904,2.631,905,4.184,906,2.276,907,2.838,908,2.631,909,2.276,910,2.631,911,2.631,912,2.631,913,2.631,914,2.631,915,2.631,916,4.184,917,2.631,918,2.631,919,2.631,920,2.631,921,2.042,922,2.631,923,2.631,924,3.754,925,2.631,926,3.834,927,1.868,928,1.868,929,1.868,930,1.868,931,2.838,932,2.042,933,2.276,934,2.276,935,2.276,936,2.276,937,1.868]],["title/classes/RequestFillableFields.html",[0,0.186,937,2.735]],["body/classes/RequestFillableFields.html",[0,0.288,1,2.417,2,0.883,3,0.157,4,0.157,5,0.122,7,0.332,8,1.068,11,1.368,14,0.671,15,0.016,16,1.104,20,3.059,21,1.256,22,0.468,27,0.326,28,3.042,29,1.131,30,2.032,31,3.714,32,0.746,33,0.215,34,1.955,35,0.008,36,0.011,37,0.008,100,1.699,101,1.955,102,1.854,165,1.068,169,0.959,177,2.067,179,2.195,180,2.301,181,1.955,183,2.096,195,2.004,250,1.955,251,3.437,262,3.206,263,2.193,264,1.759,488,2.835,678,2.067,680,1.762,681,2.708,682,2.708,683,2.708,686,3.87,797,2.968,898,2.962,899,2.708,900,4.527,901,3.301,902,5.559,907,2.708,916,4.527,924,4.062,931,3.714,932,2.962,933,3.301,934,3.301,935,3.301,936,3.301,937,3.714,938,3.816]],["title/classes/RequestFormDto.html",[0,0.186,679,2.36]],["body/classes/RequestFormDto.html",[0,0.234,1,3.195,2,0.795,3,0.141,4,0.141,5,0.11,7,0.299,8,0.992,9,1.899,10,3.194,11,1.379,12,3.194,13,2.795,14,0.689,15,0.016,16,1.194,17,1.704,18,4.032,19,3.761,20,3.145,21,1.381,22,0.867,27,0.223,30,1.989,32,0.672,33,0.2,35,0.007,36,0.01,37,0.007,53,2.062,104,2.04,169,0.863,181,3.319,182,2.154,183,1.948,450,1.511,643,2.162,663,1.441,668,4.358,669,5.03,670,2.256,671,2.666,672,2.256,673,2.972,675,2.972,676,2.261,678,1.861,679,2.979,680,2.246,681,4.007,682,4.007,683,4.007,926,4.358,927,2.438,928,2.438,929,2.438,930,2.438,939,3.436,940,3.436,941,3.436,942,3.436]],["title/modules/RequestModule.html",[57,1.052,74,2.36]],["body/modules/RequestModule.html",[0,0.222,3,0.19,4,0.19,5,0.147,15,0.016,27,0.336,33,0.19,35,0.009,36,0.012,37,0.009,40,2.083,48,0.942,57,1.792,59,1.936,60,1.936,61,2.242,62,2.242,63,2.03,64,3.19,65,3.19,74,4.681,76,3.976,79,4.226,82,2.885,83,2.242,84,2.131,88,4.312,91,3.042,94,2.653,95,1.936,102,2.242,110,3.582,689,2.5,867,3.993,943,3.993,944,4.616,945,3.993,946,4.616,947,4.616,948,4.616,949,4.616]],["title/injectables/RequestService.html",[79,2.087,158,1.142]],["body/injectables/RequestService.html",[0,0.111,3,0.095,4,0.095,5,0.073,7,0.2,8,0.736,9,1.576,11,1.508,13,3.141,14,0.581,15,0.016,16,0.95,21,0.869,22,0.791,27,0.287,29,0.682,33,0.095,35,0.005,36,0.007,37,0.005,42,1.265,47,2.126,48,0.47,53,0.628,55,1.791,79,1.953,95,0.965,100,1.431,102,3.32,104,1.865,129,2.408,158,1.069,159,1.063,161,1.586,164,2.298,165,1.28,169,0.906,181,1.847,190,2.911,195,2.526,221,2.209,224,3.305,232,1.41,234,2.798,235,2.32,236,1.868,243,2.677,255,1.012,264,0.774,291,1.323,366,2.892,432,1.847,450,1.012,672,2.92,676,0.922,679,4.042,686,2.073,689,1.247,814,1.991,815,3.083,825,2.559,832,4.353,847,2.92,853,3.878,861,1.633,868,1.991,869,2.559,873,1.991,877,3.119,891,1.991,892,2.799,932,1.786,950,1.991,951,3.606,952,4.446,953,2.559,954,4.446,955,2.302,956,3.606,957,3.606,958,3.119,959,2.302,960,3.606,961,2.302,962,2.799,963,2.302,964,3.606,965,2.302,966,2.302,967,2.302,968,1.991,969,3.606,970,2.302,971,2.302,972,4.446,973,2.302,974,2.799,975,1.511,976,1.786,977,2.302,978,2.302,979,2.302,980,3.119,981,3.606,982,2.302,983,2.559,984,4.446,985,2.302,986,2.302,987,2.302,988,2.302,989,2.302,990,2.302,991,2.302,992,2.302,993,2.302,994,2.302,995,2.302,996,2.302,997,2.302,998,2.302,999,2.302,1000,2.302,1001,2.302,1002,2.302,1003,2.302,1004,2.302,1005,2.302,1006,2.302,1007,2.302,1008,3.119,1009,2.302,1010,2.302,1011,2.302,1012,3.606,1013,2.302,1014,1.991,1015,2.302,1016,2.302,1017,2.302,1018,2.302,1019,2.302]],["title/classes/ResponseTokenDto.html",[0,0.186,373,2.735]],["body/classes/ResponseTokenDto.html",[0,0.225,2,1.08,3,0.192,4,0.192,5,0.149,7,0.406,8,1.22,11,1.481,14,0.693,15,0.016,16,0.98,17,1.592,22,0.809,27,0.214,30,1.9,32,0.912,33,0.192,35,0.009,36,0.012,37,0.009,100,1.701,169,1.809,170,5.71,182,2.316,183,2.788,373,4.245,402,3.928,408,5.123,426,5.71,1020,6.022,1021,4.038,1022,5.982,1023,4.668,1024,5.982,1025,5.982,1026,5.174,1027,4.668,1028,4.668]],["title/classes/ShoppingList.html",[0,0.186,117,1.872]],["body/classes/ShoppingList.html",[0,0.241,2,0.829,3,0.147,4,0.147,5,0.114,7,0.312,8,1.022,11,1.401,14,0.704,15,0.016,16,0.821,17,1.645,21,0.98,22,0.836,27,0.286,28,2.761,29,1.062,30,1.911,32,0.701,33,0.206,35,0.007,36,0.01,37,0.007,117,2.807,165,0.731,169,1.452,173,2.782,179,2.102,180,2.204,183,2.007,250,3.205,251,3.291,264,2.103,450,2.541,488,3.389,676,2.007,688,3.92,689,1.941,797,2.889,818,4.178,819,2.714,822,3.539,823,3.291,899,4.101,905,4.998,906,3.101,907,3.557,909,3.101,921,2.782,931,3.557,1029,3.793,1030,2.782,1031,4.44,1032,4.998,1033,3.585,1034,3.585,1035,3.585,1036,3.585,1037,3.585,1038,3.585,1039,3.585,1040,3.585,1041,3.585,1042,4.335,1043,3.101,1044,2.544]],["title/controllers/ShoppingListController.html",[38,1.352,89,2.531]],["body/controllers/ShoppingListController.html",[0,0.09,3,0.077,4,0.077,5,0.06,7,0.163,9,1.404,11,1.55,14,0.653,15,0.016,17,1.277,21,0.367,22,0.685,27,0.276,32,0.367,33,0.077,35,0.004,36,0.006,37,0.004,38,0.659,40,0.659,42,1.075,44,1.15,45,3.562,47,1.959,48,0.383,51,3.043,53,0.836,55,1.726,79,2.103,80,2.231,89,2.012,100,1.988,101,0.962,114,1.624,117,3.291,118,1.15,120,1.458,129,1.017,161,0.826,164,2.046,165,1.139,169,1.24,182,2.473,188,1.079,190,2.866,194,3.568,195,2.23,197,3.316,200,1.624,204,2.378,205,2.012,206,3.023,207,2.175,208,1.15,234,2.279,235,1.89,236,1.59,241,1.458,243,2.579,354,1.333,366,1.761,368,2.175,423,1.624,432,1.57,450,0.826,466,1.333,468,1.333,483,2.378,676,2.846,721,3.243,724,1.15,819,3.9,820,3.421,844,1.458,845,3.477,847,3.477,849,3.711,853,2.175,863,1.458,864,2.378,865,3.831,869,1.333,870,1.458,871,1.458,872,1.458,875,1.458,889,2.651,890,1.624,892,1.458,974,1.458,983,3.179,1029,3.155,1045,1.624,1046,3.358,1047,3.882,1048,3.358,1049,3.065,1050,3.065,1051,3.882,1052,5.295,1053,1.878,1054,1.878,1055,4.48,1056,3.065,1057,3.065,1058,1.878,1059,5.295,1060,1.878,1061,1.878,1062,1.878,1063,1.624,1064,1.878,1065,2.651,1066,1.878,1067,3.065,1068,1.878,1069,1.878,1070,1.878,1071,1.878,1072,3.065,1073,1.878,1074,1.878,1075,1.624,1076,1.878,1077,2.651,1078,4.27,1079,1.624,1080,1.878,1081,1.878,1082,1.624,1083,1.878,1084,1.878,1085,1.624,1086,3.065,1087,1.878,1088,1.624,1089,1.878,1090,1.878,1091,3.065,1092,3.065,1093,1.878,1094,1.878,1095,1.878,1096,1.878,1097,1.878,1098,1.878,1099,1.624,1100,1.624,1101,1.624,1102,1.878]],["title/classes/ShoppingListFillableFields.html",[0,0.186,1044,2.735]],["body/classes/ShoppingListFillableFields.html",[0,0.272,2,0.988,3,0.175,4,0.175,5,0.136,7,0.371,8,1.151,11,1.432,14,0.678,15,0.016,16,0.7,21,0.835,22,0.524,27,0.308,28,2.934,29,1.266,30,2,32,0.835,33,0.232,35,0.009,36,0.011,37,0.009,117,2.742,165,0.871,169,1.073,179,2.367,180,2.482,183,2.261,250,2.891,251,3.707,264,1.897,488,3.057,676,2.261,688,4.021,689,2.313,797,2.92,818,4.121,819,3.057,822,2.615,823,3.707,899,3.03,907,3.03,931,4.006,1029,3.057,1030,3.314,1031,4.775,1032,3.693,1042,4.883,1043,3.693,1044,4.006,1103,4.27]],["title/classes/ShoppingListFormDto.html",[0,0.186,820,2.36]],["body/classes/ShoppingListFormDto.html",[0,0.281,2,1.039,3,0.184,4,0.184,5,0.143,7,0.39,8,1.19,11,1.241,14,0.674,15,0.016,16,0.956,17,1.407,21,1.267,22,0.715,27,0.267,30,1.872,32,0.878,33,0.24,35,0.009,36,0.012,37,0.009,53,1.768,142,2.432,182,2.046,183,1.798,195,2.234,255,2.565,264,1.961,450,2.565,488,3.716,643,2.481,663,2.447,670,2.949,676,2.919,677,3.884,797,2.694,804,3.485,815,2.75,816,5.029,818,4.355,819,2.432,820,3.573,821,5.046,822,3.969,823,2.949,1104,4.49]],["title/modules/ShoppingListModule.html",[57,1.052,75,2.531]],["body/modules/ShoppingListModule.html",[0,0.22,3,0.187,4,0.187,5,0.146,15,0.016,27,0.335,33,0.187,35,0.009,36,0.012,37,0.009,40,2.068,48,0.931,57,1.782,59,1.914,60,1.914,61,2.217,62,2.217,63,2.007,64,3.173,65,3.173,74,4.484,75,5.008,80,4.477,82,2.864,83,2.217,84,2.108,89,4.289,91,3.02,94,2.623,95,1.914,108,3.948,116,3.948,117,2.217,118,2.796,120,3.543,819,3.538,1029,2.472,1105,3.948,1106,4.565,1107,3.948,1108,4.565,1109,4.565,1110,4.565]],["title/classes/ShoppingListRequest.html",[0,0.186,688,2.215]],["body/classes/ShoppingListRequest.html",[0,0.217,2,1.042,3,0.185,4,0.185,5,0.144,7,0.391,8,1.192,11,1.461,14,0.675,15,0.016,17,1.565,21,1.142,22,0.796,27,0.297,28,2.451,29,1.334,30,1.595,32,0.88,33,0.185,35,0.009,36,0.012,37,0.009,117,3.656,118,2.758,165,0.918,169,1.631,179,2.451,180,2.57,183,1.803,450,1.98,643,1.724,663,1.888,676,2.75,688,3.729,811,3.895,813,5.055,819,2.439,847,4.261,921,3.494,1029,3.72,1111,3.895,1112,4.502,1113,4.502,1114,4.502,1115,4.502,1116,5.844,1117,3.895]],["title/injectables/ShoppingListService.html",[80,2.215,158,1.142]],["body/injectables/ShoppingListService.html",[0,0.114,3,0.097,4,0.097,5,0.075,7,0.392,8,0.75,9,1.589,11,1.463,14,0.585,15,0.016,21,0.718,22,0.797,27,0.298,29,0.699,33,0.097,35,0.005,36,0.007,37,0.005,42,1.289,47,2.145,48,0.481,53,0.643,55,1.809,80,2.112,95,0.989,100,1.284,101,1.208,117,3.72,118,1.444,129,2.446,158,1.089,159,1.089,161,1.616,164,2.317,165,1.29,169,0.592,190,2.923,221,2.251,224,3.348,232,1.444,234,2.354,235,2.116,236,2.038,243,2.552,264,0.792,291,1.355,316,3.178,363,2.852,366,2.93,432,2.313,488,1.277,676,2.042,688,2.595,689,1.277,818,1.444,819,2.446,820,4.069,822,2.251,823,1.548,845,1.548,847,3.348,849,2.999,853,1.673,861,1.673,869,1.673,882,2.039,953,2.608,958,3.178,962,2.852,968,2.039,974,1.83,975,1.548,976,1.83,980,3.178,983,1.673,1029,3.598,1031,1.673,1046,3.178,1079,2.039,1082,3.178,1099,2.039,1117,2.039,1118,2.039,1119,3.674,1120,3.674,1121,3.674,1122,2.357,1123,3.674,1124,3.674,1125,3.674,1126,2.357,1127,2.357,1128,2.357,1129,3.674,1130,2.357,1131,3.674,1132,2.357,1133,3.674,1134,2.357,1135,3.674,1136,2.357,1137,2.357,1138,2.357,1139,2.357,1140,2.357,1141,2.357,1142,2.357,1143,2.357,1144,5.099,1145,2.357,1146,2.357,1147,2.357,1148,4.515,1149,3.674,1150,3.674,1151,2.357,1152,2.357,1153,2.357,1154,2.357,1155,2.357,1156,2.357,1157,2.357,1158,2.357,1159,2.357,1160,2.357,1161,2.357,1162,2.357,1163,2.357,1164,3.674,1165,2.357]],["title/classes/TranslatedCallPayloadDto.html",[0,0.186,477,2.735]],["body/classes/TranslatedCallPayloadDto.html",[0,0.274,2,0.998,3,0.177,4,0.177,5,0.138,7,0.375,8,1.159,14,0.588,15,0.016,16,1.107,17,1.533,21,1.409,22,0.779,27,0.26,30,1.843,32,0.843,33,0.177,35,0.009,36,0.011,37,0.009,53,2.059,142,3.078,182,2.529,250,3.596,437,4.61,477,4.033,643,2.433,663,2.665,666,4.933,667,2.479,1166,5.843,1167,3.348,1168,5.843,1169,7.02,1170,5.843,1171,4.314,1172,3.732,1173,4.916,1174,4.314,1175,3.732,1176,4.314,1177,3.732,1178,4.916,1179,3.732]],["title/classes/UpdateUserDto.html",[0,0.186,1180,2.531]],["body/classes/UpdateUserDto.html",[0,0.247,1,3.263,2,0.857,3,0.152,4,0.152,5,0.118,7,0.322,8,1.046,9,1.86,10,3.367,11,1.091,12,3.367,13,2.947,14,0.667,15,0.016,16,1.236,17,1.737,18,4.168,19,3.887,20,3.251,21,1.408,22,0.883,27,0.269,30,1.732,31,4.174,32,0.724,33,0.152,35,0.007,36,0.01,37,0.007,643,2.252,663,2.466,667,2.129,678,2.007,680,2.368,773,4.926,788,3.862,789,3.862,790,3.862,793,4.436,797,2.368,926,4.504,927,2.629,928,2.629,929,2.629,930,2.629,1180,3.367,1181,5.764,1182,3.205,1183,4.174,1184,3.705,1185,3.705,1186,3.705,1187,3.705,1188,3.705,1189,3.205,1190,3.205]],["title/classes/UploadCallPayloadDto.html",[0,0.186,474,2.735]],["body/classes/UploadCallPayloadDto.html",[0,0.256,2,0.902,3,0.16,4,0.16,5,0.228,7,0.339,8,1.083,14,0.6,15,0.016,16,1.147,17,1.563,21,1.425,22,0.795,27,0.243,30,1.851,32,0.762,33,0.16,35,0.008,36,0.011,37,0.008,53,2.075,121,3.585,131,4.814,142,2.876,169,1.334,182,2.557,248,4.285,249,4.593,250,2.72,275,3.025,437,4.455,474,3.768,643,2.482,663,2.719,666,5.032,667,2.24,1167,3.025,1168,3.371,1170,4.593,1172,3.371,1173,4.593,1175,3.371,1177,3.371,1178,4.593,1191,5.868,1192,6.038,1193,6.038,1194,5.309,1195,5.309,1196,3.897,1197,3.897,1198,3.897]],["title/classes/User.html",[0,0.186,100,1.096]],["body/classes/User.html",[0,0.271,1,3.019,2,0.661,3,0.117,4,0.117,5,0.091,7,0.249,8,0.868,9,1.756,10,2.795,11,1.282,12,2.795,13,2.446,14,0.665,15,0.016,16,1.26,17,1.71,18,3.699,19,3.45,20,3.234,21,1.366,22,0.87,27,0.289,28,2.742,29,0.847,30,1.723,32,0.559,33,0.209,34,3.234,35,0.006,36,0.009,37,0.006,100,1.446,165,0.868,169,1.278,177,3.785,179,1.785,180,2.236,236,0.921,255,1.257,262,2.607,263,2.922,264,1.431,430,3.234,434,3.237,450,1.257,643,2.306,663,2.526,678,1.549,680,1.965,776,2.607,788,3.699,789,3.699,790,3.955,797,2.601,798,3.339,802,2.029,849,2.18,926,3.998,927,2.029,928,2.029,929,2.029,930,2.029,1183,3.998,1199,2.029,1200,5.085,1201,2.859,1202,2.859,1203,2.859,1204,2.859,1205,2.859,1206,2.859,1207,2.859,1208,2.859,1209,2.859,1210,2.859,1211,2.859,1212,2.219,1213,2.029,1214,1.751,1215,2.219]],["title/controllers/UserController.html",[38,1.352,87,2.531]],["body/controllers/UserController.html",[0,0.152,3,0.13,4,0.13,5,0.101,7,0.274,9,1.15,11,1.391,14,0.678,15,0.016,17,1.298,21,0.616,22,0.66,27,0.309,32,0.616,33,0.13,35,0.006,36,0.009,37,0.006,38,1.106,40,1.106,42,1.605,44,1.932,45,3.757,47,1.888,48,0.643,51,1.812,52,1.932,53,0.861,54,4.656,55,1.663,81,2.222,87,3.004,100,2.147,129,1.708,164,1.676,165,1.204,169,1.841,182,2.071,183,2.365,188,1.812,190,2.82,194,3.617,195,1.751,197,3.349,204,2.802,206,1.932,208,1.932,216,3.55,235,1.207,236,1.474,241,2.448,243,2.485,366,2.629,379,2.238,432,1.615,444,2.728,450,1.387,466,2.238,468,2.238,470,4.656,483,2.448,721,2.802,724,1.932,825,4.19,844,2.448,845,3.004,849,3.024,863,2.448,864,3.55,865,2.448,870,2.448,871,2.448,872,2.448,875,2.448,953,3.82,983,2.238,1048,3.957,1063,2.728,1065,2.728,1075,2.728,1077,2.728,1078,2.728,1085,2.728,1088,2.728,1101,2.728,1180,4.429,1213,2.238,1216,2.728,1217,3.154,1218,3.154,1219,3.154,1220,3.154,1221,3.154,1222,3.154,1223,3.154,1224,3.154,1225,2.448,1226,2.728,1227,2.728,1228,2.728,1229,3.154,1230,3.154,1231,3.154,1232,3.154,1233,4.574,1234,3.154,1235,4.574,1236,3.154,1237,3.154,1238,4.574,1239,3.154,1240,3.154,1241,3.154]],["title/classes/UserFillableFields.html",[0,0.186,1214,2.36]],["body/classes/UserFillableFields.html",[0,0.299,1,2.283,2,0.813,3,0.144,4,0.144,5,0.112,7,0.306,8,1.009,9,1.704,11,1.052,14,0.658,15,0.016,16,1.277,20,1.801,21,1.278,22,0.854,27,0.31,28,2.921,29,1.042,30,1.85,32,0.687,33,0.235,34,3.348,35,0.007,36,0.01,37,0.007,100,1.406,165,1.009,169,0.884,177,3.541,179,2.073,180,2.174,236,1.133,255,1.546,262,3.028,263,2.841,264,1.182,430,3.348,434,3.565,643,2.503,678,1.904,680,1.623,776,3.028,788,4.074,789,4.074,790,4.292,797,2.283,798,3.246,802,2.495,849,2.532,1183,4.403,1199,2.495,1212,2.729,1213,2.495,1214,3.028,1215,4.438,1242,3.516,1243,3.516,1244,3.516,1245,3.516,1246,3.516,1247,3.516,1248,3.516]],["title/classes/UserID.html",[0,0.186,849,1.974]],["body/classes/UserID.html",[0,0.313,1,2.459,2,0.906,3,0.161,4,0.161,5,0.125,7,0.34,8,1.087,11,1.288,14,0.493,15,0.016,16,1.256,20,2.006,21,1.328,22,0.48,27,0.321,28,3.008,29,1.161,30,1.913,32,0.765,33,0.249,34,3.481,35,0.008,36,0.011,37,0.008,100,1.515,165,1.087,169,0.984,177,3.68,179,2.234,180,2.342,236,1.262,255,1.722,262,3.262,263,3.061,264,1.316,430,3.101,434,3.061,643,2.601,678,2.121,680,1.808,776,3.262,788,3.498,789,3.498,790,3.975,797,2.459,798,3.498,802,2.779,849,3.481,1183,3.78,1199,2.779,1212,3.039,1213,2.779,1214,2.398,1215,3.039,1249,3.916]],["title/modules/UserModule.html",[57,1.052,76,2.087]],["body/modules/UserModule.html",[0,0.231,3,0.197,4,0.197,5,0.153,15,0.016,27,0.332,33,0.197,35,0.01,36,0.012,37,0.01,40,2.137,48,0.98,57,1.826,59,2.014,60,2.014,61,2.333,62,2.333,63,2.112,64,3.25,65,3.25,76,4.082,81,3.811,82,2.959,83,2.333,84,2.218,87,4.393,91,2.46,94,2.76,95,2.014,100,1.366,366,2.76,1225,3.728,1226,4.155,1250,4.155,1251,4.155,1252,4.803,1253,4.803,1254,4.803,1255,4.803]],["title/modules/UsersModule.html",[57,1.052,1256,2.735]],["body/modules/UsersModule.html",[0,0.24,3,0.204,4,0.204,5,0.159,15,0.016,27,0.336,33,0.204,35,0.01,36,0.013,37,0.01,40,2.185,48,1.015,57,1.856,59,2.087,60,2.087,61,2.418,62,2.418,63,2.188,64,3.303,65,2.418,77,4.302,82,3.026,83,2.418,84,2.298,86,4.465,91,2.549,94,2.86,95,2.087,104,2.087,211,4.305,212,3.863,1256,5.313,1257,4.305,1258,4.977,1259,4.977,1260,4.977,1261,4.977]],["title/injectables/UsersService.html",[81,1.872,158,1.142]],["body/injectables/UsersService.html",[0,0.133,3,0.113,4,0.113,5,0.088,7,0.24,9,1.566,11,1.059,14,0.577,15,0.016,16,1.114,22,0.792,27,0.285,29,0.818,33,0.113,35,0.006,36,0.008,37,0.006,42,1.454,47,2.185,48,0.563,53,0.753,55,2.054,81,2.013,95,1.157,100,2.001,158,1.228,159,1.274,161,1.822,164,2.282,165,1.271,169,0.693,190,2.998,221,2.538,224,3.634,232,1.69,234,1.274,235,2.119,236,1.335,243,3.14,362,2.141,363,2.141,365,2.141,430,3.038,432,2.123,434,3.908,648,1.958,825,3.927,845,1.812,861,1.958,953,2.941,962,3.216,975,1.812,976,2.141,1180,3.634,1214,3.39,1225,2.141,1227,2.386,1228,2.386,1262,2.386,1263,4.144,1264,4.144,1265,2.759,1266,2.759,1267,4.144,1268,4.144,1269,2.759,1270,2.759,1271,2.759,1272,4.144,1273,2.759,1274,4.144,1275,2.759,1276,4.144,1277,2.759,1278,2.759,1279,4.144,1280,2.759,1281,2.759,1282,2.759,1283,2.759,1284,2.759,1285,2.759,1286,4.144,1287,4.144,1288,4.144,1289,4.144,1290,4.144,1291,4.144,1292,4.144,1293,2.759,1294,2.759,1295,2.759,1296,2.759,1297,4.144,1298,2.759,1299,2.386,1300,2.141,1301,2.759,1302,2.759,1303,2.759,1304,2.759,1305,2.759,1306,2.759,1307,2.759,1308,2.759,1309,2.759,1310,2.759,1311,2.759,1312,2.759,1313,2.759,1314,2.759,1315,2.759,1316,2.759,1317,2.759,1318,2.759,1319,2.759,1320,2.759,1321,2.759]],["title/coverage.html",[1322,4.089]],["body/coverage.html",[0,0.369,1,1.176,5,0.081,6,2.203,14,0.236,15,0.016,35,0.005,36,0.008,37,0.005,38,2.275,39,1.807,41,2.203,49,1.56,57,0.695,63,1.12,77,1.463,78,1.463,79,1.379,80,1.463,81,1.237,86,1.672,87,1.672,88,1.672,89,1.672,90,1.672,92,1.12,100,0.724,102,1.237,104,1.635,117,1.237,122,2.58,125,1.379,137,1.807,158,2.011,160,2.203,168,3.027,185,1.807,187,2.203,199,1.672,220,2.203,236,0.82,245,3.253,246,2.203,265,2.203,274,3.027,294,1.807,344,1.807,345,2.203,350,1.56,358,1.807,369,1.463,373,1.807,393,1.672,411,2.203,435,1.807,436,2.203,437,2.561,474,1.807,477,1.807,511,1.672,515,2.203,523,2.203,567,5.869,661,2.203,662,2.203,668,1.807,669,3.027,670,3.488,676,1.898,679,1.56,686,1.463,688,1.463,716,3.112,717,1.807,719,3.027,721,1.56,724,1.56,725,2.203,726,2.203,744,1.807,745,2.203,749,2.203,767,2.203,776,1.56,777,2.203,787,2.203,803,2.203,815,1.56,816,3.027,820,1.56,824,2.203,849,1.304,898,3.027,937,1.807,950,2.203,975,1.672,1020,2.203,1021,2.203,1029,3.101,1030,3.027,1044,1.807,1045,2.203,1111,2.203,1118,2.203,1166,2.203,1167,3.027,1180,1.672,1181,2.203,1182,2.203,1191,2.203,1199,3.364,1214,1.56,1216,2.203,1262,2.203,1322,1.976,1323,2.546,1324,2.546,1325,3.027,1326,2.546,1327,8.006,1328,7.164,1329,6.649,1330,6.649,1331,4.74,1332,2.546,1333,5.312,1334,6.04,1335,4.74,1336,2.203,1337,2.203,1338,2.203,1339,2.546,1340,2.546,1341,3.9,1342,2.546,1343,3.9,1344,4.74,1345,2.546,1346,4.595,1347,2.203,1348,2.203,1349,2.203,1350,2.203,1351,2.203,1352,2.203,1353,2.546,1354,2.546]],["title/dependencies.html",[60,1.945,1355,3.214]],["body/dependencies.html",[0,0.242,15,0.016,29,1.067,32,0.704,35,0.007,36,0.01,37,0.007,48,0.734,60,2.108,95,1.51,128,3.114,129,1.95,263,2.069,292,4.348,294,3.567,318,3.114,319,3.114,396,2.794,398,2.555,402,3.301,472,3.114,473,4.495,597,3.114,600,3.114,633,2.794,667,2.069,703,5.01,706,4.495,758,3.901,783,3.114,1356,3.6,1357,3.6,1358,5.792,1359,3.6,1360,5.027,1361,3.6,1362,3.6,1363,3.6,1364,3.6,1365,3.6,1366,3.6,1367,5.027,1368,3.6,1369,3.6,1370,3.6,1371,3.6,1372,3.6,1373,3.6,1374,3.6,1375,3.6,1376,5.027,1377,5.027,1378,3.6,1379,3.6,1380,3.6,1381,3.6,1382,3.6,1383,3.6,1384,3.6,1385,3.6,1386,3.6,1387,3.6,1388,3.6,1389,3.114,1390,3.6,1391,3.6,1392,3.6,1393,3.6,1394,3.6,1395,3.6,1396,3.6,1397,3.6,1398,3.6,1399,5.027,1400,3.6,1401,3.6,1402,3.6,1403,3.6,1404,3.6,1405,3.6,1406,3.6,1407,3.6,1408,3.6,1409,3.6,1410,3.6,1411,3.6,1412,3.6,1413,3.6,1414,3.6,1415,3.6,1416,3.6,1417,3.6,1418,3.6,1419,3.6,1420,3.6,1421,3.6,1422,3.6,1423,3.6,1424,3.114,1425,3.6,1426,3.6,1427,3.6,1428,3.6,1429,3.6,1430,5.027,1431,3.6,1432,3.6,1433,3.6,1434,3.6,1435,3.6,1436,3.6,1437,3.6,1438,3.6,1439,3.6,1440,3.6,1441,3.6,1442,3.6,1443,3.6,1444,3.6,1445,3.6,1446,3.6,1447,3.6]],["title/miscellaneous/enumerations.html",[1448,1.968,1449,4.011]],["body/miscellaneous/enumerations.html",[7,0.445,15,0.016,35,0.01,36,0.013,37,0.01,236,2.042,291,4.473,676,2.538,798,4.161,818,3.882,924,4.918,1029,2.771,1179,6.225,1189,5.482,1190,5.482,1448,3.133,1449,4.425,1450,5.116,1451,7.196,1452,5.116,1453,5.116,1454,6.337,1455,5.116,1456,6.337,1457,6.337,1458,6.337,1459,5.116,1460,6.337]],["title/miscellaneous/functions.html",[1448,1.968,1461,4.011]],["body/miscellaneous/functions.html",[7,0.528,15,0.014,35,0.012,36,0.014,37,0.012,63,3.258,1325,4.714,1448,3.721,1461,5.255,1462,5.255]],["title/index.html",[7,0.279,1463,2.78,1464,2.78]],["body/index.html",[5,0.134,14,0.261,15,0.015,29,1.775,35,0.006,36,0.008,37,0.006,43,3.27,60,1.767,100,0.802,137,2.001,165,0.575,184,2.001,201,3.27,221,3.847,264,1.416,313,2.439,326,2.189,346,2.439,347,2.439,360,2.439,362,3.914,402,3.312,430,2.866,507,2.001,605,3.644,606,2.439,607,3.644,632,2.439,633,3.914,635,2.439,638,5.789,641,4.363,649,3.644,692,2.439,695,2.439,697,4.84,732,4.363,735,2.189,738,2.439,758,2.189,1014,2.439,1026,2.439,1031,2.001,1100,3.644,1299,2.439,1300,2.189,1322,2.189,1389,4.363,1424,2.439,1465,2.82,1466,7.07,1467,5.595,1468,2.82,1469,4.213,1470,2.82,1471,4.213,1472,2.82,1473,6.692,1474,2.82,1475,2.82,1476,2.82,1477,2.82,1478,2.82,1479,5.043,1480,2.82,1481,2.82,1482,2.82,1483,2.82,1484,2.82,1485,2.82,1486,2.82,1487,2.82,1488,2.82,1489,5.043,1490,2.82,1491,2.82,1492,2.82,1493,2.82,1494,2.439,1495,2.82,1496,2.82,1497,4.213,1498,2.82,1499,2.82,1500,3.644,1501,4.213,1502,2.82,1503,2.82,1504,2.439,1505,2.82,1506,2.82,1507,5.043,1508,2.82,1509,2.82,1510,2.82,1511,2.82,1512,2.82,1513,4.213,1514,4.213,1515,2.82,1516,3.644,1517,2.439,1518,2.82,1519,2.82,1520,4.213,1521,2.82,1522,5.043,1523,2.82,1524,2.82,1525,4.213,1526,4.213,1527,4.213,1528,2.82,1529,5.988,1530,2.82,1531,2.82,1532,2.82,1533,2.82,1534,2.82,1535,2.82,1536,2.82,1537,4.213,1538,2.82,1539,2.82,1540,2.82,1541,2.82,1542,2.82,1543,2.82,1544,2.82,1545,4.213,1546,4.213,1547,4.213,1548,2.82,1549,2.82,1550,2.82,1551,4.363,1552,2.82,1553,2.82,1554,2.82,1555,4.213,1556,2.82,1557,4.213,1558,2.82,1559,2.82,1560,4.213,1561,2.82,1562,2.82,1563,2.82,1564,2.82,1565,2.82,1566,2.82,1567,4.213,1568,2.439,1569,5.043,1570,4.213,1571,5.043,1572,5.043,1573,2.82,1574,4.213,1575,2.82,1576,2.82,1577,2.82,1578,4.213,1579,2.82,1580,2.82,1581,4.213,1582,2.82,1583,2.82,1584,2.82,1585,2.82,1586,4.213,1587,2.82,1588,2.82,1589,2.82,1590,2.82,1591,2.82,1592,2.82,1593,2.82,1594,2.82,1595,2.82,1596,2.82,1597,2.82,1598,2.82,1599,2.82,1600,2.82,1601,4.213,1602,5.043,1603,4.213,1604,2.439,1605,2.82,1606,2.82,1607,4.213,1608,2.82,1609,4.213,1610,2.82,1611,2.82,1612,2.82,1613,2.82,1614,2.82]],["title/license.html",[1463,2.78,1464,2.78,1615,2.78]],["body/license.html",[15,0.012,35,0.009,36,0.012,37,0.009,84,2.137,137,3.285,473,3.592,558,4.617,1008,4.004,1300,3.592,1494,4.004,1504,5.146,1517,4.004,1551,5.146,1615,4.004,1616,5.949,1617,6.575,1618,4.629,1619,4.629,1620,5.949,1621,4.629,1622,4.629,1623,4.629,1624,4.629,1625,4.629,1626,4.629,1627,7.647,1628,4.629,1629,4.629,1630,4.629,1631,6.575,1632,4.629,1633,4.629,1634,4.629,1635,4.629,1636,4.629,1637,4.629,1638,4.629,1639,4.629,1640,4.629,1641,4.629,1642,5.949,1643,4.629,1644,4.629,1645,4.629,1646,4.629,1647,4.629,1648,5.949,1649,5.949,1650,4.629,1651,4.629,1652,4.629,1653,4.629,1654,4.629,1655,4.629,1656,4.629,1657,4.629,1658,4.629,1659,4.629,1660,4.629,1661,4.629,1662,4.629,1663,4.629,1664,4.629,1665,4.629,1666,4.629,1667,4.629,1668,4.629,1669,4.629,1670,4.629,1671,4.629,1672,4.629,1673,4.629,1674,4.629,1675,4.629,1676,4.629,1677,4.629]],["title/modules.html",[59,2.209]],["body/modules.html",[15,0.013,35,0.011,36,0.013,37,0.011,58,3.735,59,2.207,69,3.223,70,3.455,71,3.455,72,2.85,73,3.455,74,3.223,75,3.455,76,2.85,1256,3.735,1568,4.552,1678,7.819,1679,7.819,1680,7.819,1681,7.867,1682,5.262]],["title/overview.html",[1683,4.557]],["body/overview.html",[2,0.79,15,0.016,19,2.966,35,0.007,36,0.01,37,0.007,40,1.198,49,3.447,57,0.932,58,5.638,59,1.432,60,1.432,61,1.659,62,1.659,63,1.501,64,1.659,65,1.659,66,2.953,67,2.953,68,2.953,69,4.397,70,4.835,71,4.535,72,3.637,73,3.695,74,4.397,75,4.634,76,3.822,77,3.519,78,4.055,79,3.822,80,4.055,81,3.428,82,2.352,83,1.659,84,1.576,92,2.692,159,1.576,268,2.953,270,2.953,369,3.234,390,2.953,392,2.953,393,3.695,508,2.953,510,2.953,511,3.695,516,2.953,517,2.953,718,2.65,943,2.953,945,2.953,1105,2.953,1107,2.953,1250,2.953,1251,2.953,1256,4.346,1257,2.953,1683,2.953,1684,3.414,1685,3.414,1686,3.414]],["title/miscellaneous/variables.html",[554,3.599,1448,1.968]],["body/miscellaneous/variables.html",[7,0.329,14,0.642,15,0.016,16,1.1,35,0.008,36,0.01,37,0.008,55,1.168,57,1.419,122,1.837,156,4.499,182,1.326,195,1.991,235,2.656,236,1.915,245,2.316,250,1.937,264,2.469,274,4.036,290,2.684,291,4.221,294,4.219,554,2.935,717,2.684,719,2.935,721,3.185,722,3.271,723,3.271,862,3.271,975,4.204,1325,2.935,1336,3.271,1337,3.271,1338,4.499,1346,3.271,1347,4.499,1348,4.499,1349,4.499,1350,4.499,1351,3.271,1352,4.499,1448,2.316,1462,3.271,1500,4.499,1516,4.499,1604,3.271,1687,3.781,1688,3.781,1689,3.781,1690,3.781,1691,3.781,1692,6.402,1693,3.781,1694,3.781,1695,3.781,1696,3.781,1697,3.781,1698,3.781,1699,3.781,1700,3.781,1701,3.781,1702,3.781,1703,5.201,1704,3.781,1705,3.781,1706,3.781,1707,3.781,1708,3.781,1709,3.781,1710,5.201,1711,3.781,1712,5.201,1713,3.781,1714,3.781,1715,3.781,1716,3.781,1717,3.781,1718,5.201,1719,3.781,1720,3.781,1721,3.781,1722,5.201,1723,3.781]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1327,"title":{},"body":{"coverage.html":{}}}],["0.0.45",{"_index":1371,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1417,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["0.2.24",{"_index":1437,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1328,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1343,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1345,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1342,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1330,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1329,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1334,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1331,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1335,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1333,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1344,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1341,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":316,"title":{},"body":{"injectables/AudioStorageService.html":{},"injectables/ShoppingListService.html":{}}}],["1.0",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.1",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":1357,"title":{},"body":{"dependencies.html":{}}}],["1.19.1",{"_index":1414,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["1.7.2",{"_index":1444,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":19,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["13.1.6",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["14.3.1",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["14.3.4",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1362,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":1535,"title":{},"body":{"index.html":{}}}],["2.643.0",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["2.7.7",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["2.9.0",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":1340,"title":{},"body":{"coverage.html":{}}}],["2019",{"_index":1618,"title":{},"body":{"license.html":{}}}],["24.0.25",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["24.3.0",{"_index":1427,"title":{},"body":{"dependencies.html":{}}}],["25.1.0",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["255",{"_index":177,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/AudioFile.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["26",{"_index":1685,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1686,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":1419,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["3.21.2",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["3.3.10",{"_index":1442,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["3.7.4",{"_index":1439,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":1434,"title":{},"body":{"dependencies.html":{}}}],["3010:80",{"_index":1539,"title":{},"body":{"index.html":{}}}],["302",{"_index":446,"title":{},"body":{"controllers/CallController.html":{}}}],["4.0.0",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1423,"title":{},"body":{"dependencies.html":{}}}],["4.0.7",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["4.1.10",{"_index":1363,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":1426,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["4.17.3",{"_index":1369,"title":{},"body":{"dependencies.html":{}}}],["4.41.5",{"_index":1440,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":1339,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.20.1",{"_index":1436,"title":{},"body":{"dependencies.html":{}}}],["5432:5432",{"_index":1528,"title":{},"body":{"index.html":{}}}],["6.0.3",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":1360,"title":{},"body":{"dependencies.html":{}}}],["6.10.14",{"_index":1358,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1365,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1429,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":1421,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":1361,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":1447,"title":{},"body":{"dependencies.html":{}}}],["7.17.1",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1684,"title":{},"body":{"overview.html":{}}}],["8.2.0",{"_index":1367,"title":{},"body":{"dependencies.html":{}}}],["8.6.1",{"_index":1431,"title":{},"body":{"dependencies.html":{}}}],["9.5.0",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":1647,"title":{},"body":{"license.html":{}}}],["accesskeyid",{"_index":322,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["accessors",{"_index":526,"title":{},"body":{"classes/ConfigService.html":{}}}],["accesstoken",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"classes/ResponseTokenDto.html":{}}}],["account",{"_index":1482,"title":{},"body":{"index.html":{}}}],["acl",{"_index":297,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["acorn",{"_index":1446,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":1671,"title":{},"body":{"license.html":{}}}],["active",{"_index":1457,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":648,"title":{},"body":{"classes/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/RequestController.html":{},"injectables/UsersService.html":{}}}],["addbearerauth",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1072,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["additionalrequest",{"_index":681,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{}}}],["addrequesttolist",{"_index":1046,"title":{},"body":{"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["addrequesttolist(requestid",{"_index":1125,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["addrequesttolist(shoppinglistid",{"_index":1053,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["address",{"_index":1215,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["addressmodel",{"_index":1,"title":{"classes/AddressModel.html":{}},"body":{"classes/AddressModel.html":{},"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"coverage.html":{}}}],["addressmodel:10",{"_index":929,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["addressmodel:17",{"_index":928,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["addressmodel:24",{"_index":930,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["addressmodel:31",{"_index":927,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["adds",{"_index":1543,"title":{},"body":{"index.html":{}}}],["admin",{"_index":1536,"title":{},"body":{"index.html":{}}}],["allowunknown",{"_index":657,"title":{},"body":{"classes/ConfigService.html":{}}}],["already",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["and/or",{"_index":1640,"title":{},"body":{"license.html":{}}}],["another",{"_index":1299,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["api",{"_index":1516,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["api/docs",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_auth_enabled",{"_index":645,"title":{},"body":{"classes/ConfigService.html":{}}}],["apibadrequestresponse",{"_index":206,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apibadrequestresponse({description",{"_index":216,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["apibearerauth",{"_index":864,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apicreatedresponse",{"_index":207,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["apicreatedresponse({description",{"_index":215,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/RequestController.html":{}}}],["apiforbiddenresponse",{"_index":1078,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apiforbiddenresponse({description",{"_index":1236,"title":{},"body":{"controllers/UserController.html":{}}}],["apihideproperty",{"_index":1116,"title":{},"body":{"classes/ShoppingListRequest.html":{}}}],["apinotacceptableresponse",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["apinotacceptableresponse({description",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{}}}],["apinotfoundresponse",{"_index":865,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apinotfoundresponse({description",{"_index":1233,"title":{},"body":{"controllers/UserController.html":{}}}],["apiokresponse",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apiokresponse({description",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["apiparam",{"_index":470,"title":{},"body":{"controllers/CallController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":30,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["apiproperty()@column()@createdatecolumn",{"_index":909,"title":{},"body":{"classes/RequestEntity.html":{},"classes/ShoppingList.html":{}}}],["apiproperty()@column()@updatedatecolumn",{"_index":1040,"title":{},"body":{"classes/ShoppingList.html":{}}}],["apiproperty()@column({length",{"_index":913,"title":{},"body":{"classes/RequestEntity.html":{}}}],["apiproperty()@column({name",{"_index":915,"title":{},"body":{"classes/RequestEntity.html":{}}}],["apiproperty()@column({nullable",{"_index":903,"title":{},"body":{"classes/RequestEntity.html":{}}}],["apiproperty()@column({type",{"_index":923,"title":{},"body":{"classes/RequestEntity.html":{}}}],["apiproperty({description",{"_index":170,"title":{},"body":{"classes/Article.html":{},"classes/ResponseTokenDto.html":{}}}],["apiproperty({enum",{"_index":1037,"title":{},"body":{"classes/ShoppingList.html":{}}}],["apiproperty({required",{"_index":663,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestFormDto.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{}}}],["apiproperty({type",{"_index":905,"title":{},"body":{"classes/RequestEntity.html":{},"classes/ShoppingList.html":{}}}],["apipropertyoptional",{"_index":31,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/UpdateUserDto.html":{}}}],["apipropertyoptional()@column({length",{"_index":18,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["apipropertyoptional({type",{"_index":918,"title":{},"body":{"classes/RequestEntity.html":{}}}],["apiquery",{"_index":866,"title":{},"body":{"controllers/RequestController.html":{}}}],["apiresponse",{"_index":469,"title":{},"body":{"controllers/CallController.html":{}}}],["apis",{"_index":1565,"title":{},"body":{"index.html":{}}}],["apitags",{"_index":208,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apitags('articles",{"_index":214,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["apitags('authentication",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('calls",{"_index":480,"title":{},"body":{"controllers/CallController.html":{}}}],["apitags('request",{"_index":874,"title":{},"body":{"controllers/RequestController.html":{}}}],["apitags('shopping",{"_index":1080,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["apitags('user",{"_index":1230,"title":{},"body":{"controllers/UserController.html":{}}}],["apiunauthorizedresponse",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["apiunauthorizedresponse({description",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.controller",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":39,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appear",{"_index":1491,"title":{},"body":{"index.html":{}}}],["applied",{"_index":559,"title":{},"body":{"classes/ConfigService.html":{}}}],["apply(loggermiddleware",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":58,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule.isdev",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule.port",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["appservice",{"_index":49,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["apt",{"_index":1470,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1675,"title":{},"body":{"license.html":{}}}],["array('upload",{"_index":315,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["art.articlecount",{"_index":991,"title":{},"body":{"injectables/RequestService.html":{}}}],["art.articleid",{"_index":989,"title":{},"body":{"injectables/RequestService.html":{}}}],["article",{"_index":104,"title":{"classes/Article.html":{}},"body":{"modules/AppModule.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["article.articledone",{"_index":1017,"title":{},"body":{"injectables/RequestService.html":{}}}],["article.dto",{"_index":210,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["article.dto.ts",{"_index":662,"title":{},"body":{"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["article.dto.ts:10",{"_index":665,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.entity",{"_index":212,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"modules/UsersModule.html":{}}}],["article.name",{"_index":237,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articlecount",{"_index":671,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestArticle.html":{},"classes/RequestFormDto.html":{}}}],["articledone",{"_index":804,"title":{},"body":{"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/ShoppingListFormDto.html":{}}}],["articlefillablefields",{"_index":185,"title":{"classes/ArticleFillableFields.html":{}},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"coverage.html":{}}}],["articleid",{"_index":672,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestArticle.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{}}}],["articles",{"_index":181,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"classes/CreateRequestArticleDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{}}}],["articles.controller",{"_index":1260,"title":{},"body":{"modules/UsersModule.html":{}}}],["articles.service",{"_index":211,"title":{},"body":{"controllers/ArticlesController.html":{},"modules/UsersModule.html":{}}}],["articles/article.entity",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["articles/articles.controller",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["articles/articles.service",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["articlescontroller",{"_index":86,"title":{"controllers/ArticlesController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["articlesrepository",{"_index":226,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articlesservice",{"_index":77,"title":{"injectables/ArticlesService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["articlestatus",{"_index":855,"title":{},"body":{"controllers/RequestController.html":{}}}],["articlestatusdto",{"_index":972,"title":{},"body":{"injectables/RequestService.html":{}}}],["articlestatusdto.articledone",{"_index":1018,"title":{},"body":{"injectables/RequestService.html":{}}}],["article})@apibadrequestresponse({description",{"_index":202,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["ask",{"_index":1499,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1628,"title":{},"body":{"license.html":{}}}],["async",{"_index":190,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["audio",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"classes/AudioFile.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"modules/DatabaseModule.html":{},"classes/UploadCallPayloadDto.html":{}}}],["audio/mp4",{"_index":310,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["audio/mpeg",{"_index":307,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["audio/ogg",{"_index":308,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["audio/wav",{"_index":309,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["audio_id",{"_index":1192,"title":{},"body":{"classes/UploadCallPayloadDto.html":{}}}],["audiofile",{"_index":125,"title":{"classes/AudioFile.html":{}},"body":{"modules/AppModule.html":{},"classes/AudioFile.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/CallController.html":{},"modules/DatabaseModule.html":{},"coverage.html":{}}}],["audiofile.isuploaded",{"_index":333,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["audiofile.path",{"_index":330,"title":{},"body":{"injectables/AudioStorageService.html":{},"controllers/CallController.html":{}}}],["audiofile.translated",{"_index":343,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["audiofile.uploaded",{"_index":332,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["audiorepo",{"_index":281,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["audiostoragecontroller",{"_index":90,"title":{"controllers/AudioStorageController.html":{}},"body":{"modules/AppModule.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"coverage.html":{}}}],["audiostoragemodule",{"_index":69,"title":{"modules/AudioStorageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/CallModule.html":{},"modules.html":{},"overview.html":{}}}],["audiostorageservice",{"_index":78,"title":{"injectables/AudioStorageService.html":{}},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/CallController.html":{},"coverage.html":{},"overview.html":{}}}],["auth",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":400,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":344,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authcontroller.logger.log(user",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticateduser",{"_index":1282,"title":{},"body":{"injectables/UsersService.html":{}}}],["authentication",{"_index":732,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["authguard",{"_index":728,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":729,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":70,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authors",{"_index":1664,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":369,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":171,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{}}}],["available",{"_index":1568,"title":{},"body":{"index.html":{},"modules.html":{}}}],["await",{"_index":243,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":318,"title":{},"body":{"injectables/AudioStorageService.html":{},"dependencies.html":{}}}],["backend_default",{"_index":1538,"title":{},"body":{"index.html":{}}}],["bad",{"_index":194,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["badrequestexception",{"_index":974,"title":{},"body":{"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["badrequestexception('already",{"_index":1152,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["badrequestexception('does",{"_index":1158,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["badrequestexception('this",{"_index":1094,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["based",{"_index":1612,"title":{},"body":{"index.html":{}}}],["basic",{"_index":1607,"title":{},"body":{"index.html":{}}}],["better",{"_index":1611,"title":{},"body":{"index.html":{}}}],["body",{"_index":204,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["boilerplate",{"_index":1603,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"classes/AudioFile.html":{},"injectables/AudioStorageService.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/ShoppingListFormDto.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UploadCallPayloadDto.html":{}}}],["bootstrap",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1681,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1678,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":295,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["build",{"_index":1604,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":1494,"title":{},"body":{"index.html":{},"license.html":{}}}],["call",{"_index":437,"title":{},"body":{"controllers/CallController.html":{},"injectables/JwtAuthGuard.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UploadCallPayloadDto.html":{},"coverage.html":{}}}],["call'})@isstring",{"_index":1176,"title":{},"body":{"classes/TranslatedCallPayloadDto.html":{}}}],["call.controller",{"_index":513,"title":{},"body":{"modules/CallModule.html":{}}}],["call.service",{"_index":514,"title":{},"body":{"modules/CallModule.html":{}}}],["call/call.module",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["callcontroller",{"_index":435,"title":{"controllers/CallController.html":{}},"body":{"controllers/CallController.html":{},"modules/CallModule.html":{},"coverage.html":{}}}],["called",{"_index":1505,"title":{},"body":{"index.html":{}}}],["callmodule",{"_index":71,"title":{"modules/CallModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CallModule.html":{},"modules.html":{},"overview.html":{}}}],["callservice",{"_index":511,"title":{"injectables/CallService.html":{}},"body":{"modules/CallModule.html":{},"injectables/CallService.html":{},"coverage.html":{},"overview.html":{}}}],["canactivate(context",{"_index":730,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canceled",{"_index":1458,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cascade",{"_index":907,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["catch",{"_index":336,"title":{},"body":{"injectables/AudioStorageService.html":{},"controllers/CallController.html":{}}}],["cb",{"_index":301,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["cb(new",{"_index":311,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["cb(null",{"_index":302,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["change",{"_index":1507,"title":{},"body":{"index.html":{}}}],["charge",{"_index":1624,"title":{},"body":{"license.html":{}}}],["checkuserexistence",{"_index":1297,"title":{},"body":{"injectables/UsersService.html":{}}}],["city",{"_index":10,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["claim",{"_index":1667,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/AudioFile.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/AudioFile.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"overview.html":{}}}],["cli",{"_index":1441,"title":{},"body":{"dependencies.html":{}}}],["client",{"_index":1468,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_audiostoragemodule",{"_index":268,"title":{},"body":{"modules/AudioStorageModule.html":{},"overview.html":{}}}],["cluster_audiostoragemodule_exports",{"_index":270,"title":{},"body":{"modules/AudioStorageModule.html":{},"overview.html":{}}}],["cluster_audiostoragemodule_imports",{"_index":269,"title":{},"body":{"modules/AudioStorageModule.html":{}}}],["cluster_audiostoragemodule_providers",{"_index":271,"title":{},"body":{"modules/AudioStorageModule.html":{}}}],["cluster_authmodule",{"_index":390,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":391,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":392,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_callmodule",{"_index":508,"title":{},"body":{"modules/CallModule.html":{},"overview.html":{}}}],["cluster_callmodule_imports",{"_index":509,"title":{},"body":{"modules/CallModule.html":{}}}],["cluster_callmodule_providers",{"_index":510,"title":{},"body":{"modules/CallModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":516,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":517,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_requestmodule",{"_index":943,"title":{},"body":{"modules/RequestModule.html":{},"overview.html":{}}}],["cluster_requestmodule_exports",{"_index":945,"title":{},"body":{"modules/RequestModule.html":{},"overview.html":{}}}],["cluster_requestmodule_imports",{"_index":944,"title":{},"body":{"modules/RequestModule.html":{}}}],["cluster_requestmodule_providers",{"_index":946,"title":{},"body":{"modules/RequestModule.html":{}}}],["cluster_shoppinglistmodule",{"_index":1105,"title":{},"body":{"modules/ShoppingListModule.html":{},"overview.html":{}}}],["cluster_shoppinglistmodule_exports",{"_index":1107,"title":{},"body":{"modules/ShoppingListModule.html":{},"overview.html":{}}}],["cluster_shoppinglistmodule_imports",{"_index":1106,"title":{},"body":{"modules/ShoppingListModule.html":{}}}],["cluster_shoppinglistmodule_providers",{"_index":1108,"title":{},"body":{"modules/ShoppingListModule.html":{}}}],["cluster_usermodule",{"_index":1250,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1251,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1252,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usersmodule",{"_index":1257,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1258,"title":{},"body":{"modules/UsersModule.html":{}}}],["cockroachdb",{"_index":630,"title":{},"body":{"classes/ConfigService.html":{}}}],["code",{"_index":838,"title":{},"body":{"controllers/RequestController.html":{}}}],["column",{"_index":28,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/AudioFile.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["column({default",{"_index":254,"title":{},"body":{"classes/AudioFile.html":{}}}],["column({length",{"_index":257,"title":{},"body":{"classes/AudioFile.html":{}}}],["column({name",{"_index":1205,"title":{},"body":{"classes/User.html":{}}}],["column({nullable",{"_index":260,"title":{},"body":{"classes/AudioFile.html":{}}}],["commands",{"_index":1518,"title":{},"body":{"index.html":{}}}],["common/decorators/roles.decorator",{"_index":976,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["common/decorators/user.decorator",{"_index":870,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["common/guards/jwt",{"_index":871,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["complete",{"_index":850,"title":{},"body":{"controllers/RequestController.html":{}}}],["completed",{"_index":1179,"title":{},"body":{"classes/TranslatedCallPayloadDto.html":{},"miscellaneous/enumerations.html":{}}}],["completed'})@isboolean",{"_index":1174,"title":{},"body":{"classes/TranslatedCallPayloadDto.html":{}}}],["compodoc/compodoc",{"_index":1356,"title":{},"body":{"dependencies.html":{}}}],["compose",{"_index":1545,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1008,"title":{},"body":{"injectables/RequestService.html":{},"license.html":{}}}],["conditions.requester",{"_index":1009,"title":{},"body":{"injectables/RequestService.html":{}}}],["conditions.zipcode",{"_index":1010,"title":{},"body":{"injectables/RequestService.html":{}}}],["config",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AudioStorageService.html":{},"modules/DatabaseModule.html":{}}}],["config.databasehost",{"_index":693,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.databasename",{"_index":696,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.databasepassword",{"_index":699,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.databaseport",{"_index":694,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.databasetype",{"_index":691,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.databaseusername",{"_index":698,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.get('api_port",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["config.isdev",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["config.isprod",{"_index":714,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.service",{"_index":519,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config.update",{"_index":321,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["config/config.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["config/config.service",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AudioStorageService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":72,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":92,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AudioStorageService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["configservice(`.env.${process.env.node_env",{"_index":522,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configservice.get('jwt_secret",{"_index":406,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configuration",{"_index":1476,"title":{},"body":{"index.html":{}}}],["configure",{"_index":1478,"title":{},"body":{"index.html":{}}}],["configure(consumer",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":1497,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1676,"title":{},"body":{"license.html":{}}}],["console",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(`${time",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":235,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":161,"title":{},"body":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["constructor(articlesrepository",{"_index":223,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["constructor(audiorepo",{"_index":279,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["constructor(authservice",{"_index":751,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(config",{"_index":162,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(filepath",{"_index":541,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(jwtservice",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"controllers/CallController.html":{},"controllers/UserController.html":{}}}],["constructor(requestrepository",{"_index":955,"title":{},"body":{"injectables/RequestService.html":{}}}],["constructor(shoppinglistrepository",{"_index":1122,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["constructor(userrepository",{"_index":1265,"title":{},"body":{"injectables/UsersService.html":{}}}],["consumer",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":175,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/CreateArticleDto.html":{}}}],["container",{"_index":1514,"title":{},"body":{"index.html":{}}}],["contract",{"_index":1672,"title":{},"body":{"license.html":{}}}],["contrib",{"_index":1472,"title":{},"body":{"index.html":{}}}],["controller",{"_index":38,"title":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/AudioStorageController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/AudioStorageController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('articles",{"_index":213,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["controller('audio",{"_index":267,"title":{},"body":{"controllers/AudioStorageController.html":{}}}],["controller('auth",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('call",{"_index":479,"title":{},"body":{"controllers/CallController.html":{}}}],["controller('request",{"_index":876,"title":{},"body":{"controllers/RequestController.html":{}}}],["controller('shopping",{"_index":1081,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["controller('user",{"_index":1229,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1614,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1642,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1504,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1617,"title":{},"body":{"license.html":{}}}],["cordova",{"_index":631,"title":{},"body":{"classes/ConfigService.html":{}}}],["coverage",{"_index":1322,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crash",{"_index":707,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["create",{"_index":221,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(createarticledto",{"_index":227,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["create(createrequestdto",{"_index":958,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{}}}],["create(payload",{"_index":1268,"title":{},"body":{"injectables/UsersService.html":{}}}],["createarticledto",{"_index":199,"title":{"classes/CreateArticleDto.html":{}},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["createarticledto.name",{"_index":238,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["created",{"_index":201,"title":{},"body":{"controllers/ArticlesController.html":{},"classes/AudioFile.html":{},"index.html":{}}}],["created_at",{"_index":899,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["createdatecolumn",{"_index":251,"title":{},"body":{"classes/AudioFile.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["createhmac('sha256",{"_index":1293,"title":{},"body":{"injectables/UsersService.html":{}}}],["createparamdecorator",{"_index":720,"title":{},"body":{"interfaces/IRequestUser.html":{}}}],["createparamdecorator((data",{"_index":722,"title":{},"body":{"interfaces/IRequestUser.html":{},"miscellaneous/variables.html":{}}}],["createquerybuilder('users",{"_index":1288,"title":{},"body":{"injectables/UsersService.html":{}}}],["createrequestarticledto",{"_index":668,"title":{"classes/CreateRequestArticleDto.html":{}},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestFormDto.html":{},"coverage.html":{}}}],["createrequestdto",{"_index":853,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["createrequestdto.additionalrequest",{"_index":995,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.articles",{"_index":985,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.articles.foreach(art",{"_index":986,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.city",{"_index":1001,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.deliverycomment",{"_index":999,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.number",{"_index":1005,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.phonenumber",{"_index":997,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.street",{"_index":1003,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.zipcode",{"_index":1007,"title":{},"body":{"injectables/RequestService.html":{}}}],["credentials",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["cross",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["crypto",{"_index":783,"title":{},"body":{"classes/PasswordTransformer.html":{},"dependencies.html":{}}}],["crypto.createhmac('sha256",{"_index":785,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["ctrl",{"_index":1493,"title":{},"body":{"index.html":{}}}],["current",{"_index":1593,"title":{},"body":{"index.html":{}}}],["custom",{"_index":731,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["d",{"_index":1525,"title":{},"body":{"index.html":{}}}],["damages",{"_index":1668,"title":{},"body":{"license.html":{}}}],["database",{"_index":695,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["database/database.module",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["database_host=localhost",{"_index":1508,"title":{},"body":{"index.html":{}}}],["database_port=54321",{"_index":1509,"title":{},"body":{"index.html":{}}}],["database_type",{"_index":628,"title":{},"body":{"classes/ConfigService.html":{}}}],["database_type=postgresdatabase_host=dbdatabase_port=5432database_username=usernamedatabase_password=secretpassworddatabase_name=dbname",{"_index":1502,"title":{},"body":{"index.html":{}}}],["databasehost",{"_index":530,"title":{},"body":{"classes/ConfigService.html":{}}}],["databasemodule",{"_index":73,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databasename",{"_index":534,"title":{},"body":{"classes/ConfigService.html":{}}}],["databasepassword",{"_index":533,"title":{},"body":{"classes/ConfigService.html":{}}}],["databaseport",{"_index":531,"title":{},"body":{"classes/ConfigService.html":{}}}],["databasetype",{"_index":529,"title":{},"body":{"classes/ConfigService.html":{}}}],["databaseusername",{"_index":532,"title":{},"body":{"classes/ConfigService.html":{}}}],["date",{"_index":250,"title":{},"body":{"classes/AudioFile.html":{},"injectables/AudioStorageService.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UploadCallPayloadDto.html":{},"miscellaneous/variables.html":{}}}],["date().tojson",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date.now().tostring",{"_index":303,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["date.replace('t",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db",{"_index":1546,"title":{},"body":{"index.html":{}}}],["dbname",{"_index":1489,"title":{},"body":{"index.html":{}}}],["deal",{"_index":1630,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1677,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"classes/Article.html":{},"controllers/ArticlesController.html":{},"classes/AudioFile.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":264,"title":{},"body":{"classes/AudioFile.html":{},"injectables/AudioStorageService.html":{},"classes/ConfigService.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":627,"title":{},"body":{"classes/ConfigService.html":{}}}],["default(true",{"_index":647,"title":{},"body":{"classes/ConfigService.html":{}}}],["defaults",{"_index":1548,"title":{},"body":{"index.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ShoppingListController.html":{}}}],["delete(':shoppinglistid/:requestid",{"_index":1096,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["delete(':shoppinglistid/:requestid')@apiokresponse({description",{"_index":1061,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["deleterequestfromlist",{"_index":1047,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["deleterequestfromlist(shoppinglistid",{"_index":1060,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["deliverycomment",{"_index":682,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{}}}],["dependencies",{"_index":60,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy:local",{"_index":1552,"title":{},"body":{"index.html":{}}}],["describe",{"_index":1566,"title":{},"body":{"index.html":{}}}],["description",{"_index":182,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UploadCallPayloadDto.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":1580,"title":{},"body":{"index.html":{}}}],["development",{"_index":605,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["directly",{"_index":702,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["directory",{"_index":1585,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1638,"title":{},"body":{"license.html":{}}}],["doc",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["docker",{"_index":1466,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1579,"title":{},"body":{"index.html":{}}}],["document",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documentbuilder",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dotenv",{"_index":597,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["dotenvparseoutput",{"_index":544,"title":{},"body":{"classes/ConfigService.html":{}}}],["download",{"_index":438,"title":{},"body":{"controllers/CallController.html":{}}}],["download(req",{"_index":441,"title":{},"body":{"controllers/CallController.html":{}}}],["dpage/pgadmin4",{"_index":1542,"title":{},"body":{"index.html":{}}}],["dto/create",{"_index":209,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["dto/request",{"_index":868,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["dto/response",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/shopping",{"_index":1079,"title":{},"body":{"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["dto/translated",{"_index":478,"title":{},"body":{"controllers/CallController.html":{}}}],["dto/update",{"_index":1227,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["dto/upload",{"_index":475,"title":{},"body":{"controllers/CallController.html":{}}}],["e",{"_index":1529,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":1561,"title":{},"body":{"index.html":{}}}],["each",{"_index":565,"title":{},"body":{"classes/ConfigService.html":{}}}],["edit",{"_index":1101,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["editrequestdto",{"_index":1278,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.city",{"_index":1305,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.firstname",{"_index":1313,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.lastname",{"_index":1315,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.number",{"_index":1309,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.role",{"_index":1317,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.street",{"_index":1307,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.telephone",{"_index":1319,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.zipcode",{"_index":1311,"title":{},"body":{"injectables/UsersService.html":{}}}],["email",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{}}}],["encrypted",{"_index":1487,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":1569,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":552,"title":{},"body":{"classes/ConfigService.html":{}}}],["entities",{"_index":701,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["entity",{"_index":179,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/AudioFile.html":{},"classes/RequestArticle.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["entity.requester",{"_index":886,"title":{},"body":{"controllers/RequestController.html":{}}}],["enum",{"_index":797,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["enumerations",{"_index":1449,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1389,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["env.development",{"_index":1506,"title":{},"body":{"index.html":{}}}],["envconfig",{"_index":524,"title":{},"body":{"classes/ConfigService.html":{}}}],["environment",{"_index":566,"title":{},"body":{"classes/ConfigService.html":{}}}],["envvarsschema",{"_index":620,"title":{},"body":{"classes/ConfigService.html":{}}}],["err",{"_index":743,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":314,"title":{},"body":{"injectables/AudioStorageService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{}}}],["error('file",{"_index":312,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["error(`config",{"_index":660,"title":{},"body":{"classes/ConfigService.html":{}}}],["error.message",{"_index":500,"title":{},"body":{"controllers/CallController.html":{},"classes/ConfigService.html":{}}}],["establish",{"_index":737,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["etc",{"_index":1576,"title":{},"body":{"index.html":{}}}],["event",{"_index":1663,"title":{},"body":{"license.html":{}}}],["example",{"_index":735,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"classes/RegisterPayload.html":{},"index.html":{}}}],["example.sql",{"_index":1584,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":262,"title":{},"body":{"classes/AudioFile.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["executes",{"_index":1553,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":727,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exist",{"_index":892,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{}}}],["existing",{"_index":192,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["exists",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["exit",{"_index":1495,"title":{},"body":{"index.html":{}}}],["exp",{"_index":746,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["expiration",{"_index":1026,"title":{},"body":{"classes/ResponseTokenDto.html":{},"index.html":{}}}],["expiresin",{"_index":408,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ResponseTokenDto.html":{}}}],["export",{"_index":33,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":473,"title":{},"body":{"controllers/CallController.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":680,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["externals",{"_index":1443,"title":{},"body":{"dependencies.html":{}}}],["extractjwt",{"_index":756,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":762,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":329,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["false",{"_index":255,"title":{},"body":{"classes/AudioFile.html":{},"injectables/AudioStorageService.html":{},"modules/DatabaseModule.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/ShoppingListFormDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["false})@column({length",{"_index":1210,"title":{},"body":{"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["file'})@isstring",{"_index":1194,"title":{},"body":{"classes/UploadCallPayloadDto.html":{}}}],["file.mimetype",{"_index":306,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["file.originalname",{"_index":304,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["fileentry",{"_index":496,"title":{},"body":{"controllers/CallController.html":{}}}],["filefilter",{"_index":305,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["fileinterceptor",{"_index":471,"title":{},"body":{"controllers/CallController.html":{}}}],["filepath",{"_index":543,"title":{},"body":{"classes/ConfigService.html":{}}}],["files",{"_index":1629,"title":{},"body":{"license.html":{}}}],["filesystem",{"_index":1195,"title":{},"body":{"classes/UploadCallPayloadDto.html":{}}}],["findall",{"_index":189,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["findone",{"_index":1048,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["findone(@param('id",{"_index":1234,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":241,"title":{},"body":{"injectables/ArticlesService.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["findrequest",{"_index":951,"title":{},"body":{"injectables/RequestService.html":{}}}],["findrequest(id",{"_index":960,"title":{},"body":{"injectables/RequestService.html":{}}}],["findshoppinglist",{"_index":1049,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["findshoppinglist(id",{"_index":1067,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["finished",{"_index":1168,"title":{},"body":{"classes/TranslatedCallPayloadDto.html":{},"classes/UploadCallPayloadDto.html":{}}}],["finished'})@isboolean",{"_index":1196,"title":{},"body":{"classes/UploadCallPayloadDto.html":{}}}],["finished'})@isstring",{"_index":1171,"title":{},"body":{"classes/TranslatedCallPayloadDto.html":{}}}],["firstname",{"_index":788,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["fitness",{"_index":1659,"title":{},"body":{"license.html":{}}}],["fixtures",{"_index":1590,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1477,"title":{},"body":{"index.html":{}}}],["following",{"_index":1517,"title":{},"body":{"index.html":{},"license.html":{}}}],["forbidden",{"_index":1237,"title":{},"body":{"controllers/UserController.html":{}}}],["forbidden'})@apiparam({name",{"_index":1223,"title":{},"body":{"controllers/UserController.html":{}}}],["forbiddenexception",{"_index":1077,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["forbiddenexception('you",{"_index":1240,"title":{},"body":{"controllers/UserController.html":{}}}],["form",{"_index":1137,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["form.dto",{"_index":869,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["form.dto.ts",{"_index":670,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestFormDto.html":{},"classes/ShoppingListFormDto.html":{},"coverage.html":{}}}],["form.dto.ts:10",{"_index":677,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/ShoppingListFormDto.html":{}}}],["form.dto.ts:17",{"_index":674,"title":{},"body":{"classes/CreateRequestArticleDto.html":{}}}],["form.dto.ts:18",{"_index":1104,"title":{},"body":{"classes/ShoppingListFormDto.html":{}}}],["form.dto.ts:25",{"_index":817,"title":{},"body":{"classes/RequestArticleStatusDto.html":{}}}],["form.dto.ts:26",{"_index":940,"title":{},"body":{"classes/RequestFormDto.html":{}}}],["form.dto.ts:29",{"_index":939,"title":{},"body":{"classes/RequestFormDto.html":{}}}],["form.dto.ts:31",{"_index":941,"title":{},"body":{"classes/RequestFormDto.html":{}}}],["form.dto.ts:33",{"_index":942,"title":{},"body":{"classes/RequestFormDto.html":{}}}],["format",{"_index":313,"title":{},"body":{"injectables/AudioStorageService.html":{},"index.html":{}}}],["forroutes",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":845,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["found'})@apibadrequestresponse({description",{"_index":1218,"title":{},"body":{"controllers/UserController.html":{}}}],["found'})@apiforbiddenresponse({description",{"_index":1065,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["free",{"_index":1623,"title":{},"body":{"license.html":{}}}],["from(value",{"_index":779,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["from.requests",{"_index":1161,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["from.requests.foreach(reqid",{"_index":1162,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["from.status",{"_index":1160,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["fs",{"_index":599,"title":{},"body":{"classes/ConfigService.html":{}}}],["function",{"_index":1326,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1461,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1645,"title":{},"body":{"license.html":{}}}],["generatetoken",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetoken(user",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["generic",{"_index":547,"title":{},"body":{"classes/ConfigService.html":{}}}],["get(':id",{"_index":1085,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apiokresponse({description",{"_index":1063,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["get(':requestid",{"_index":888,"title":{},"body":{"controllers/RequestController.html":{}}}],["get(':requestid')@apiokresponse({description",{"_index":842,"title":{},"body":{"controllers/RequestController.html":{}}}],["get('download/:id",{"_index":481,"title":{},"body":{"controllers/CallController.html":{}}}],["get('download/:id')@apiokresponse({description",{"_index":442,"title":{},"body":{"controllers/CallController.html":{}}}],["get('upload",{"_index":493,"title":{},"body":{"controllers/CallController.html":{}}}],["get('upload')@apiresponse({status",{"_index":449,"title":{},"body":{"controllers/CallController.html":{}}}],["get('webhook",{"_index":487,"title":{},"body":{"controllers/CallController.html":{}}}],["get('webhook')@apiresponse({status",{"_index":461,"title":{},"body":{"controllers/CallController.html":{}}}],["get()@apiokresponse({description",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["get(id",{"_index":962,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["get(key",{"_index":545,"title":{},"body":{"classes/ConfigService.html":{}}}],["getall",{"_index":825,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["getall(onlymine",{"_index":830,"title":{},"body":{"controllers/RequestController.html":{}}}],["getall(user",{"_index":964,"title":{},"body":{"injectables/RequestService.html":{}}}],["getallbyuser",{"_index":1119,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["getallbyuser(userid",{"_index":1129,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["getbyemail",{"_index":1263,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyemail(email",{"_index":1272,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyemailandpass",{"_index":1264,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyemailandpass(email",{"_index":1274,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyid",{"_index":276,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["getbyid(id",{"_index":283,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["getdatabasehost",{"_index":574,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdatabasename",{"_index":582,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdatabasepassword",{"_index":580,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdatabaseport",{"_index":576,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdatabasetype",{"_index":572,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdatabaseusername",{"_index":578,"title":{},"body":{"classes/ConfigService.html":{}}}],["getgoogleauthclientid",{"_index":586,"title":{},"body":{"classes/ConfigService.html":{}}}],["getgoogleauthclientsecret",{"_index":588,"title":{},"body":{"classes/ConfigService.html":{}}}],["getgoogleauthredirecturi",{"_index":590,"title":{},"body":{"classes/ConfigService.html":{}}}],["getisdev",{"_index":562,"title":{},"body":{"classes/ConfigService.html":{}}}],["getisprod",{"_index":568,"title":{},"body":{"classes/ConfigService.html":{}}}],["getistest",{"_index":570,"title":{},"body":{"classes/ConfigService.html":{}}}],["getjwtsecret",{"_index":584,"title":{},"body":{"classes/ConfigService.html":{}}}],["getone",{"_index":1291,"title":{},"body":{"injectables/UsersService.html":{}}}],["getsinglerequest",{"_index":826,"title":{},"body":{"controllers/RequestController.html":{}}}],["getsinglerequest(requestid",{"_index":841,"title":{},"body":{"controllers/RequestController.html":{}}}],["getter",{"_index":548,"title":{},"body":{"classes/ConfigService.html":{}}}],["getters",{"_index":564,"title":{},"body":{"classes/ConfigService.html":{}}}],["getting",{"_index":1463,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettwillioaccountssid",{"_index":592,"title":{},"body":{"classes/ConfigService.html":{}}}],["gettwillioauthtoken",{"_index":594,"title":{},"body":{"classes/ConfigService.html":{}}}],["getuserlists",{"_index":1050,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["getuserlists(@requser",{"_index":1083,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["getuserlists(user",{"_index":1069,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["git",{"_index":1588,"title":{},"body":{"index.html":{}}}],["gives",{"_index":1573,"title":{},"body":{"index.html":{}}}],["glob",{"_index":704,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["googleauthclientid",{"_index":536,"title":{},"body":{"classes/ConfigService.html":{}}}],["googleauthclientsecret",{"_index":537,"title":{},"body":{"classes/ConfigService.html":{}}}],["googleauthredirecturi",{"_index":538,"title":{},"body":{"classes/ConfigService.html":{}}}],["granted",{"_index":1622,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1682,"title":{},"body":{"modules.html":{}}}],["great",{"_index":1600,"title":{},"body":{"index.html":{}}}],["guard",{"_index":872,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["guard.ts",{"_index":726,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["handlerequest(err",{"_index":742,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hashing",{"_index":1594,"title":{},"body":{"index.html":{}}}],["hbs",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["headers",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helmet",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["helper",{"_index":1189,"title":{},"body":{"classes/UpdateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["here",{"_index":734,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hereby",{"_index":1621,"title":{},"body":{"license.html":{}}}],["high",{"_index":934,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["holders",{"_index":1665,"title":{},"body":{"license.html":{}}}],["host",{"_index":692,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["http://localhost:3000/api/docs",{"_index":1571,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com/middleware",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/nestjs/nest/issues/711",{"_index":708,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["httpstatus",{"_index":463,"title":{},"body":{"controllers/CallController.html":{}}}],["httpstatus.accepted",{"_index":489,"title":{},"body":{"controllers/CallController.html":{}}}],["httpstatus.bad_request",{"_index":491,"title":{},"body":{"controllers/CallController.html":{}}}],["httpstatus.unauthorized",{"_index":492,"title":{},"body":{"controllers/CallController.html":{}}}],["husky",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["iat",{"_index":747,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["id",{"_index":169,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"injectables/AudioStorageService.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/CreateRequestArticleDto.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":1323,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":821,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/ShoppingListFormDto.html":{}}}],["ignore",{"_index":740,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["ignored",{"_index":1587,"title":{},"body":{"index.html":{}}}],["ignoreexpiration",{"_index":763,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1524,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":1597,"title":{},"body":{"index.html":{}}}],["implements",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"classes/PasswordTransformer.html":{}}}],["implicit",{"_index":741,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["implied",{"_index":1655,"title":{},"body":{"license.html":{}}}],["import",{"_index":27,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["importing",{"_index":700,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["imports",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":1650,"title":{},"body":{"license.html":{}}}],["including",{"_index":558,"title":{},"body":{"classes/ConfigService.html":{},"controllers/RequestController.html":{},"license.html":{}}}],["incremented",{"_index":172,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":926,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["init_upload",{"_index":439,"title":{},"body":{"controllers/CallController.html":{}}}],["inject",{"_index":410,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["injectable",{"_index":158,"title":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"injectables/AuthService.html":{},"injectables/CallService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"injectables/AuthService.html":{},"injectables/CallService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":159,"title":{},"body":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"injectables/AuthService.html":{},"injectables/CallService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":232,"title":{},"body":{"injectables/ArticlesService.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(article",{"_index":233,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["injectrepository(audiofile",{"_index":320,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["injectrepository(requestentity",{"_index":978,"title":{},"body":{"injectables/RequestService.html":{}}}],["injectrepository(shoppinglist",{"_index":1139,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["injectrepository(user",{"_index":1283,"title":{},"body":{"injectables/UsersService.html":{}}}],["insertnewshoppinglist",{"_index":1051,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["insertnewshoppinglist(createrequestdto",{"_index":1071,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["insertone",{"_index":191,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["insertone(@body",{"_index":217,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["insertone(createarticledto",{"_index":198,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["insertrequestwitharticles",{"_index":827,"title":{},"body":{"controllers/RequestController.html":{}}}],["insertrequestwitharticles(createrequestdto",{"_index":848,"title":{},"body":{"controllers/RequestController.html":{}}}],["install",{"_index":1471,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1474,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1606,"title":{},"body":{"index.html":{}}}],["integer",{"_index":183,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/CallController.html":{},"classes/CreateRequestArticleDto.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"controllers/UserController.html":{}}}],["integer'})@column",{"_index":921,"title":{},"body":{"classes/RequestEntity.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListRequest.html":{}}}],["integer'})@primarygeneratedcolumn",{"_index":173,"title":{},"body":{"classes/Article.html":{},"classes/RequestEntity.html":{},"classes/ShoppingList.html":{}}}],["integer'})@redirect('https://google.com",{"_index":445,"title":{},"body":{"controllers/CallController.html":{}}}],["integrated",{"_index":1567,"title":{},"body":{"index.html":{}}}],["interface",{"_index":716,"title":{"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{}},"body":{"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["interfaces",{"_index":718,"title":{},"body":{"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"overview.html":{}}}],["irequestuser",{"_index":717,"title":{"interfaces/IRequestUser.html":{}},"body":{"interfaces/IRequestUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isboolean",{"_index":1178,"title":{},"body":{"classes/TranslatedCallPayloadDto.html":{},"classes/UploadCallPayloadDto.html":{}}}],["isdev",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["isemail",{"_index":772,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["isexpired",{"_index":766,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["isnotempty",{"_index":773,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{}}}],["isprod",{"_index":527,"title":{},"body":{"classes/ConfigService.html":{}}}],["isstring",{"_index":666,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UploadCallPayloadDto.html":{}}}],["istest",{"_index":528,"title":{},"body":{"classes/ConfigService.html":{}}}],["isuploaded",{"_index":247,"title":{},"body":{"classes/AudioFile.html":{}}}],["it's",{"_index":1586,"title":{},"body":{"index.html":{}}}],["items",{"_index":673,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestFormDto.html":{}}}],["javascript",{"_index":556,"title":{},"body":{"classes/ConfigService.html":{}}}],["jest",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["joi",{"_index":600,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["joi.boolean",{"_index":646,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.number",{"_index":644,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.object",{"_index":622,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.objectschema",{"_index":621,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.string",{"_index":624,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.string().required",{"_index":653,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.validate",{"_index":659,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.validationoptions",{"_index":656,"title":{},"body":{"classes/ConfigService.html":{}}}],["join",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["join(__dirname",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["json",{"_index":1572,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":402,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/ResponseTokenDto.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy",{"_index":399,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_secret=jwt_awesome_key",{"_index":1503,"title":{},"body":{"index.html":{}}}],["jwtauthguard",{"_index":724,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":761,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":395,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":403,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":744,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtsecret",{"_index":535,"title":{},"body":{"classes/ConfigService.html":{}}}],["jwtservice",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":393,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":549,"title":{},"body":{"classes/ConfigService.html":{}}}],["key(request",{"_index":300,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["kind",{"_index":1654,"title":{},"body":{"license.html":{}}}],["l",{"_index":1490,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":789,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["legend",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":34,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/AudioFile.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["liability",{"_index":1669,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1666,"title":{},"body":{"license.html":{}}}],["license",{"_index":1615,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":1633,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1656,"title":{},"body":{"license.html":{}}}],["line",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["list",{"_index":676,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["list'})@apinotfoundresponse({description",{"_index":1057,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/ShoppingListModule.html":{}}}],["list.controller.ts",{"_index":1045,"title":{},"body":{"controllers/ShoppingListController.html":{},"coverage.html":{}}}],["list.controller.ts:116",{"_index":1062,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:128",{"_index":1068,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:47",{"_index":1070,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:55",{"_index":1066,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:68",{"_index":1073,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:80",{"_index":1076,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:94",{"_index":1058,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.entity",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{}}}],["list.entity.ts",{"_index":1030,"title":{},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"coverage.html":{}}}],["list.entity.ts:19",{"_index":1034,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:23",{"_index":1035,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:28",{"_index":1033,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:33",{"_index":1041,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:45",{"_index":1039,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:53",{"_index":1036,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:57",{"_index":1103,"title":{},"body":{"classes/ShoppingListFillableFields.html":{}}}],["list.module",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["list.module.ts",{"_index":1109,"title":{},"body":{"modules/ShoppingListModule.html":{}}}],["list.service",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{}}}],["list.service.ts",{"_index":1118,"title":{},"body":{"injectables/ShoppingListService.html":{},"coverage.html":{}}}],["list.service.ts:20",{"_index":1123,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:27",{"_index":1128,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:37",{"_index":1127,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:47",{"_index":1130,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:54",{"_index":1136,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:59",{"_index":1126,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:70",{"_index":1134,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:84",{"_index":1132,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["lists",{"_index":1102,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["loader",{"_index":1428,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":1515,"title":{},"body":{"index.html":{}}}],["logger",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["logger('auth",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger('request",{"_index":877,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["logger('shoppinglist",{"_index":1082,"title":{},"body":{"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["logger('user",{"_index":1231,"title":{},"body":{"controllers/UserController.html":{}}}],["loggermiddleware",{"_index":1338,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":713,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["logic",{"_index":733,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["login",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["login(@body",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(credentials",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["login.payload",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["loginpayload",{"_index":350,"title":{"classes/LoginPayload.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"coverage.html":{}}}],["look",{"_index":1578,"title":{},"body":{"index.html":{}}}],["low",{"_index":916,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["main/models/address.model",{"_index":678,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["manytoone",{"_index":813,"title":{},"body":{"classes/RequestArticle.html":{},"classes/ShoppingListRequest.html":{}}}],["manytoone(undefined",{"_index":811,"title":{},"body":{"classes/RequestArticle.html":{},"classes/ShoppingListRequest.html":{}}}],["mariadb",{"_index":632,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["mark",{"_index":1173,"title":{},"body":{"classes/TranslatedCallPayloadDto.html":{},"classes/UploadCallPayloadDto.html":{}}}],["markarticleasdone",{"_index":828,"title":{},"body":{"controllers/RequestController.html":{}}}],["markarticleasdone(requestid",{"_index":854,"title":{},"body":{"controllers/RequestController.html":{}}}],["matching",{"_index":36,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":933,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["merchantability",{"_index":1658,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1636,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":1416,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["migrations",{"_index":710,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["minlength",{"_index":774,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["minlength(5",{"_index":775,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["miscellaneous",{"_index":1448,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1616,"title":{},"body":{"license.html":{}}}],["mode",{"_index":1557,"title":{},"body":{"index.html":{}}}],["modify",{"_index":1635,"title":{},"body":{"license.html":{}}}],["module",{"_index":57,"title":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":59,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":633,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{},"index.html":{}}}],["mongoose",{"_index":1605,"title":{},"body":{"index.html":{}}}],["more",{"_index":649,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["mount",{"_index":1549,"title":{},"body":{"index.html":{}}}],["mssql",{"_index":634,"title":{},"body":{"classes/ConfigService.html":{}}}],["multer",{"_index":292,"title":{},"body":{"injectables/AudioStorageService.html":{},"dependencies.html":{}}}],["multers3",{"_index":293,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["mysql",{"_index":635,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["name",{"_index":165,"title":{},"body":{"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"classes/RequestArticle.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["name=pgdata",{"_index":1521,"title":{},"body":{"index.html":{}}}],["native",{"_index":640,"title":{},"body":{"classes/ConfigService.html":{}}}],["nativescript",{"_index":636,"title":{},"body":{"classes/ConfigService.html":{}}}],["nearbuy",{"_index":1526,"title":{},"body":{"index.html":{}}}],["needed",{"_index":553,"title":{},"body":{"classes/ConfigService.html":{}}}],["nestjs",{"_index":1602,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1359,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":396,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":398,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":472,"title":{},"body":{"controllers/CallController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":1364,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"injectables/ArticlesService.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"modules/ShoppingListModule.html":{},"injectables/ShoppingListService.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestmodule",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["network",{"_index":1537,"title":{},"body":{"index.html":{}}}],["new",{"_index":236,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["newarticle",{"_index":987,"title":{},"body":{"injectables/RequestService.html":{}}}],["newarticle.articlecount",{"_index":990,"title":{},"body":{"injectables/RequestService.html":{}}}],["newarticle.articledone",{"_index":992,"title":{},"body":{"injectables/RequestService.html":{}}}],["newarticle.articleid",{"_index":988,"title":{},"body":{"injectables/RequestService.html":{}}}],["newaudiofile",{"_index":338,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["newaudiofile.id",{"_index":341,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["newrequest",{"_index":1149,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["newrequest.requestid",{"_index":1150,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["newuser",{"_index":1301,"title":{},"body":{"injectables/UsersService.html":{}}}],["next",{"_index":1500,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["nextfunction",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":1430,"title":{},"body":{"dependencies.html":{}}}],["node_env",{"_index":623,"title":{},"body":{"classes/ConfigService.html":{}}}],["nodejs",{"_index":1465,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["none",{"_index":1460,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noninfringement",{"_index":1662,"title":{},"body":{"license.html":{}}}],["notacceptableexception",{"_index":1279,"title":{},"body":{"injectables/UsersService.html":{}}}],["note",{"_index":1511,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":861,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('shopping",{"_index":1141,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["notfoundexception('this",{"_index":891,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["notfoundexception('user",{"_index":1285,"title":{},"body":{"injectables/UsersService.html":{}}}],["notice",{"_index":1648,"title":{},"body":{"license.html":{}}}],["nullable",{"_index":20,"title":{},"body":{"classes/AddressModel.html":{},"classes/AudioFile.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["number",{"_index":11,"title":{},"body":{"classes/AddressModel.html":{},"modules/AppModule.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/AudioFile.html":{},"injectables/AudioStorageService.html":{},"controllers/CallController.html":{},"classes/CreateRequestArticleDto.html":{},"interfaces/JwtPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{}}}],["number(articleid",{"_index":1016,"title":{},"body":{"injectables/RequestService.html":{}}}],["number(configservice.get('jwt_expiration_time",{"_index":409,"title":{},"body":{"modules/AuthModule.html":{}}}],["number(requestid",{"_index":1154,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["number(this.configservice.get('jwt_expiration_time",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["number(this.envconfig.database_port",{"_index":610,"title":{},"body":{"classes/ConfigService.html":{}}}],["object",{"_index":557,"title":{},"body":{"classes/ConfigService.html":{}}}],["obtaining",{"_index":1626,"title":{},"body":{"license.html":{}}}],["one",{"_index":1610,"title":{},"body":{"index.html":{}}}],["onetomany",{"_index":931,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["ongoing",{"_index":1456,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onlymine",{"_index":832,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["optional",{"_index":9,"title":{},"body":{"classes/AddressModel.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oracle",{"_index":637,"title":{},"body":{"classes/ConfigService.html":{}}}],["ormconfig.json",{"_index":1583,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1674,"title":{},"body":{"license.html":{}}}],["out",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["over",{"_index":1481,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1683,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1031,"title":{},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"injectables/ShoppingListService.html":{},"index.html":{}}}],["ownerthen",{"_index":1492,"title":{},"body":{"index.html":{}}}],["p",{"_index":1527,"title":{},"body":{"index.html":{}}}],["package",{"_index":1355,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":466,"title":{},"body":{"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["param('articleid",{"_index":896,"title":{},"body":{"controllers/RequestController.html":{}}}],["param('id",{"_index":483,"title":{},"body":{"controllers/CallController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["param('requestid",{"_index":889,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["param('shoppinglistid",{"_index":1091,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["parameters",{"_index":164,"title":{},"body":{"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parse",{"_index":596,"title":{},"body":{"classes/ConfigService.html":{}}}],["parse(readfilesync(filepath",{"_index":601,"title":{},"body":{"classes/ConfigService.html":{}}}],["parse(request.url).path",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parsedconfig",{"_index":561,"title":{},"body":{"classes/ConfigService.html":{}}}],["particular",{"_index":1660,"title":{},"body":{"license.html":{}}}],["passhash",{"_index":1292,"title":{},"body":{"injectables/UsersService.html":{}}}],["passport",{"_index":758,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["passportmodule",{"_index":397,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register({defaultstrategy",{"_index":401,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":755,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":759,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passreqtocallback",{"_index":765,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["password).digest('hex",{"_index":1294,"title":{},"body":{"injectables/UsersService.html":{}}}],["password.transformer",{"_index":1212,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["passwordtransformer",{"_index":776,"title":{"classes/PasswordTransformer.html":{}},"body":{"classes/PasswordTransformer.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"coverage.html":{}}}],["path",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"classes/AudioFile.html":{},"modules/DatabaseModule.html":{},"classes/UploadCallPayloadDto.html":{}}}],["paths",{"_index":1433,"title":{},"body":{"dependencies.html":{}}}],["pattern",{"_index":705,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["payload",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["payload.dto",{"_index":476,"title":{},"body":{"controllers/CallController.html":{}}}],["payload.dto.ts",{"_index":1167,"title":{},"body":{"classes/TranslatedCallPayloadDto.html":{},"classes/UploadCallPayloadDto.html":{},"coverage.html":{}}}],["payload.dto.ts:10",{"_index":1177,"title":{},"body":{"classes/TranslatedCallPayloadDto.html":{},"classes/UploadCallPayloadDto.html":{}}}],["payload.dto.ts:17",{"_index":1172,"title":{},"body":{"classes/TranslatedCallPayloadDto.html":{},"classes/UploadCallPayloadDto.html":{}}}],["payload.dto.ts:24",{"_index":1175,"title":{},"body":{"classes/TranslatedCallPayloadDto.html":{},"classes/UploadCallPayloadDto.html":{}}}],["payload.dto.ts:31",{"_index":1197,"title":{},"body":{"classes/UploadCallPayloadDto.html":{}}}],["peer",{"_index":1445,"title":{},"body":{"dependencies.html":{}}}],["permission",{"_index":1620,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1643,"title":{},"body":{"license.html":{}}}],["person",{"_index":1625,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1644,"title":{},"body":{"license.html":{}}}],["pg",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["pgadmin",{"_index":1544,"title":{},"body":{"index.html":{}}}],["pgadmin_default_email=user@domain.com",{"_index":1540,"title":{},"body":{"index.html":{}}}],["pgadmin_default_password=supersecret",{"_index":1541,"title":{},"body":{"index.html":{}}}],["pgdata:/var/lib/postgresql/data",{"_index":1533,"title":{},"body":{"index.html":{}}}],["phonenumber",{"_index":683,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{}}}],["please",{"_index":1577,"title":{},"body":{"index.html":{}}}],["populaterequest",{"_index":952,"title":{},"body":{"injectables/RequestService.html":{}}}],["populaterequest(request",{"_index":966,"title":{},"body":{"injectables/RequestService.html":{}}}],["populateshoppinglist",{"_index":1120,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["populateshoppinglist(from",{"_index":1131,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["port",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{}}}],["portions",{"_index":1652,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":1574,"title":{},"body":{"index.html":{}}}],["post",{"_index":205,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["post('login",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apiokresponse({description",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apicreatedresponse({description",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload/:id",{"_index":495,"title":{},"body":{"controllers/CallController.html":{}}}],["post('upload/:id')@apiresponse({status",{"_index":459,"title":{},"body":{"controllers/CallController.html":{}}}],["post()@apicreatedresponse({description",{"_index":200,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/ShoppingListController.html":{}}}],["postgis",{"_index":1523,"title":{},"body":{"index.html":{}}}],["postgis/postgis:12",{"_index":1534,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":638,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["postgres_db=dbname",{"_index":1531,"title":{},"body":{"index.html":{}}}],["postgres_password=secretpassword",{"_index":1530,"title":{},"body":{"index.html":{}}}],["postgres_user=username",{"_index":1532,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":1467,"title":{},"body":{"index.html":{}}}],["preconfigured",{"_index":1591,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":188,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AudioStorageController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["prettier",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["primarygeneratedcolumn",{"_index":180,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/AudioFile.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["primarygeneratedcolumn()@apihideproperty",{"_index":1112,"title":{},"body":{"classes/ShoppingListRequest.html":{}}}],["priority",{"_index":900,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["private",{"_index":234,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["process.env.port",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":606,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["project",{"_index":1550,"title":{},"body":{"index.html":{}}}],["promise",{"_index":197,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/AudioFile.html":{},"injectables/AudioStorageService.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["provide",{"_index":520,"title":{},"body":{"modules/ConfigModule.html":{}}}],["provided",{"_index":1300,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{},"license.html":{}}}],["providers",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["provision",{"_index":626,"title":{},"body":{"classes/ConfigService.html":{}}}],["psql",{"_index":1485,"title":{},"body":{"index.html":{}}}],["public",{"_index":298,"title":{},"body":{"injectables/AudioStorageService.html":{},"classes/ConfigService.html":{}}}],["publish",{"_index":1637,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1661,"title":{},"body":{"license.html":{}}}],["put",{"_index":468,"title":{},"body":{"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["put(':id",{"_index":1088,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["put(':id')@apiokresponse({description",{"_index":1075,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["put(':requestid",{"_index":893,"title":{},"body":{"controllers/RequestController.html":{}}}],["put(':requestid')@apiokresponse({description",{"_index":859,"title":{},"body":{"controllers/RequestController.html":{}}}],["put(':requestid/:articleid",{"_index":895,"title":{},"body":{"controllers/RequestController.html":{}}}],["put(':requestid/:articleid')@apiokresponse({description",{"_index":856,"title":{},"body":{"controllers/RequestController.html":{}}}],["put(':shoppinglistid/:requestid",{"_index":1090,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["put(':shoppinglistid/:requestid')@apiokresponse({description",{"_index":1054,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["put('translated/:id",{"_index":501,"title":{},"body":{"controllers/CallController.html":{}}}],["put('translated/:id')@apiresponse({status",{"_index":455,"title":{},"body":{"controllers/CallController.html":{}}}],["query",{"_index":862,"title":{},"body":{"controllers/RequestController.html":{},"miscellaneous/variables.html":{}}}],["query('onlymine",{"_index":878,"title":{},"body":{"controllers/RequestController.html":{}}}],["query('zipcode",{"_index":879,"title":{},"body":{"controllers/RequestController.html":{}}}],["r",{"_index":882,"title":{},"body":{"controllers/RequestController.html":{},"injectables/ShoppingListService.html":{}}}],["r.requester",{"_index":883,"title":{},"body":{"controllers/RequestController.html":{}}}],["r.requestid",{"_index":1148,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["react",{"_index":639,"title":{},"body":{"classes/ConfigService.html":{}}}],["read",{"_index":299,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["readfilesync",{"_index":598,"title":{},"body":{"classes/ConfigService.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UploadCallPayloadDto.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["received",{"_index":675,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestFormDto.html":{}}}],["redirect",{"_index":467,"title":{},"body":{"controllers/CallController.html":{}}}],["redirect('https://google.com",{"_index":482,"title":{},"body":{"controllers/CallController.html":{}}}],["reflect",{"_index":1415,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(payload",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{}}}],["register.payload",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerpayload",{"_index":358,"title":{"classes/RegisterPayload.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterPayload.html":{},"coverage.html":{}}}],["registration",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["relations",{"_index":980,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{}}}],["remove",{"_index":222,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["remove(id",{"_index":230,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["removerequest",{"_index":1121,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["removerequest(requestid",{"_index":1133,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["replied",{"_index":839,"title":{},"body":{"controllers/RequestController.html":{}}}],["replied.'})@apiquery({name",{"_index":834,"title":{},"body":{"controllers/RequestController.html":{}}}],["repository",{"_index":224,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["req",{"_index":290,"title":{},"body":{"injectables/AudioStorageService.html":{},"controllers/CallController.html":{},"interfaces/IRequestUser.html":{},"miscellaneous/variables.html":{}}}],["req.files[0].location",{"_index":331,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["req.user",{"_index":723,"title":{},"body":{"interfaces/IRequestUser.html":{},"miscellaneous/variables.html":{}}}],["reqid",{"_index":1164,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["request",{"_index":195,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"interfaces/IRequestUser.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request'})@apiforbiddenresponse({description",{"_index":1056,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["request'})@apinotacceptableresponse({description",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["request'})@apinotfoundresponse({description",{"_index":844,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["request'})@apiparam({name",{"_index":444,"title":{},"body":{"controllers/CallController.html":{},"controllers/UserController.html":{}}}],["request'})@apiresponse({status",{"_index":452,"title":{},"body":{"controllers/CallController.html":{}}}],["request'})@apiunauthorizedresponse({description",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.additionalrequest",{"_index":994,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.articles",{"_index":814,"title":{},"body":{"classes/RequestArticle.html":{},"injectables/RequestService.html":{}}}],["request.articles.find",{"_index":1013,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.articles.push(newarticle",{"_index":993,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.city",{"_index":1000,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.controller",{"_index":948,"title":{},"body":{"modules/RequestModule.html":{}}}],["request.deliverycomment",{"_index":998,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.entity",{"_index":689,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/RequestArticle.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"injectables/ShoppingListService.html":{}}}],["request.entity.ts",{"_index":1111,"title":{},"body":{"classes/ShoppingListRequest.html":{},"coverage.html":{}}}],["request.entity.ts:11",{"_index":1113,"title":{},"body":{"classes/ShoppingListRequest.html":{}}}],["request.entity.ts:15",{"_index":1114,"title":{},"body":{"classes/ShoppingListRequest.html":{}}}],["request.entity.ts:21",{"_index":1115,"title":{},"body":{"classes/ShoppingListRequest.html":{}}}],["request.number",{"_index":1004,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.phonenumber",{"_index":996,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.requesterid",{"_index":982,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.service",{"_index":867,"title":{},"body":{"controllers/RequestController.html":{},"modules/RequestModule.html":{}}}],["request.street",{"_index":1002,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.zipcode",{"_index":1006,"title":{},"body":{"injectables/RequestService.html":{}}}],["request/request.controller",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["request/request.entity",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["request/request.module",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/ShoppingListModule.html":{}}}],["request/request.service",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"controllers/ShoppingListController.html":{}}}],["request/requestarticle.entity",{"_index":687,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["requestarticle",{"_index":686,"title":{"classes/RequestArticle.html":{}},"body":{"modules/DatabaseModule.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["requestarticle.entity",{"_index":932,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"injectables/RequestService.html":{}}}],["requestarticle.request",{"_index":936,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["requestarticlestatusdto",{"_index":815,"title":{"classes/RequestArticleStatusDto.html":{}},"body":{"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/ShoppingListFormDto.html":{},"coverage.html":{}}}],["requestcontroller",{"_index":88,"title":{"controllers/RequestController.html":{}},"body":{"modules/AppModule.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"coverage.html":{}}}],["requestentity",{"_index":102,"title":{"classes/RequestEntity.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"classes/RequestArticle.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["requestentity})@apibadrequestresponse({description",{"_index":843,"title":{},"body":{"controllers/RequestController.html":{}}}],["requestentity})@post",{"_index":851,"title":{},"body":{"controllers/RequestController.html":{}}}],["requester",{"_index":901,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["requesterid",{"_index":902,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["requestfillablefields",{"_index":937,"title":{"classes/RequestFillableFields.html":{}},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"coverage.html":{}}}],["requestformdto",{"_index":679,"title":{"classes/RequestFormDto.html":{}},"body":{"classes/CreateRequestArticleDto.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["requesthandler",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestid",{"_index":847,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{}}}],["requesting",{"_index":833,"title":{},"body":{"controllers/RequestController.html":{}}}],["requestmethod.all",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmodule",{"_index":74,"title":{"modules/RequestModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules.html":{},"overview.html":{}}}],["requestrepository",{"_index":957,"title":{},"body":{"injectables/RequestService.html":{}}}],["requests",{"_index":822,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{}}}],["requests.map(async",{"_index":881,"title":{},"body":{"controllers/RequestController.html":{}}}],["requestservice",{"_index":79,"title":{"injectables/RequestService.html":{}},"body":{"modules/AppModule.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"coverage.html":{},"overview.html":{}}}],["requeststatus",{"_index":924,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"miscellaneous/enumerations.html":{}}}],["requeststatus.new",{"_index":935,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["required",{"_index":643,"title":{},"body":{"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["requser",{"_index":721,"title":{},"body":{"interfaces/IRequestUser.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":288,"title":{},"body":{"injectables/AudioStorageService.html":{},"controllers/CallController.html":{}}}],["res.status(200).json('set",{"_index":504,"title":{},"body":{"controllers/CallController.html":{}}}],["res.status(201).json('upload",{"_index":335,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["res.status(400).json(`failed",{"_index":498,"title":{},"body":{"controllers/CallController.html":{}}}],["res.status(400).json(`upload",{"_index":328,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["res.status(500).json('failed",{"_index":506,"title":{},"body":{"controllers/CallController.html":{}}}],["res.status(500).json(`failed",{"_index":499,"title":{},"body":{"controllers/CallController.html":{}}}],["reset",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsetokendto",{"_index":373,"title":{"classes/ResponseTokenDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResponseTokenDto.html":{},"coverage.html":{}}}],["responsetokendto})@apibadrequestresponse({description",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{}}}],["restful",{"_index":1564,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":1632,"title":{},"body":{"license.html":{}}}],["result",{"_index":35,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":37,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"classes/PasswordTransformer.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["rights",{"_index":1634,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1418,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":790,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["role.ts",{"_index":1454,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roles",{"_index":975,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles('admin",{"_index":1280,"title":{},"body":{"injectables/UsersService.html":{}}}],["roles('helper",{"_index":1138,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["roles('user",{"_index":977,"title":{},"body":{"injectables/RequestService.html":{}}}],["root",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["rootpath",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rules",{"_index":651,"title":{},"body":{"classes/ConfigService.html":{}}}],["run",{"_index":1522,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1420,"title":{},"body":{"dependencies.html":{}}}],["s3",{"_index":294,"title":{},"body":{"injectables/AudioStorageService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["same",{"_index":836,"title":{},"body":{"controllers/RequestController.html":{}}}],["sdk",{"_index":319,"title":{},"body":{"injectables/AudioStorageService.html":{},"dependencies.html":{}}}],["seconds",{"_index":1024,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["secret",{"_index":405,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretaccesskey",{"_index":324,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["secretorkey",{"_index":764,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secretpassword",{"_index":1488,"title":{},"body":{"index.html":{}}}],["secure",{"_index":1596,"title":{},"body":{"index.html":{}}}],["see",{"_index":1100,"title":{},"body":{"controllers/ShoppingListController.html":{},"index.html":{}}}],["seeding",{"_index":1589,"title":{},"body":{"index.html":{}}}],["seeker",{"_index":1190,"title":{},"body":{"classes/UpdateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["sell",{"_index":1641,"title":{},"body":{"license.html":{}}}],["server",{"_index":1483,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":738,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["set",{"_index":507,"title":{},"body":{"controllers/CallController.html":{},"classes/ConfigService.html":{},"controllers/RequestController.html":{},"index.html":{}}}],["setdescription(swagger_api_description",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('roles",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setparameter('email",{"_index":1290,"title":{},"body":{"injectables/UsersService.html":{}}}],["setparameter('password",{"_index":1296,"title":{},"body":{"injectables/UsersService.html":{}}}],["settitle(swagger_api_name",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settranslated",{"_index":277,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["settranslated(translated",{"_index":285,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["setupswagger",{"_index":1352,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setversion(swagger_api_current_version",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":1649,"title":{},"body":{"license.html":{}}}],["shell",{"_index":1496,"title":{},"body":{"index.html":{}}}],["shopping",{"_index":819,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{}}}],["shoppinglist",{"_index":117,"title":{"classes/ShoppingList.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{}}}],["shoppinglist.owner",{"_index":1099,"title":{},"body":{"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["shoppinglist.requests",{"_index":1117,"title":{},"body":{"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{}}}],["shoppinglist.requests.find(r",{"_index":1147,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglist.requests.findindex",{"_index":1153,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglist.requests.push(newrequest",{"_index":1151,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglist.requests.splice(index",{"_index":1157,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglist.status",{"_index":1143,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglist/dto/shopping",{"_index":873,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["shoppinglist/shopping",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["shoppinglistcontroller",{"_index":89,"title":{"controllers/ShoppingListController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{},"coverage.html":{}}}],["shoppinglistcontroller.logger.log(request",{"_index":1093,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["shoppinglistfillablefields",{"_index":1044,"title":{"classes/ShoppingListFillableFields.html":{}},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"coverage.html":{}}}],["shoppinglistformdto",{"_index":820,"title":{"classes/ShoppingListFormDto.html":{}},"body":{"classes/RequestArticleStatusDto.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{}}}],["shoppinglistid",{"_index":1059,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["shoppinglistmodule",{"_index":75,"title":{"modules/ShoppingListModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ShoppingListModule.html":{},"modules.html":{},"overview.html":{}}}],["shoppinglistrepository",{"_index":1124,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglistrequest",{"_index":688,"title":{"classes/ShoppingListRequest.html":{}},"body":{"modules/DatabaseModule.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{}}}],["shoppinglistrequest.shoppinglist",{"_index":1043,"title":{},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["shoppinglistservice",{"_index":80,"title":{"injectables/ShoppingListService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{},"overview.html":{}}}],["shoppinglistservice.logger.log(index",{"_index":1155,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglistservice.logger.log(shoppinglist",{"_index":1156,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppingliststatus",{"_index":818,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{},"miscellaneous/enumerations.html":{}}}],["shoppingliststatus.active",{"_index":823,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{}}}],["shoppingliststatus})@column({enum",{"_index":1038,"title":{},"body":{"classes/ShoppingList.html":{}}}],["shoppinglist})@apibadrequestresponse({description",{"_index":1055,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["shoppinglist})@apinotfoundresponse({description",{"_index":1064,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["signoptions",{"_index":407,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice(0",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":1627,"title":{},"body":{"license.html":{}}}],["something",{"_index":1595,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["sources",{"_index":1599,"title":{},"body":{"index.html":{}}}],["spin",{"_index":1512,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":641,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["sqljs",{"_index":642,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/.../audio",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.middleware.ts",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1462,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../request",{"_index":1450,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../roles.decorator.ts",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shopping",{"_index":1452,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":1453,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.decorator.ts",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1325,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/modules/**/*.entity{.ts,.js",{"_index":709,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/modules/**/*.migration{.ts,.js",{"_index":711,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/modules/articles/article.entity.ts",{"_index":168,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"coverage.html":{}}}],["src/modules/articles/article.entity.ts:13",{"_index":174,"title":{},"body":{"classes/Article.html":{}}}],["src/modules/articles/article.entity.ts:19",{"_index":178,"title":{},"body":{"classes/Article.html":{}}}],["src/modules/articles/article.entity.ts:23",{"_index":186,"title":{},"body":{"classes/ArticleFillableFields.html":{}}}],["src/modules/articles/articles.controller.ts",{"_index":187,"title":{},"body":{"controllers/ArticlesController.html":{},"coverage.html":{}}}],["src/modules/articles/articles.controller.ts:16",{"_index":203,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.controller.ts:26",{"_index":196,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.modules.ts",{"_index":1259,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/articles/articles.service.ts",{"_index":220,"title":{},"body":{"injectables/ArticlesService.html":{},"coverage.html":{}}}],["src/modules/articles/articles.service.ts:14",{"_index":228,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/articles.service.ts:21",{"_index":229,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/articles.service.ts:29",{"_index":231,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/articles.service.ts:8",{"_index":225,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/dto/create",{"_index":661,"title":{},"body":{"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["src/modules/articles/interfaces/article.interface.ts",{"_index":1332,"title":{},"body":{"coverage.html":{}}}],["src/modules/audio",{"_index":245,"title":{},"body":{"classes/AudioFile.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:35",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:47",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":394,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:10",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:18",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:29",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/response",{"_index":1020,"title":{},"body":{"classes/ResponseTokenDto.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.payload.ts",{"_index":745,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":749,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:10",{"_index":752,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:37",{"_index":754,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/login.payload.ts",{"_index":767,"title":{},"body":{"classes/LoginPayload.html":{},"coverage.html":{}}}],["src/modules/auth/login.payload.ts:12",{"_index":771,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/auth/login.payload.ts:7",{"_index":769,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/auth/register.payload.ts",{"_index":787,"title":{},"body":{"classes/RegisterPayload.html":{},"coverage.html":{}}}],["src/modules/auth/register.payload.ts:12",{"_index":794,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/register.payload.ts:16",{"_index":795,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/register.payload.ts:19",{"_index":799,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/register.payload.ts:24",{"_index":796,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/register.payload.ts:8",{"_index":792,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/call/call.controller.ts",{"_index":436,"title":{},"body":{"controllers/CallController.html":{},"coverage.html":{}}}],["src/modules/call/call.controller.ts:112",{"_index":457,"title":{},"body":{"controllers/CallController.html":{}}}],["src/modules/call/call.controller.ts:37",{"_index":448,"title":{},"body":{"controllers/CallController.html":{}}}],["src/modules/call/call.controller.ts:50",{"_index":447,"title":{},"body":{"controllers/CallController.html":{}}}],["src/modules/call/call.controller.ts:67",{"_index":462,"title":{},"body":{"controllers/CallController.html":{}}}],["src/modules/call/call.controller.ts:73",{"_index":453,"title":{},"body":{"controllers/CallController.html":{}}}],["src/modules/call/call.controller.ts:86",{"_index":460,"title":{},"body":{"controllers/CallController.html":{}}}],["src/modules/call/call.module.ts",{"_index":512,"title":{},"body":{"modules/CallModule.html":{}}}],["src/modules/call/call.service.ts",{"_index":515,"title":{},"body":{"injectables/CallService.html":{},"coverage.html":{}}}],["src/modules/call/dto/translated",{"_index":1166,"title":{},"body":{"classes/TranslatedCallPayloadDto.html":{},"coverage.html":{}}}],["src/modules/call/dto/upload",{"_index":1191,"title":{},"body":{"classes/UploadCallPayloadDto.html":{},"coverage.html":{}}}],["src/modules/common/decorators/roles.decorator.ts",{"_index":1336,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/common/decorators/user.decorator.ts",{"_index":719,"title":{},"body":{"interfaces/IRequestUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/common/guards/jwt",{"_index":725,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/modules/common/middlewares/logger.middleware.ts",{"_index":1337,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/config/config.module.ts",{"_index":518,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/modules/config/config.service.ts",{"_index":523,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["src/modules/config/config.service.ts:16",{"_index":563,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:20",{"_index":569,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:24",{"_index":571,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:28",{"_index":573,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:32",{"_index":575,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:36",{"_index":577,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:40",{"_index":579,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:44",{"_index":581,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:48",{"_index":583,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:52",{"_index":585,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:56",{"_index":587,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:6",{"_index":542,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:60",{"_index":589,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:64",{"_index":591,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:68",{"_index":593,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:72",{"_index":595,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:79",{"_index":546,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:87",{"_index":551,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/database/database.module.ts",{"_index":684,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/modules/main/app.controller.ts",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/modules/main/app.controller.ts:13",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/main/app.module.ts",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/main/app.service.ts",{"_index":160,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/modules/main/app.service.ts:10",{"_index":166,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/main/app.service.ts:6",{"_index":163,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/main/models/address.model.ts",{"_index":6,"title":{},"body":{"classes/AddressModel.html":{},"coverage.html":{}}}],["src/modules/main/models/address.model.ts:10",{"_index":25,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/modules/main/models/address.model.ts:17",{"_index":24,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/modules/main/models/address.model.ts:24",{"_index":26,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/modules/main/models/address.model.ts:31",{"_index":23,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/modules/request/dto/request",{"_index":669,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestFormDto.html":{},"coverage.html":{}}}],["src/modules/request/request",{"_index":1455,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/request/request.controller.ts",{"_index":824,"title":{},"body":{"controllers/RequestController.html":{},"coverage.html":{}}}],["src/modules/request/request.controller.ts:105",{"_index":860,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:119",{"_index":857,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:59",{"_index":840,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:77",{"_index":852,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:90",{"_index":846,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.entity.ts",{"_index":898,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"coverage.html":{}}}],["src/modules/request/request.entity.ts:21",{"_index":912,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:26",{"_index":910,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:30",{"_index":922,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:39",{"_index":917,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:43",{"_index":904,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:47",{"_index":911,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:54",{"_index":914,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:62",{"_index":925,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:70",{"_index":908,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:74",{"_index":920,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:78",{"_index":938,"title":{},"body":{"classes/RequestFillableFields.html":{}}}],["src/modules/request/request.module.ts",{"_index":947,"title":{},"body":{"modules/RequestModule.html":{}}}],["src/modules/request/request.service.ts",{"_index":950,"title":{},"body":{"injectables/RequestService.html":{},"coverage.html":{}}}],["src/modules/request/request.service.ts:100",{"_index":961,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:19",{"_index":956,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:26",{"_index":963,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:30",{"_index":959,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:38",{"_index":967,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:61",{"_index":965,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:75",{"_index":973,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:93",{"_index":970,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/requestarticle.entity.ts",{"_index":803,"title":{},"body":{"classes/RequestArticle.html":{},"coverage.html":{}}}],["src/modules/request/requestarticle.entity.ts:10",{"_index":810,"title":{},"body":{"classes/RequestArticle.html":{}}}],["src/modules/request/requestarticle.entity.ts:14",{"_index":809,"title":{},"body":{"classes/RequestArticle.html":{}}}],["src/modules/request/requestarticle.entity.ts:18",{"_index":806,"title":{},"body":{"classes/RequestArticle.html":{}}}],["src/modules/request/requestarticle.entity.ts:22",{"_index":808,"title":{},"body":{"classes/RequestArticle.html":{}}}],["src/modules/request/requestarticle.entity.ts:28",{"_index":812,"title":{},"body":{"classes/RequestArticle.html":{}}}],["src/modules/shoppinglist/dto/shopping",{"_index":816,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/ShoppingListFormDto.html":{},"coverage.html":{}}}],["src/modules/shoppinglist/shopping",{"_index":1029,"title":{},"body":{"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/user/dto/update",{"_index":1181,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/user/password.transformer.ts",{"_index":777,"title":{},"body":{"classes/PasswordTransformer.html":{},"coverage.html":{}}}],["src/modules/user/password.transformer.ts:10",{"_index":782,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["src/modules/user/password.transformer.ts:6",{"_index":780,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["src/modules/user/user",{"_index":1459,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/user/user.controller.ts",{"_index":1216,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:29",{"_index":1220,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:42",{"_index":1219,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:56",{"_index":1224,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.entity.ts",{"_index":1199,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"coverage.html":{}}}],["src/modules/user/user.entity.ts:14",{"_index":1203,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:18",{"_index":1202,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:22",{"_index":1204,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:26",{"_index":1201,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:34",{"_index":1209,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:41",{"_index":1211,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:49",{"_index":1207,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:53",{"_index":1243,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:54",{"_index":1244,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:55",{"_index":1245,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:56",{"_index":1247,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:57",{"_index":1248,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:58",{"_index":1242,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:59",{"_index":1246,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:63",{"_index":1249,"title":{},"body":{"classes/UserID.html":{}}}],["src/modules/user/user.module.ts",{"_index":1253,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":1262,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:15",{"_index":1266,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:21",{"_index":1270,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:29",{"_index":1273,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:38",{"_index":1275,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:49",{"_index":1269,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:62",{"_index":1277,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:75",{"_index":1271,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/swagger/constants.ts",{"_index":1346,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/index.ts",{"_index":1351,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["staged",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["start",{"_index":1555,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1558,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1559,"title":{},"body":{"index.html":{}}}],["started",{"_index":1464,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":1324,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["status",{"_index":488,"title":{},"body":{"controllers/CallController.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{}}}],["status.ts",{"_index":1451,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":486,"title":{},"body":{"controllers/CallController.html":{}}}],["storage",{"_index":266,"title":{},"body":{"controllers/AudioStorageController.html":{},"injectables/AudioStorageService.html":{}}}],["storage.controller",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{}}}],["storage.controller.ts",{"_index":265,"title":{},"body":{"controllers/AudioStorageController.html":{},"coverage.html":{}}}],["storage.entity",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/CallController.html":{},"modules/DatabaseModule.html":{}}}],["storage.entity.ts",{"_index":246,"title":{},"body":{"classes/AudioFile.html":{},"coverage.html":{}}}],["storage.entity.ts:14",{"_index":253,"title":{},"body":{"classes/AudioFile.html":{}}}],["storage.entity.ts:17",{"_index":252,"title":{},"body":{"classes/AudioFile.html":{}}}],["storage.entity.ts:22",{"_index":261,"title":{},"body":{"classes/AudioFile.html":{}}}],["storage.entity.ts:28",{"_index":258,"title":{},"body":{"classes/AudioFile.html":{}}}],["storage.entity.ts:33",{"_index":256,"title":{},"body":{"classes/AudioFile.html":{}}}],["storage.entity.ts:38",{"_index":259,"title":{},"body":{"classes/AudioFile.html":{}}}],["storage.module",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/CallModule.html":{}}}],["storage.module.ts",{"_index":272,"title":{},"body":{"modules/AudioStorageModule.html":{}}}],["storage.service",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"controllers/CallController.html":{}}}],["storage.service.ts",{"_index":274,"title":{},"body":{"injectables/AudioStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:13",{"_index":280,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["storage.service.ts:25",{"_index":289,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["storage.service.ts:48",{"_index":284,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["storage.service.ts:52",{"_index":282,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["storage.service.ts:58",{"_index":286,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["storage.service.ts:70",{"_index":317,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["storage/audio",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"classes/AudioFile.html":{},"controllers/AudioStorageController.html":{},"modules/AudioStorageModule.html":{},"injectables/AudioStorageService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["strategy",{"_index":757,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["street",{"_index":12,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["string",{"_index":16,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"injectables/AudioStorageService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":748,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["subject",{"_index":1646,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1639,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1651,"title":{},"body":{"license.html":{}}}],["success",{"_index":490,"title":{},"body":{"controllers/CallController.html":{}}}],["success'})@apiresponse({status",{"_index":451,"title":{},"body":{"controllers/CallController.html":{}}}],["successful",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["successful'})@apibadrequestresponse({description",{"_index":443,"title":{},"body":{"controllers/CallController.html":{}}}],["successfull",{"_index":505,"title":{},"body":{"controllers/CallController.html":{}}}],["sudo",{"_index":1469,"title":{},"body":{"index.html":{}}}],["suggested",{"_index":1592,"title":{},"body":{"index.html":{}}}],["super",{"_index":760,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":739,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super.login(request",{"_index":736,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["supertest",{"_index":1422,"title":{},"body":{"dependencies.html":{}}}],["support",{"_index":1679,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1680,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1424,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["swagger_api_current_version",{"_index":1347,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_description",{"_index":1348,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_name",{"_index":1349,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_root",{"_index":1350,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(swagger_api_root",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":1480,"title":{},"body":{"index.html":{}}}],["synchronize",{"_index":712,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["table",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1598,"title":{},"body":{"index.html":{}}}],["telephone",{"_index":1183,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["temporary",{"_index":1510,"title":{},"body":{"index.html":{}}}],["test",{"_index":607,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["test:covswagger",{"_index":1563,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1562,"title":{},"body":{"index.html":{}}}],["test@test.com",{"_index":801,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["test@test.com'})@isemail",{"_index":791,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["tests",{"_index":1560,"title":{},"body":{"index.html":{}}}],["this.appservice.root",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["this.articlesrepository.delete(id",{"_index":244,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.find",{"_index":240,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.findone(id",{"_index":242,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.save(article",{"_index":239,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesservice.create(createarticledto",{"_index":218,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articlesservice.findall",{"_index":219,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.audiorepo.create",{"_index":339,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["this.audiorepo.findone",{"_index":337,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["this.audiorepo.save(audiofile",{"_index":334,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["this.audiorepo.save(newaudiofile",{"_index":340,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["this.audiostorageservice.create",{"_index":494,"title":{},"body":{"controllers/CallController.html":{}}}],["this.audiostorageservice.getbyid(id",{"_index":484,"title":{},"body":{"controllers/CallController.html":{}}}],["this.audiostorageservice.settranslated(true",{"_index":503,"title":{},"body":{"controllers/CallController.html":{}}}],["this.audiostorageservice.uploadtoaws(req",{"_index":497,"title":{},"body":{"controllers/CallController.html":{}}}],["this.authservice.generatetoken(user",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(credentials",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.config.get('api_url",{"_index":167,"title":{},"body":{"injectables/AppService.html":{}}}],["this.configservice.get('aws_access_key_id",{"_index":323,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["this.configservice.get('aws_s3_bucket_name",{"_index":296,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["this.configservice.get('aws_secret_access_key",{"_index":325,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["this.envconfig",{"_index":602,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.database_host",{"_index":609,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.database_name",{"_index":613,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.database_password",{"_index":612,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.database_type",{"_index":608,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.database_username",{"_index":611,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.googleauth_client_id",{"_index":615,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.googleauth_client_secret",{"_index":616,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.googleauth_redirect_uri",{"_index":617,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.jwt_secret",{"_index":614,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.node_env",{"_index":604,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.twilio_account_ssid",{"_index":618,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig[key",{"_index":619,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.findrequest(requestid",{"_index":1012,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.findshoppinglist",{"_index":1092,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.findshoppinglist(id",{"_index":1086,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.get(id",{"_index":1019,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.getbyemail(payload.email",{"_index":1298,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getbyid(id",{"_index":342,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["this.jwtservice.sign({...userpayload",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.populaterequest(request",{"_index":981,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.populateshoppinglist(createrequestdto",{"_index":1142,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["this.populateshoppinglist(form",{"_index":1146,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["this.requestrepository.find",{"_index":1011,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.requestrepository.findone(id",{"_index":979,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.requestrepository.save(request",{"_index":984,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.requestservice.create(createrequestdto",{"_index":885,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.requestservice.get(requestid",{"_index":890,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["this.requestservice.getall(user",{"_index":880,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.requestservice.update(requestid",{"_index":894,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.requestservice.updaterequestarticle",{"_index":897,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.shoppinglistrepository.find",{"_index":1145,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["this.shoppinglistrepository.findone(id",{"_index":1140,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["this.shoppinglistrepository.save(shoppinglist",{"_index":1144,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["this.shoppinglistservice.addrequesttolist(request.id",{"_index":1095,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.shoppinglistservice.create(createrequestdto",{"_index":1087,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.shoppinglistservice.get(id",{"_index":1098,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.shoppinglistservice.getallbyuser(user.userid",{"_index":1084,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.shoppinglistservice.removerequest(requestid",{"_index":1097,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.shoppinglistservice.update(updateshoppinglist",{"_index":1089,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.upload(req",{"_index":327,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["this.userrepository",{"_index":1287,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.create(payload",{"_index":1302,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.find",{"_index":1321,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":1286,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone(id",{"_index":1284,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(newuser",{"_index":1303,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(user",{"_index":1320,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.create(payload",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.get(entity.requesterid",{"_index":887,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.userservice.get(id",{"_index":1235,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.get(r.requesterid",{"_index":884,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.userservice.getall",{"_index":1232,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getbyemailandpass(email",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(updateuserdto",{"_index":1241,"title":{},"body":{"controllers/UserController.html":{}}}],["this.validateinput(parsedconfig",{"_index":603,"title":{},"body":{"classes/ConfigService.html":{}}}],["through",{"_index":1582,"title":{},"body":{"index.html":{}}}],["throw",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to(value",{"_index":781,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["to.requests.find(r",{"_index":1163,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["to.requests.push(newrequest",{"_index":1165,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["to.status",{"_index":1159,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["todo",{"_index":1281,"title":{},"body":{"injectables/UsersService.html":{}}}],["token",{"_index":1022,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["token.dt",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dt.ts",{"_index":1021,"title":{},"body":{"classes/ResponseTokenDto.html":{},"coverage.html":{}}}],["token.dt.ts:13",{"_index":1023,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["token.dt.ts:19",{"_index":1028,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["token.dt.ts:8",{"_index":1027,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["tokens",{"_index":1609,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1673,"title":{},"body":{"license.html":{}}}],["toundra",{"_index":1619,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":263,"title":{},"body":{"classes/AudioFile.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"dependencies.html":{}}}],["translated",{"_index":248,"title":{},"body":{"classes/AudioFile.html":{},"injectables/AudioStorageService.html":{},"controllers/CallController.html":{},"classes/UploadCallPayloadDto.html":{}}}],["translated(@res",{"_index":502,"title":{},"body":{"controllers/CallController.html":{}}}],["translated(res",{"_index":454,"title":{},"body":{"controllers/CallController.html":{}}}],["translatedcallpayloaddto",{"_index":477,"title":{"classes/TranslatedCallPayloadDto.html":{}},"body":{"controllers/CallController.html":{},"classes/TranslatedCallPayloadDto.html":{},"coverage.html":{}}}],["translation",{"_index":1170,"title":{},"body":{"classes/TranslatedCallPayloadDto.html":{},"classes/UploadCallPayloadDto.html":{}}}],["translator",{"_index":1169,"title":{},"body":{"classes/TranslatedCallPayloadDto.html":{}}}],["true",{"_index":21,"title":{},"body":{"classes/AddressModel.html":{},"classes/AudioFile.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["true})@column",{"_index":805,"title":{},"body":{"classes/RequestArticle.html":{}}}],["true})@column({default",{"_index":807,"title":{},"body":{"classes/RequestArticle.html":{}}}],["true})@column({length",{"_index":1200,"title":{},"body":{"classes/User.html":{}}}],["true})@column({type",{"_index":1208,"title":{},"body":{"classes/User.html":{}}}],["true})@isemail",{"_index":768,"title":{},"body":{"classes/LoginPayload.html":{}}}],["true})@isnotempty",{"_index":793,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{}}}],["true})@isnotempty()@minlength(5",{"_index":770,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["try",{"_index":326,"title":{},"body":{"injectables/AudioStorageService.html":{},"controllers/CallController.html":{},"index.html":{}}}],["ts",{"_index":706,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["tsconfig",{"_index":1432,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":1435,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tutorial",{"_index":1601,"title":{},"body":{"index.html":{}}}],["twilio_account_ssid",{"_index":652,"title":{},"body":{"classes/ConfigService.html":{}}}],["twilio_auth_token",{"_index":654,"title":{},"body":{"classes/ConfigService.html":{}}}],["twillioaccountssid",{"_index":539,"title":{},"body":{"classes/ConfigService.html":{}}}],["twillioauthtoken",{"_index":540,"title":{},"body":{"classes/ConfigService.html":{}}}],["type",{"_index":14,"title":{},"body":{"classes/AddressModel.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"injectables/AudioStorageService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":29,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"injectables/ArticlesService.html":{},"classes/AudioFile.html":{},"injectables/AudioStorageService.html":{},"classes/PasswordTransformer.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule.forfeature([article",{"_index":1261,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([audiofile",{"_index":273,"title":{},"body":{"modules/AudioStorageModule.html":{}}}],["typeormmodule.forfeature([requestentity",{"_index":949,"title":{},"body":{"modules/RequestModule.html":{}}}],["typeormmodule.forfeature([shoppinglist",{"_index":1110,"title":{},"body":{"modules/ShoppingListModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1255,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":690,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":685,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types",{"_index":1575,"title":{},"body":{"index.html":{}}}],["types/dotenv",{"_index":1366,"title":{},"body":{"dependencies.html":{}}}],["types/express",{"_index":1368,"title":{},"body":{"dependencies.html":{}}}],["types/helmet",{"_index":1370,"title":{},"body":{"dependencies.html":{}}}],["types/jest",{"_index":1372,"title":{},"body":{"dependencies.html":{}}}],["types/joi",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["types/multer",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["types/supertest",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1438,"title":{},"body":{"dependencies.html":{}}}],["typing",{"_index":1484,"title":{},"body":{"index.html":{}}}],["u",{"_index":1479,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1425,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["unauthorized'})@apiparam({name",{"_index":456,"title":{},"body":{"controllers/CallController.html":{}}}],["unauthorizedexception",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('wrong",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":450,"title":{},"body":{"controllers/CallController.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["undefined})@apibadrequestresponse({description",{"_index":193,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["undefined})@apiquery({name",{"_index":831,"title":{},"body":{"controllers/RequestController.html":{}}}],["undefined})@exclude",{"_index":1206,"title":{},"body":{"classes/User.html":{}}}],["undefined})@isnotempty",{"_index":1186,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["undefined})@onetomany(undefined",{"_index":906,"title":{},"body":{"classes/RequestEntity.html":{},"classes/ShoppingList.html":{}}}],["unit",{"_index":184,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/CreateArticleDto.html":{},"index.html":{}}}],["unit.'})@column({length",{"_index":176,"title":{},"body":{"classes/Article.html":{}}}],["unit.'})@isstring",{"_index":664,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["until",{"_index":1025,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["up",{"_index":1513,"title":{},"body":{"index.html":{}}}],["update",{"_index":953,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["update(editrequestdto",{"_index":1276,"title":{},"body":{"injectables/UsersService.html":{}}}],["update(form",{"_index":1135,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["update(id",{"_index":1221,"title":{},"body":{"controllers/UserController.html":{}}}],["update(requestid",{"_index":969,"title":{},"body":{"injectables/RequestService.html":{}}}],["updated_at",{"_index":1032,"title":{},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["updatedatecolumn",{"_index":1042,"title":{},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["updaterequest",{"_index":829,"title":{},"body":{"controllers/RequestController.html":{}}}],["updaterequest(requestid",{"_index":858,"title":{},"body":{"controllers/RequestController.html":{}}}],["updaterequestarticle",{"_index":954,"title":{},"body":{"injectables/RequestService.html":{}}}],["updaterequestarticle(requestid",{"_index":971,"title":{},"body":{"injectables/RequestService.html":{}}}],["updateshoppinglist",{"_index":1052,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["updateshoppinglist(id",{"_index":1074,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["updateuserdto",{"_index":1180,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["upload",{"_index":275,"title":{},"body":{"injectables/AudioStorageService.html":{},"controllers/CallController.html":{},"classes/UploadCallPayloadDto.html":{}}}],["upload'})@isstring",{"_index":1198,"title":{},"body":{"classes/UploadCallPayloadDto.html":{}}}],["upload(req",{"_index":458,"title":{},"body":{"controllers/CallController.html":{}}}],["upload_date",{"_index":1193,"title":{},"body":{"classes/UploadCallPayloadDto.html":{}}}],["uploadcallpayloaddto",{"_index":474,"title":{"classes/UploadCallPayloadDto.html":{}},"body":{"controllers/CallController.html":{},"classes/UploadCallPayloadDto.html":{},"coverage.html":{}}}],["uploaded",{"_index":249,"title":{},"body":{"classes/AudioFile.html":{},"classes/UploadCallPayloadDto.html":{}}}],["uploadedfile",{"_index":465,"title":{},"body":{"controllers/CallController.html":{}}}],["uploadtoaws",{"_index":278,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["uploadtoaws(req",{"_index":287,"title":{},"body":{"injectables/AudioStorageService.html":{}}}],["url",{"_index":485,"title":{},"body":{"controllers/CallController.html":{}}}],["usage",{"_index":1554,"title":{},"body":{"index.html":{}}}],["use",{"_index":1551,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":1519,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":404,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["useguards",{"_index":863,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":875,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["useinterceptors",{"_index":464,"title":{},"body":{"controllers/CallController.html":{}}}],["usenewurlparser",{"_index":715,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["user",{"_index":100,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["user.city",{"_index":1304,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.controller",{"_index":1254,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":1228,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":1182,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":1185,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:16",{"_index":1187,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:19",{"_index":1188,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":1184,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.entity",{"_index":1225,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{}}}],["user.firstname",{"_index":1312,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.id",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.lastname",{"_index":1314,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.module",{"_index":784,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["user.number",{"_index":1308,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.role",{"_index":1316,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.service",{"_index":1226,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.street",{"_index":1306,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.telephone",{"_index":1318,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.userid",{"_index":983,"title":{},"body":{"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{}}}],["user.zipcode",{"_index":1310,"title":{},"body":{"injectables/UsersService.html":{}}}],["user/user",{"_index":800,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["user/user.controller",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.entity",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["user/user.module",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RequestModule.html":{}}}],["user/user.service",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/RequestController.html":{}}}],["usercontroller",{"_index":87,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userfillablefields",{"_index":1214,"title":{"classes/UserFillableFields.html":{}},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userid",{"_index":849,"title":{"classes/UserID.html":{}},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"coverage.html":{}}}],["usermodule",{"_index":76,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/PasswordTransformer.html":{},"modules/RequestModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":697,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["userpayload",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["userpayload.password",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrepository",{"_index":1267,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrole",{"_index":798,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.none",{"_index":802,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["users",{"_index":1213,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["users.password",{"_index":1295,"title":{},"body":{"injectables/UsersService.html":{}}}],["userservice",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/RequestController.html":{},"controllers/UserController.html":{}}}],["usersmodule",{"_index":1256,"title":{"modules/UsersModule.html":{}},"body":{"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":81,"title":{"injectables/UsersService.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/RequestController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usertoupdate",{"_index":1238,"title":{},"body":{"controllers/UserController.html":{}}}],["usertoupdate.id",{"_index":1239,"title":{},"body":{"controllers/UserController.html":{}}}],["user})@apibadrequestresponse({description",{"_index":1222,"title":{},"body":{"controllers/UserController.html":{}}}],["user})@apinotfoundresponse({description",{"_index":1217,"title":{},"body":{"controllers/UserController.html":{}}}],["user})@exclude",{"_index":919,"title":{},"body":{"classes/RequestEntity.html":{}}}],["usevalue",{"_index":521,"title":{},"body":{"modules/ConfigModule.html":{}}}],["using",{"_index":1547,"title":{},"body":{"index.html":{}}}],["usually",{"_index":1486,"title":{},"body":{"index.html":{}}}],["v",{"_index":1014,"title":{},"body":{"injectables/RequestService.html":{},"index.html":{}}}],["v.articleid",{"_index":1015,"title":{},"body":{"injectables/RequestService.html":{}}}],["valid",{"_index":629,"title":{},"body":{"classes/ConfigService.html":{}}}],["valid(['development",{"_index":625,"title":{},"body":{"classes/ConfigService.html":{}}}],["validate",{"_index":750,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":753,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":555,"title":{},"body":{"classes/ConfigService.html":{}}}],["validatedenvconfig",{"_index":658,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateinput",{"_index":525,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateinput(parsedconfig",{"_index":550,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateuser",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(undefined",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser({email",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":650,"title":{},"body":{"classes/ConfigService.html":{}}}],["validationoptions",{"_index":655,"title":{},"body":{"classes/ConfigService.html":{}}}],["validator",{"_index":667,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/TranslatedCallPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadCallPayloadDto.html":{},"dependencies.html":{}}}],["value",{"_index":291,"title":{},"body":{"injectables/AudioStorageService.html":{},"classes/ConfigService.html":{},"classes/PasswordTransformer.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value).digest('hex",{"_index":786,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["values",{"_index":560,"title":{},"body":{"classes/ConfigService.html":{}}}],["valuetransformer",{"_index":778,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["variable",{"_index":567,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["variables",{"_index":554,"title":{"miscellaneous/variables.html":{}},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["variant",{"_index":1613,"title":{},"body":{"index.html":{}}}],["vars",{"_index":1501,"title":{},"body":{"index.html":{}}}],["visit",{"_index":1570,"title":{},"body":{"index.html":{}}}],["void",{"_index":968,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{}}}],["volume",{"_index":1520,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1657,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1653,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1556,"title":{},"body":{"index.html":{}}}],["web",{"_index":1608,"title":{},"body":{"index.html":{}}}],["webhook",{"_index":440,"title":{},"body":{"controllers/CallController.html":{}}}],["webpack",{"_index":703,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["where('users.email",{"_index":1289,"title":{},"body":{"injectables/UsersService.html":{}}}],["whether",{"_index":1670,"title":{},"body":{"license.html":{}}}],["within",{"_index":835,"title":{},"body":{"controllers/RequestController.html":{}}}],["without",{"_index":1631,"title":{},"body":{"license.html":{}}}],["withpsql",{"_index":1498,"title":{},"body":{"index.html":{}}}],["working",{"_index":1581,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":1473,"title":{},"body":{"index.html":{}}}],["yarnenvironment",{"_index":1475,"title":{},"body":{"index.html":{}}}],["zip",{"_index":837,"title":{},"body":{"controllers/RequestController.html":{}}}],["zipcode",{"_index":13,"title":{},"body":{"classes/AddressModel.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["zoom",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioStorageModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddressModel.html":{"url":"classes/AddressModel.html","title":"class - AddressModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/main/models/address.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                number\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/main/models/address.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/main/models/address.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/main/models/address.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/main/models/address.model.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column } from 'typeorm';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class AddressModel {\n  @ApiPropertyOptional()\n  @Column({\n    length: 10,\n    nullable: true,\n  })\n  street?: string;\n\n  @ApiPropertyOptional()\n  @Column({\n    length: 10,\n    nullable: true,\n  })\n  number?: string;\n\n  @ApiPropertyOptional()\n  @Column({\n    length: 10,\n    nullable: true,\n  })\n  zipCode?: string;\n\n  @ApiPropertyOptional()\n  @Column({\n    length: 10,\n    nullable: true,\n  })\n  city?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/main/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Successful'})\n                \n            \n\n            \n                \n                    Defined in src/modules/main/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Controller, Get} from '@nestjs/common';\n\nimport {AppService} from './app.service';\nimport {ApiOkResponse} from '@nestjs/swagger';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {\n  }\n\n  @Get()\n  @ApiOkResponse({description: 'Successful'})\n  root(): string {\n    return this.appService.root();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAudioStorageModule\n\nAudioStorageModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAudioStorageModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCallModule\n\nCallModule\n\nAppModule -->\n\nCallModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nRequestModule\n\nRequestModule\n\nAppModule -->\n\nRequestModule->AppModule\n\n\n\n\n\nShoppingListModule\n\nShoppingListModule\n\nAppModule -->\n\nShoppingListModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nArticlesService\n\nArticlesService\n\nAppModule -->\n\nArticlesService->AppModule\n\n\n\n\n\nAudioStorageService\n\nAudioStorageService\n\nAppModule -->\n\nAudioStorageService->AppModule\n\n\n\n\n\nRequestService\n\nRequestService\n\nAppModule -->\n\nRequestService->AppModule\n\n\n\n\n\nShoppingListService\n\nShoppingListService\n\nAppModule -->\n\nShoppingListService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/main/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ArticlesService\n                        \n                        \n                            AudioStorageService\n                        \n                        \n                            RequestService\n                        \n                        \n                            ShoppingListService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            ArticlesController\n                        \n                        \n                            UserController\n                        \n                        \n                            RequestController\n                        \n                        \n                            ShoppingListController\n                        \n                        \n                            AudioStorageController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AudioStorageModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CallModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            RequestModule\n                        \n                        \n                            ShoppingListModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {ConfigService} from '../config/config.service';\nimport {Module} from '@nestjs/common';\nimport {TypeOrmModule} from '@nestjs/typeorm';\n\nimport {ConfigModule} from '../config/config.module';\nimport {DatabaseModule} from '../database/database.module';\nimport {AppController} from './app.controller';\nimport {AppService} from './app.service';\nimport {AuthModule} from '../auth/auth.module';\nimport {User} from '../user/user.entity';\nimport {RequestEntity} from '../request/request.entity';\nimport {Article} from '../articles/article.entity';\nimport {ArticlesController} from '../articles/articles.controller';\nimport {ArticlesService} from '../articles/articles.service';\nimport {RequestModule} from '../request/request.module';\nimport {CallModule} from '../call/call.module';\nimport {UserModule} from '../user/user.module';\nimport {UserController} from '../user/user.controller';\nimport {RequestController} from '../request/request.controller';\nimport {UsersService} from '../user/user.service';\nimport {RequestService} from '../request/request.service';\nimport {ShoppingListController} from '../shoppingList/shopping-list.controller';\nimport {ShoppingList} from '../shoppingList/shopping-list.entity';\nimport {ShoppingListModule} from '../shoppingList/shopping-list.module';\nimport {ShoppingListService} from '../shoppingList/shopping-list.service';\nimport {AudioStorageController} from '../audio-storage/audio-storage.controller';\nimport {AudioStorageModule} from '../audio-storage/audio-storage.module';\nimport {AudioFile} from '../audio-storage/audio-storage.entity';\nimport {ServeStaticModule} from '@nestjs/serve-static';\nimport {join} from 'path';\nimport {AudioStorageService} from '../audio-storage/audio-storage.service';\n\n@Module({\n  imports: [\n    AuthModule,\n    ConfigModule,\n    DatabaseModule,\n    RequestModule,\n    UserModule,\n    ShoppingListModule,\n    TypeOrmModule.forFeature([\n      User,\n      Article,\n      RequestEntity,\n      ShoppingList,\n      AudioFile,\n    ]),\n    CallModule,\n    AudioStorageModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'documentation'),\n    }),\n  ],\n  controllers: [\n    AppController,\n    ArticlesController,\n    UserController,\n    RequestController,\n    ShoppingListController,\n    AudioStorageController,\n  ],\n  providers: [\n    AppService,\n    ArticlesService,\n    UsersService,\n    RequestService,\n    ShoppingListService,\n    AudioStorageService,\n  ],\n})\nexport class AppModule /* implements NestModule */ {\n  static port: string | number;\n  static isDev: boolean;\n\n  constructor(private readonly config: ConfigService) {\n    AppModule.port = process.env.PORT || config.get('API_PORT');\n    AppModule.isDev = config.isDev;\n  }\n\n  // DOC: https://docs.nestjs.com/middleware\n  // configure(consumer: MiddlewareConsumer) {\n  //   consumer\n  //     .apply(loggerMiddleware)\n  //     .forRoutes({ path: '/', method: RequestMethod.ALL });\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/main/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/main/app.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/main/app.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@nestjs/common';\n\nimport {ConfigService} from '../config/config.service';\n\n@Injectable()\nexport class AppService {\n  constructor(private config: ConfigService) {\n  }\n\n  root(): string {\n    return this.config.get('API_URL');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Article.html":{"url":"classes/Article.html","title":"class - Article","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Article\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/article.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Auto-incremented id of an article.', type: 'integer'})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/articles/article.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Name of the article, should also contain the unit.'})@Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/articles/article.entity.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({\n  name: 'articles',\n})\nexport class Article {\n  @ApiProperty({\n    description: 'Auto-incremented id of an article.',\n    type: 'integer',\n  })\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({\n    description: 'Name of the article, should also contain the unit.',\n  })\n  @Column({ length: 255 })\n  name!: string;\n}\n\nexport class ArticleFillableFields {\n  name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArticleFillableFields.html":{"url":"classes/ArticleFillableFields.html","title":"class - ArticleFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArticleFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/article.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/articles/article.entity.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({\n  name: 'articles',\n})\nexport class Article {\n  @ApiProperty({\n    description: 'Auto-incremented id of an article.',\n    type: 'integer',\n  })\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({\n    description: 'Name of the article, should also contain the unit.',\n  })\n  @Column({ length: 255 })\n  name!: string;\n}\n\nexport class ArticleFillableFields {\n  name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticlesController.html":{"url":"controllers/ArticlesController.html","title":"controller - ArticlesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticlesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/articles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                articles\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                insertOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'All existing articles', type: undefined})@ApiBadRequestResponse({description: 'Bad Request'})\n                \n            \n\n            \n                \n                    Defined in src/modules/articles/articles.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertOne(createArticleDto: CreateArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({description: 'Created', type: Article})@ApiBadRequestResponse({description: 'Bad Request'})\n                \n            \n\n            \n                \n                    Defined in src/modules/articles/articles.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createArticleDto\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, Get, Post} from '@nestjs/common';\nimport {ApiBadRequestResponse, ApiCreatedResponse, ApiOkResponse, ApiTags} from '@nestjs/swagger';\nimport {CreateArticleDto} from './dto/create-article.dto';\nimport {ArticlesService} from './articles.service';\nimport {Article} from './article.entity';\n\n@Controller('articles')\n@ApiTags('Articles')\nexport class ArticlesController {\n  constructor(private readonly articlesService: ArticlesService) {\n  }\n\n  @Post()\n  @ApiCreatedResponse({description: 'Created', type: Article})\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  async insertOne(@Body() createArticleDto: CreateArticleDto): Promise {\n    return this.articlesService.create(createArticleDto);\n  }\n\n  @Get()\n  @ApiOkResponse({\n    description: 'All existing articles',\n    type: [Article],\n  })\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  findAll(): Promise {\n    return this.articlesService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticlesService.html":{"url":"injectables/ArticlesService.html","title":"injectable - ArticlesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArticlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/articles.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(articlesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/articles/articles.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        articlesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createArticleDto: CreateArticleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/articles/articles.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createArticleDto\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/articles/articles.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/articles/articles.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateArticleDto } from './dto/create-article.dto';\nimport { Article } from './article.entity';\n\n@Injectable()\nexport class ArticlesService {\n  constructor(\n    @InjectRepository(Article)\n    private readonly articlesRepository: Repository,\n  ) {}\n\n  create(createArticleDto: CreateArticleDto): Promise {\n    const article = new Article();\n    article.name = createArticleDto.name;\n\n    return this.articlesRepository.save(article);\n  }\n\n  async findAll(): Promise {\n    return this.articlesRepository.find();\n  }\n\n  // findOne(id: string): Promise {\n  //   return this.articlesRepository.findOne(id);\n  // }\n\n  async remove(id: string): Promise {\n    await this.articlesRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AudioFile.html":{"url":"classes/AudioFile.html","title":"class - AudioFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AudioFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/audio-storage/audio-storage.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created\n                            \n                            \n                                id\n                            \n                            \n                                isUploaded\n                            \n                            \n                                path\n                            \n                            \n                                translated\n                            \n                            \n                                uploaded\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/audio-storage/audio-storage.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/audio-storage/audio-storage.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUploaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/audio-storage/audio-storage.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/audio-storage/audio-storage.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/audio-storage/audio-storage.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/audio-storage/audio-storage.entity.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from 'class-transformer';\nimport {\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n} from 'typeorm';\n\n@Entity({\n  name: 'audio-file',\n})\nexport class AudioFile {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @CreateDateColumn()\n  created!: Date;\n\n  @Column({\n    nullable: true,\n  })\n  uploaded!: Date;\n\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  path!: string;\n\n  @Column({\n    default: false,\n  })\n  isUploaded!: boolean;\n\n  @Column({\n    default: false,\n  })\n  translated!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AudioStorageController.html":{"url":"controllers/AudioStorageController.html","title":"controller - AudioStorageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AudioStorageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/audio-storage/audio-storage.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                audio-storage\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('audio-storage')\nexport class AudioStorageController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AudioStorageModule.html":{"url":"modules/AudioStorageModule.html","title":"module - AudioStorageModule","body":"\n                   \n\n\n\n\n    Modules\n    AudioStorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AudioStorageModule\n\n\n\ncluster_AudioStorageModule_imports\n\n\n\ncluster_AudioStorageModule_exports\n\n\n\ncluster_AudioStorageModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAudioStorageModule\n\nAudioStorageModule\n\nAudioStorageModule -->\n\nConfigModule->AudioStorageModule\n\n\n\n\n\nAudioStorageService \n\nAudioStorageService \n\nAudioStorageService  -->\n\nAudioStorageModule->AudioStorageService \n\n\n\n\n\nAudioStorageService\n\nAudioStorageService\n\nAudioStorageModule -->\n\nAudioStorageService->AudioStorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/audio-storage/audio-storage.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AudioStorageService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AudioStorageController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AudioStorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AudioStorageController } from './audio-storage.controller';\nimport { AudioStorageService } from './audio-storage.service';\nimport { TypeOrmModule, InjectRepository } from '@nestjs/typeorm';\nimport { AudioFile } from './audio-storage.entity';\nimport { ConfigModule } from '../config/config.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AudioFile]), ConfigModule],\n  exports: [AudioStorageService],\n  controllers: [AudioStorageController],\n  providers: [AudioStorageService],\n})\nexport class AudioStorageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioStorageService.html":{"url":"injectables/AudioStorageService.html","title":"injectable - AudioStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AudioStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/audio-storage/audio-storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                upload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                setTranslated\n                            \n                            \n                                    Async\n                                uploadToAWS\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(audioRepo: Repository, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/audio-storage/audio-storage.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        audioRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/audio-storage/audio-storage.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/audio-storage/audio-storage.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setTranslated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTranslated(translated: boolean, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/audio-storage/audio-storage.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    translated\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadToAWS\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadToAWS(req: any, res: any, audioFile: AudioFile)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/audio-storage/audio-storage.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    audioFile\n                                    \n                                                AudioFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : multer({\n    storage: multerS3({\n      s3,\n      bucket: this.configService.get('AWS_S3_BUCKET_NAME'),\n      acl: 'public-read',\n      key(request, file, cb) {\n        cb(null, `${Date.now().toString()} - ${file.originalname}`);\n      },\n    }),\n    fileFilter: (request, file, cb) => {\n      if (\n        file.mimetype === 'audio/mpeg' ||\n        file.mimetype === 'audio/ogg' ||\n        file.mimetype === 'audio/wav' ||\n        file.mimetype === 'audio/mp4'\n      ) {\n        cb(null, true);\n      } else {\n        cb(null, false);\n        return cb(new Error('File format error'));\n      }\n    },\n  }).array('upload', 1)\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/audio-storage/audio-storage.service.ts:70\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Req, Res } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AudioFile } from './audio-storage.entity';\nimport { Repository } from 'typeorm';\nimport { S3, config } from 'aws-sdk';\nimport { ConfigService } from '../config/config.service';\nimport * as multer from 'multer';\nimport * as multerS3 from 'multer-s3';\n\nconst s3 = new S3();\n\n@Injectable()\nexport class AudioStorageService {\n  constructor(\n    @InjectRepository(AudioFile)\n    private readonly audioRepo: Repository,\n    private readonly configService: ConfigService,\n  ) {\n    config.update({\n      accessKeyId: this.configService.get('AWS_ACCESS_KEY_ID'),\n      secretAccessKey: this.configService.get('AWS_SECRET_ACCESS_KEY'),\n    });\n  }\n\n  async uploadToAWS(\n    @Req() req: any,\n    @Res() res: any,\n    audioFile: AudioFile,\n  ): Promise {\n    try {\n      this.upload(req, res, (error: string) => {\n        if (error) {\n          return res.status(400).json(`Upload failed: ${error}`);\n        }\n\n        audioFile.path = req.files[0].location;\n        audioFile.uploaded = new Date();\n        audioFile.isUploaded = true;\n        this.audioRepo.save(audioFile);\n\n        return res.status(201).json('Upload successful');\n      });\n    } catch (error) {\n      return res.status(400).json(`Upload failed: ${error}`);\n    }\n  }\n\n  async getById(id: number): Promise {\n    return await this.audioRepo.findOne({ id });\n  }\n\n  async create(): Promise {\n    const newAudioFile = await this.audioRepo.create();\n    await this.audioRepo.save(newAudioFile);\n    return newAudioFile.id;\n  }\n\n  async setTranslated(translated: boolean, id: number): Promise {\n    const audioFile = await this.getById(id);\n\n    if (audioFile) {\n      audioFile.translated = true;\n      this.audioRepo.save(audioFile);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  upload = multer({\n    storage: multerS3({\n      s3,\n      bucket: this.configService.get('AWS_S3_BUCKET_NAME'),\n      acl: 'public-read',\n      key(request, file, cb) {\n        cb(null, `${Date.now().toString()} - ${file.originalname}`);\n      },\n    }),\n    fileFilter: (request, file, cb) => {\n      if (\n        file.mimetype === 'audio/mpeg' ||\n        file.mimetype === 'audio/ogg' ||\n        file.mimetype === 'audio/wav' ||\n        file.mimetype === 'audio/mp4'\n      ) {\n        cb(null, true);\n      } else {\n        cb(null, false);\n        return cb(new Error('File format error'));\n      }\n    },\n  }).array('upload', 1);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: LoginPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiOkResponse({description: 'Successful Login', type: ResponseTokenDto})@ApiBadRequestResponse({description: 'Bad Request'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(payload: RegisterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiCreatedResponse({description: 'Successful Registration', type: ResponseTokenDto})@ApiBadRequestResponse({description: 'Bad Request'})@ApiNotAcceptableResponse({description: 'Already exists'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, Logger, Post} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiNotAcceptableResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\n\nimport {AuthService} from './auth.service';\nimport {LoginPayload} from './login.payload';\nimport {RegisterPayload} from './register.payload';\nimport {UsersService} from '../user/user.service';\nimport {ResponseTokenDto} from './dto/response-token.dt';\n\n@Controller('auth')\n@ApiTags('Authentication')\nexport class AuthController {\n  static LOGGER = new Logger('Auth', true);\n\n  constructor(\n    private readonly authService: AuthService,\n    private readonly userService: UsersService,\n  ) {\n  }\n\n  @Post('login')\n  @ApiOkResponse({\n    description: 'Successful Login',\n    type: ResponseTokenDto,\n  })\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  @ApiUnauthorizedResponse({description: 'Unauthorized'})\n  async login(@Body() credentials: LoginPayload): Promise {\n    const user = await this.authService.validateUser(credentials);\n    return await this.authService.generateToken(user);\n  }\n\n  @Post('register')\n  @ApiCreatedResponse({\n    description: 'Successful Registration',\n    type: ResponseTokenDto,\n  })\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  @ApiNotAcceptableResponse({description: 'Already exists'})\n  async register(@Body() payload: RegisterPayload): Promise {\n    const user = await this.userService.create(payload);\n    AuthController.LOGGER.log(user);\n    return await this.authService.generateToken(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {JwtModule} from '@nestjs/jwt';\nimport {PassportModule} from '@nestjs/passport';\n\nimport {ConfigModule} from '../config/config.module';\nimport {ConfigService} from '../config/config.service';\nimport {UserModule} from '../user/user.module';\nimport {AuthService} from './auth.service';\nimport {JwtStrategy} from './jwt.strategy';\nimport {AuthController} from './auth.controller';\n\n@Module({\n  imports: [\n    UserModule,\n    ConfigModule,\n    PassportModule.register({defaultStrategy: 'jwt'}),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          secret: configService.get('JWT_SECRET'),\n          signOptions: {\n            expiresIn: Number(configService.get('JWT_EXPIRATION_TIME')),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [PassportModule.register({defaultStrategy: 'jwt'})],\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(undefined: LoginPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable, UnauthorizedException} from '@nestjs/common';\nimport {JwtService} from '@nestjs/jwt';\n\nimport {ConfigService} from '../config/config.service';\nimport {User} from '../user/user.entity';\nimport {UsersService} from '../user/user.service';\nimport {LoginPayload} from './login.payload';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    private readonly userService: UsersService,\n  ) {\n  }\n\n  async generateToken(user: User) {\n    const userPayload = user;\n    delete userPayload.password;\n\n    return {\n      expiresIn: Number(this.configService.get('JWT_EXPIRATION_TIME')),\n      accessToken: this.jwtService.sign({...userPayload}),\n      id: user.id,\n    };\n  }\n\n  async validateUser({email, password}: LoginPayload): Promise {\n    const user = await this.userService.getByEmailAndPass(email, password);\n    if (!user) {\n      throw new UnauthorizedException('Wrong email or password !');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CallController.html":{"url":"controllers/CallController.html","title":"controller - CallController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CallController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/call/call.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                call\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                download\n                            \n                            \n                                index\n                            \n                            \n                                    Async\n                                init_upload\n                            \n                            \n                                    Async\n                                translated\n                            \n                            \n                                    Async\n                                upload\n                            \n                            \n                                    Async\n                                webhook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            download\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    download(req: any, res: any, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('download/:id')@ApiOkResponse({description: 'Successful'})@ApiBadRequestResponse({description: 'Bad Request'})@ApiParam({name: 'id', description: 'audio id', type: 'integer'})@Redirect('https://google.com', 302)\n                \n            \n\n            \n                \n                    Defined in src/modules/call/call.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            index\n                        \n                        \n                    \n                \n            \n            \n                \nindex()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Successful'})\n                \n            \n\n            \n                \n                    Defined in src/modules/call/call.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            init_upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init_upload()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('upload')@ApiResponse({status: undefined, description: 'Success'})@ApiResponse({status: undefined, description: 'Bad Request'})@ApiResponse({status: undefined, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/call/call.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            translated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    translated(res: any, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('translated/:id')@ApiResponse({status: undefined, description: 'Success'})@ApiResponse({status: undefined, description: 'Bad Request'})@ApiResponse({status: undefined, description: 'Unauthorized'})@ApiParam({name: 'id', description: 'audio id', type: 'integer'})\n                \n            \n\n            \n                \n                    Defined in src/modules/call/call.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(req: any, res: any, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload/:id')@ApiResponse({status: undefined, description: 'Success'})@ApiResponse({status: undefined, description: 'Bad Request'})@ApiResponse({status: undefined, description: 'Unauthorized'})@ApiParam({name: 'id', description: 'audio id', type: 'integer'})\n                \n            \n\n            \n                \n                    Defined in src/modules/call/call.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            webhook\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    webhook()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('webhook')@ApiResponse({status: undefined, description: 'Success'})@ApiResponse({status: undefined, description: 'Bad Request'})@ApiResponse({status: undefined, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/call/call.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Body,\n  HttpStatus,\n  UseInterceptors,\n  Post,\n  UploadedFile,\n  Req,\n  Res,\n  Param,\n  Redirect,\n  Put,\n} from '@nestjs/common';\nimport {\n  ApiResponse,\n  ApiParam,\n  ApiBadRequestResponse,\n  ApiOkResponse,\n  ApiUnauthorizedResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { UploadCallPayloadDto } from './dto/upload-call-payload.dto';\nimport { TranslatedCallPayloadDto } from './dto/translated-call-payload.dto';\nimport { AudioStorageService } from '../audio-storage/audio-storage.service';\nimport { AudioFile } from '../audio-storage/audio-storage.entity';\n\n@Controller('call')\n@ApiTags('Calls')\n@ApiUnauthorizedResponse({ description: 'Unauthorized' })\nexport class CallController {\n  constructor(private readonly audioStorageService: AudioStorageService) {}\n\n  @Get()\n  @ApiOkResponse({ description: 'Successful' })\n  index(): string {\n    return 'call';\n  }\n\n  @Get('download/:id')\n  @ApiOkResponse({ description: 'Successful' })\n  @ApiBadRequestResponse({ description: 'Bad Request' })\n  @ApiParam({\n    name: 'id',\n    description: 'audio id',\n    type: 'integer',\n  })\n  @Redirect('https://google.com', 302)\n  async download(\n    @Req() req: any,\n    @Res() res: any,\n    @Param('id') id: number,\n  ): Promise {\n    const audioFile: AudioFile = await this.audioStorageService.getById(id);\n\n    return {\n      url: audioFile.path,\n      statusCode: 302,\n    };\n  }\n\n  @Get('webhook')\n  @ApiResponse({ status: HttpStatus.ACCEPTED, description: 'Success' })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, description: 'Bad Request' })\n  @ApiResponse({ status: HttpStatus.UNAUTHORIZED, description: 'Unauthorized' })\n  async webhook(): Promise {}\n\n  @Get('upload')\n  @ApiResponse({ status: HttpStatus.ACCEPTED, description: 'Success' })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, description: 'Bad Request' })\n  @ApiResponse({ status: HttpStatus.UNAUTHORIZED, description: 'Unauthorized' })\n  async init_upload(): Promise {\n    return { id: await this.audioStorageService.create() };\n  }\n\n  @Post('upload/:id')\n  @ApiResponse({ status: HttpStatus.ACCEPTED, description: 'Success' })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, description: 'Bad Request' })\n  @ApiResponse({ status: HttpStatus.UNAUTHORIZED, description: 'Unauthorized' })\n  @ApiParam({\n    name: 'id',\n    description: 'audio id',\n    type: 'integer',\n  })\n  async upload(\n    @Req() req: any,\n    @Res() res: any,\n    @Param('id') id: number,\n  ): Promise {\n    try {\n      const fileEntry = await this.audioStorageService.getById(id);\n      if (fileEntry) {\n        await this.audioStorageService.uploadToAWS(req, res, fileEntry);\n      } else {\n        return res.status(400).json(`Failed to upload file, undefined id.`);\n      }\n    } catch (error) {\n      return res.status(500).json(`Failed to upload file: ${error.message}`);\n    }\n  }\n\n  @Put('translated/:id')\n  @ApiResponse({ status: HttpStatus.ACCEPTED, description: 'Success' })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, description: 'Bad Request' })\n  @ApiResponse({ status: HttpStatus.UNAUTHORIZED, description: 'Unauthorized' })\n  @ApiParam({\n    name: 'id',\n    description: 'audio id',\n    type: 'integer',\n  })\n  async translated(@Res() res: any, @Param('id') id: number): Promise {\n    if (this.audioStorageService.setTranslated(true, id)) {\n      return res.status(200).json('Set translated successfull');\n    } else {\n      return res.status(500).json('Failed to set translated');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CallModule.html":{"url":"modules/CallModule.html","title":"module - CallModule","body":"\n                   \n\n\n\n\n    Modules\n    CallModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CallModule\n\n\n\ncluster_CallModule_imports\n\n\n\ncluster_CallModule_providers\n\n\n\n\nAudioStorageModule\n\nAudioStorageModule\n\n\n\nCallModule\n\nCallModule\n\nCallModule -->\n\nAudioStorageModule->CallModule\n\n\n\n\n\nCallService\n\nCallService\n\nCallModule -->\n\nCallService->CallModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/call/call.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CallService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CallController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AudioStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CallController } from './call.controller';\nimport { CallService } from './call.service';\nimport { AudioStorageModule } from '../audio-storage/audio-storage.module';\n\n@Module({\n  imports: [AudioStorageModule],\n  controllers: [CallController],\n  providers: [CallService],\n})\nexport class CallModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CallService.html":{"url":"injectables/CallService.html","title":"injectable - CallService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CallService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/call/call.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CallService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\n\nimport {ConfigService} from './config.service';\n\n@Module({\n  providers: [\n    {\n      provide: ConfigService,\n      useValue: new ConfigService(`.env.${process.env.NODE_ENV}`),\n    },\n  ],\n  exports: [ConfigService],\n})\nexport class ConfigModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                envConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                    Private\n                                validateInput\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isDev\n                                \n                                \n                                    isProd\n                                \n                                \n                                    isTest\n                                \n                                \n                                    databaseType\n                                \n                                \n                                    databaseHost\n                                \n                                \n                                    databasePort\n                                \n                                \n                                    databaseUsername\n                                \n                                \n                                    databasePassword\n                                \n                                \n                                    databaseName\n                                \n                                \n                                    jwtSecret\n                                \n                                \n                                    googleauthClientId\n                                \n                                \n                                    googleauthClientSecret\n                                \n                                \n                                    googleauthRedirectUri\n                                \n                                \n                                    twillioAccountSSID\n                                \n                                \n                                    twillioAuthtoken\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePath: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/config/config.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            envConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DotenvParseOutput\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/config/config.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:79\n                \n            \n\n\n            \n                \n                    Generic getter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateInput(parsedConfig: DotenvParseOutput)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:87\n                \n            \n\n\n            \n                \n                    Ensures all needed variables are set, and returns the validated JavaScript object\nincluding the applied default values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parsedConfig\n                                    \n                                            DotenvParseOutput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isDev\n                    \n                \n\n                \n                    \n                        getisDev()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:16\n                                \n                            \n                    \n                        \n                                Getters for each environment variable\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isProd\n                    \n                \n\n                \n                    \n                        getisProd()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:20\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTest\n                    \n                \n\n                \n                    \n                        getisTest()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseType\n                    \n                \n\n                \n                    \n                        getdatabaseType()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseHost\n                    \n                \n\n                \n                    \n                        getdatabaseHost()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databasePort\n                    \n                \n\n                \n                    \n                        getdatabasePort()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseUsername\n                    \n                \n\n                \n                    \n                        getdatabaseUsername()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:40\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databasePassword\n                    \n                \n\n                \n                    \n                        getdatabasePassword()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseName\n                    \n                \n\n                \n                    \n                        getdatabaseName()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        jwtSecret\n                    \n                \n\n                \n                    \n                        getjwtSecret()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:52\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        googleauthClientId\n                    \n                \n\n                \n                    \n                        getgoogleauthClientId()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:56\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        googleauthClientSecret\n                    \n                \n\n                \n                    \n                        getgoogleauthClientSecret()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:60\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        googleauthRedirectUri\n                    \n                \n\n                \n                    \n                        getgoogleauthRedirectUri()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:64\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        twillioAccountSSID\n                    \n                \n\n                \n                    \n                        gettwillioAccountSSID()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:68\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        twillioAuthtoken\n                    \n                \n\n                \n                    \n                        gettwillioAuthtoken()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:72\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {DotenvParseOutput, parse} from 'dotenv';\nimport {readFileSync} from 'fs';\nimport * as Joi from 'joi';\n\nexport class ConfigService {\n  private readonly envConfig: DotenvParseOutput;\n\n  constructor(filePath: string) {\n    const parsedConfig = parse(readFileSync(filePath));\n    this.envConfig = this.validateInput(parsedConfig);\n  }\n\n  /**\n   * Getters for each environment variable\n   */\n  public get isDev() {\n    return this.envConfig.NODE_ENV === 'development';\n  }\n\n  public get isProd() {\n    return this.envConfig.NODE_ENV === 'production';\n  }\n\n  public get isTest() {\n    return this.envConfig.NODE_ENV === 'test';\n  }\n\n  public get databaseType() {\n    return this.envConfig.DATABASE_TYPE;\n  }\n\n  public get databaseHost() {\n    return this.envConfig.DATABASE_HOST;\n  }\n\n  public get databasePort() {\n    return Number(this.envConfig.DATABASE_PORT);\n  }\n\n  public get databaseUsername() {\n    return this.envConfig.DATABASE_USERNAME;\n  }\n\n  public get databasePassword() {\n    return this.envConfig.DATABASE_PASSWORD;\n  }\n\n  public get databaseName() {\n    return this.envConfig.DATABASE_NAME;\n  }\n\n  public get jwtSecret() {\n    return this.envConfig.JWT_SECRET;\n  }\n\n  public get googleauthClientId() {\n    return this.envConfig.GOOGLEAUTH_CLIENT_ID;\n  }\n\n  public get googleauthClientSecret() {\n    return this.envConfig.GOOGLEAUTH_CLIENT_SECRET;\n  }\n\n  public get googleauthRedirectUri() {\n    return this.envConfig.GOOGLEAUTH_REDIRECT_URI;\n  }\n\n  public get twillioAccountSSID(){\n    return this.envConfig.TWILIO_ACCOUNT_SSID;\n  }\n\n  public get twillioAuthtoken(){\n    return this.envConfig.TWILIO_ACCOUNT_SSID;\n  }\n\n  /**\n   * Generic getter\n   */\n  get(key: string) {\n    return this.envConfig[key];\n  }\n\n  /**\n   * Ensures all needed variables are set, and returns the validated JavaScript object\n   * including the applied default values.\n   */\n  private validateInput(parsedConfig: DotenvParseOutput) {\n    const envVarsSchema: Joi.ObjectSchema = Joi.object({\n      NODE_ENV: Joi.string()\n        .valid(['development', 'production', 'test', 'provision'])\n        .default('development'),\n      DATABASE_TYPE: Joi.string()\n        .valid([\n          'cockroachdb',\n          'cordova',\n          'mariadb',\n          'mongodb',\n          'mssql',\n          'mysql',\n          'nativescript',\n          'oracle',\n          'postgres',\n          'react-native',\n          'sqlite',\n          'sqljs',\n        ])\n        .required(),\n      PORT: Joi.number(),\n      // API_AUTH_ENABLED: Joi.boolean()\n      //   .required()\n      //   .default(true),\n      // add more validation rules ...\n      TWILIO_ACCOUNT_SSID: Joi.string().required(),\n      TWILIO_AUTH_TOKEN: Joi.string().required()\n    });\n\n    const validationOptions: Joi.ValidationOptions = {allowUnknown: true};\n\n    const {error, value: validatedEnvConfig} = Joi.validate(\n      parsedConfig,\n      envVarsSchema,\n      validationOptions,\n    );\n    if (error) {\n      throw new Error(`Config validation error: ${error.message}`);\n    }\n    return validatedEnvConfig;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateArticleDto.html":{"url":"classes/CreateArticleDto.html","title":"class - CreateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/dto/create-article.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'Name of the article, should also contain the unit.'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/articles/dto/create-article.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class CreateArticleDto {\n  @ApiProperty({\n    required: true,\n    description: 'Name of the article, should also contain the unit.',\n  })\n  @IsString()\n  readonly name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRequestArticleDto.html":{"url":"classes/CreateRequestArticleDto.html","title":"class - CreateRequestArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRequestArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/dto/request-form.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                articleCount\n                            \n                            \n                                    Readonly\n                                articleId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            articleCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'Number of items', type: 'integer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            articleId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'Article ID received from the article list', type: 'integer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { AddressModel } from '../../main/models/address.model';\n\nexport class CreateRequestArticleDto {\n  @ApiProperty({\n    required: true,\n    description: 'Article ID received from the article list',\n    type: 'integer',\n  })\n  readonly articleId!: number;\n\n  @ApiProperty({\n    required: true,\n    description: 'Number of items',\n    type: 'integer',\n  })\n  readonly articleCount!: number;\n}\n\nexport class RequestFormDto extends AddressModel {\n  @ApiProperty({\n    required: true,\n    description: 'List of articles',\n    type: [CreateRequestArticleDto],\n  })\n  readonly articles!: CreateRequestArticleDto[];\n\n  @ApiProperty()\n  readonly additionalRequest?: string;\n  @ApiProperty()\n  readonly deliveryComment?: string;\n  @ApiProperty()\n  readonly phoneNumber?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\n\nimport { ConfigModule } from '../config/config.module';\nimport { ConfigService } from '../config/config.service';\nimport { User } from '../user/user.entity';\nimport { RequestEntity } from '../request/request.entity';\nimport { Article } from '../articles/article.entity';\nimport { RequestArticle } from '../request/requestArticle.entity';\nimport { ShoppingList } from '../shoppingList/shopping-list.entity';\nimport { ShoppingListRequest } from '../shoppingList/shopping-list-request.entity';\nimport { AudioFile } from '../audio-storage/audio-storage.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) =>\n        ({\n          type: config.databaseType,\n          host: config.databaseHost,\n          port: config.databasePort,\n          database: config.databaseName,\n          username: config.databaseUsername,\n          password: config.databasePassword,\n          // importing entities directly because Webpack + glob path pattern + ts file = crash\n          // https://github.com/nestjs/nest/issues/711\n          entities: [\n            User,\n            Article,\n            RequestEntity,\n            RequestArticle,\n            ShoppingList,\n            ShoppingListRequest,\n            AudioFile,\n          ], // ['src/modules/**/*.entity{.ts,.js}'],\n          migrations: [\n            User,\n            Article,\n            RequestEntity,\n            RequestArticle,\n            ShoppingList,\n            ShoppingListRequest,\n            AudioFile,\n          ], // ['src/modules/**/*.migration{.ts,.js}'],\n          synchronize: config.isDev,\n          // synchronize: false,\n          logging: !config.isProd,\n          useNewUrlParser: true,\n        } as TypeOrmModuleOptions),\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequestUser.html":{"url":"interfaces/IRequestUser.html","title":"interface - IRequestUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRequestUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/decorators/user.decorator.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createParamDecorator } from '@nestjs/common';\nimport { User } from '../../user/user.entity';\n\nexport interface IRequestUser extends Request {\n  user?: User;\n}\n\nexport const ReqUser = createParamDecorator((data, req: IRequestUser) => {\n  return req.user;\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/guards/jwt-guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  // canActivate(context: ExecutionContext) {\n  //   // Add your custom authentication logic here\n  //   // for example, call super.logIn(request) to establish a session.\n  //   return super.canActivate(context);\n  // }\n  // // @ts-ignore: implicit-any\n  // handleRequest(err, user, info) {\n  //   if (err || !user) {\n  //     throw err || new UnauthorizedException();\n  //   }\n  //   return user;\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        exp\n                                \n                                \n                                            Optional\n                                        iat\n                                \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  sub: string;\n  iat?: number;\n  exp?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/jwt.strategy.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport { ConfigService } from '../config/config.service';\nimport { AuthService } from './auth.service';\nimport { LoginPayload } from './login.payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly configService: ConfigService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: true,\n      secretOrKey: configService.get('JWT_SECRET'),\n      // passReqToCallback: true,\n    });\n  }\n\n  // async validate({ iat, exp }: JwtPayload) {\n  //   const isExpired = exp - iat \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayload.html":{"url":"classes/LoginPayload.html","title":"class - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/login.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/login.payload.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()@MinLength(5)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/login.payload.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger';\nimport {IsEmail, IsNotEmpty, MinLength} from 'class-validator';\n\nexport class LoginPayload {\n  @ApiProperty({required: true})\n  @IsEmail()\n  email!: string;\n\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  @MinLength(5)\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordTransformer.html":{"url":"classes/PasswordTransformer.html","title":"class - PasswordTransformer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordTransformer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/password.transformer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ValueTransformer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            from\n                        \n                        \n                    \n                \n            \n            \n                \nfrom(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/password.transformer.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            to\n                        \n                        \n                    \n                \n            \n            \n                \nto(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/password.transformer.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\nimport { ValueTransformer } from 'typeorm';\nimport { UserModule } from './user.module';\n\nexport class PasswordTransformer implements ValueTransformer {\n  from(value: string) {\n    return value;\n  }\n\n  to(value: string) {\n    return crypto.createHmac('sha256', value).digest('hex');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterPayload.html":{"url":"classes/RegisterPayload.html","title":"class - RegisterPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/register.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, example: 'test@test.com'})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/register.payload.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/register.payload.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/register.payload.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()@MinLength(5)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/register.payload.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, enum: UserRole, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/register.payload.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger';\nimport {IsEmail, IsNotEmpty, MinLength} from 'class-validator';\nimport {UserRole} from '../user/user-role';\n\nexport class RegisterPayload {\n  @ApiProperty({required: true, example: 'test@test.com'})\n  @IsEmail()\n  email!: string;\n\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  firstName!: string;\n\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  lastName!: string;\n\n  @ApiProperty({required: false, enum: UserRole, default: UserRole.NONE})\n  role?: string;\n\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  @MinLength(5)\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestArticle.html":{"url":"classes/RequestArticle.html","title":"class - RequestArticle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestArticle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/requestArticle.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articleCount\n                            \n                            \n                                articleDone\n                            \n                            \n                                articleId\n                            \n                            \n                                id\n                            \n                            \n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articleCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articleDone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articleId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { RequestEntity } from './request.entity';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity({\n  name: 'requestArticle',\n})\nexport class RequestArticle {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({ required: true })\n  @Column()\n  articleId!: number;\n\n  @ApiProperty({ required: true })\n  @Column()\n  articleCount!: number;\n\n  @ApiProperty({ required: true })\n  @Column({ default: false })\n  articleDone!: boolean;\n\n  @ManyToOne(\n    type => RequestEntity,\n    request => request.articles,\n  )\n  request!: RequestEntity;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestArticleStatusDto.html":{"url":"classes/RequestArticleStatusDto.html","title":"class - RequestArticleStatusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestArticleStatusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/dto/shopping-list-form.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articleDone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articleDone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/dto/shopping-list-form.dto.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ShoppingListStatus } from '../shopping-list-status';\n\nexport class ShoppingListFormDto {\n  @ApiProperty({\n    required: true,\n    description: 'List of request IDs',\n    type: ['integer'],\n  })\n  readonly requests!: number[];\n\n  @ApiProperty({\n    required: false,\n    enum: ShoppingListStatus,\n    default: ShoppingListStatus.ACTIVE,\n    type: ShoppingListStatus,\n  })\n  status!: string;\n}\n\nexport class RequestArticleStatusDto {\n  @ApiProperty({\n    required: true,\n  })\n  articleDone!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RequestController.html":{"url":"controllers/RequestController.html","title":"controller - RequestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RequestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/request.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                request\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getSingleRequest\n                            \n                            \n                                    Async\n                                insertRequestWithArticles\n                            \n                            \n                                    Async\n                                markArticleAsDone\n                            \n                            \n                                    Async\n                                updateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(onlyMine: string, zipCode: string, user: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Successful', type: undefined})@ApiQuery({name: 'onlyMine', required: false, description: 'if \"true\", only the requesting user requests will be replied.'})@ApiQuery({name: 'zipCode', required: false, description: 'if set, only requests within the same zip code will be replied'})\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onlyMine\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    zipCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSingleRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSingleRequest(requestId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':requestId')@ApiOkResponse({description: 'Successful', type: RequestEntity})@ApiBadRequestResponse({description: 'Bad request'})@ApiNotFoundResponse({description: 'Request not found'})\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertRequestWithArticles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertRequestWithArticles(createRequestDto: RequestFormDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({description: 'Add a complete request including articles.', type: RequestEntity})@Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRequestDto\n                                    \n                                                RequestFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            markArticleAsDone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markArticleAsDone(requestId: number, articleId: number, articleStatus: RequestArticleStatusDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':requestId/:articleId')@ApiOkResponse({description: 'Successful', type: RequestEntity})@ApiBadRequestResponse({description: 'Bad request'})@ApiNotFoundResponse({description: 'Request not found'})\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleStatus\n                                    \n                                                RequestArticleStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRequest(requestId: number, requestFormDto: RequestFormDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':requestId')@ApiOkResponse({description: 'Successful', type: RequestEntity})@ApiBadRequestResponse({description: 'Bad request'})@ApiNotFoundResponse({description: 'Request not found'})\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestFormDto\n                                    \n                                                RequestFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Logger,\n  NotFoundException,\n  Param,\n  Post,\n  Put,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiQuery,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { RequestService } from './request.service';\nimport { RequestEntity } from './request.entity';\nimport { RequestFormDto } from './dto/request-form.dto';\nimport { ReqUser } from '../common/decorators/user.decorator';\nimport { JwtAuthGuard } from '../common/guards/jwt-guard';\nimport { RequestArticleStatusDto } from '../shoppingList/dto/shopping-list-form.dto';\nimport { UserID } from '../user/user.entity';\nimport { UsersService } from '../user/user.service';\n\n@ApiBearerAuth()\n@ApiTags('Request')\n@UseGuards(JwtAuthGuard)\n@ApiUnauthorizedResponse({ description: 'Unauthorized' })\n@Controller('request')\nexport class RequestController {\n  static LOGGER = new Logger('Request', true);\n\n  constructor(\n    private readonly requestService: RequestService,\n    private readonly userService: UsersService,\n  ) {}\n\n  @Get()\n  @ApiOkResponse({ description: 'Successful', type: [RequestEntity] })\n  @ApiQuery({\n    name: 'onlyMine',\n    required: false,\n    description:\n      'if \"true\", only the requesting user requests will be replied.',\n  })\n  @ApiQuery({\n    name: 'zipCode',\n    required: false,\n    description:\n      'if set, only requests within the same zip code will be replied',\n  })\n  async getAll(\n    @Query('onlyMine') onlyMine: string,\n    @Query('zipCode') zipCode: string,\n    @ReqUser() user: any,\n  ): Promise {\n    const requests = await this.requestService.getAll(user, onlyMine, zipCode);\n    if (onlyMine !== 'true')\n      requests.map(async r => {\n        r.requester = await this.userService.get(r.requesterId);\n      });\n    return requests;\n  }\n\n  @ApiCreatedResponse({\n    description: 'Add a complete request including articles.',\n    type: RequestEntity,\n  })\n  @Post()\n  async insertRequestWithArticles(\n    @Body() createRequestDto: RequestFormDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const entity = await this.requestService.create(createRequestDto, user);\n    entity.requester = await this.userService.get(entity.requesterId);\n    return entity;\n  }\n\n  @Get(':requestId')\n  @ApiOkResponse({ description: 'Successful', type: RequestEntity })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiNotFoundResponse({ description: 'Request not found' })\n  async getSingleRequest(\n    @Param('requestId') requestId: number,\n  ): Promise {\n    const entity = await this.requestService.get(requestId);\n    if (!entity) {\n      throw new NotFoundException('This request does not exist');\n    }\n    entity.requester = await this.userService.get(entity.requesterId);\n    return entity;\n  }\n\n  @Put(':requestId')\n  @ApiOkResponse({ description: 'Successful', type: RequestEntity })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiNotFoundResponse({ description: 'Request not found' })\n  async updateRequest(\n    @Param('requestId') requestId: number,\n    @Body() requestFormDto: RequestFormDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const entity = await this.requestService.update(requestId, requestFormDto);\n    entity.requester = await this.userService.get(entity.requesterId);\n    return entity;\n  }\n\n  @Put(':requestId/:articleId')\n  @ApiOkResponse({ description: 'Successful', type: RequestEntity })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiNotFoundResponse({ description: 'Request not found' })\n  async markArticleAsDone(\n    @Param('requestId') requestId: number,\n    @Param('articleId') articleId: number,\n    @Body() articleStatus: RequestArticleStatusDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const entity = await this.requestService.updateRequestArticle(\n      requestId,\n      articleId,\n      articleStatus,\n    );\n    entity.requester = await this.userService.get(entity.requesterId);\n    return entity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestEntity.html":{"url":"classes/RequestEntity.html","title":"class - RequestEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/request.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AddressModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                additionalRequest\n                            \n                            \n                                articles\n                            \n                            \n                                created_at\n                            \n                            \n                                    Optional\n                                deliveryComment\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    Optional\n                                priority\n                            \n                            \n                                requester\n                            \n                            \n                                requesterId\n                            \n                            \n                                status\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                number\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            additionalRequest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestArticle[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: undefined})@OneToMany(undefined, undefined, {cascade: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()@CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deliveryComment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'integer'})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            priority\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({name: 'priority', type: 'enum', default: 'low', enum: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requester\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: User})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requesterId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'integer'})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({type: 'enum', enum: RequestStatus, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:24\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { RequestArticle } from './requestArticle.entity';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { RequestStatus } from './request-status';\nimport { AddressModel } from '../main/models/address.model';\nimport { User } from '../user/user.entity';\nimport { Exclude } from 'class-transformer';\n\n@Entity({\n  name: 'request',\n})\nexport class RequestEntity extends AddressModel {\n  @ApiProperty({ type: 'integer' })\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty()\n  @Column()\n  @CreateDateColumn()\n  created_at!: Date;\n\n  @ApiProperty({ type: 'integer' })\n  @Column()\n  requesterId!: number;\n\n  @ApiProperty()\n  @Column({\n    name: 'priority',\n    type: 'enum',\n    default: 'low',\n    enum: ['low', 'medium', 'high'],\n  })\n  priority?: string;\n\n  @ApiProperty()\n  @Column({ nullable: true })\n  additionalRequest?: string;\n\n  @ApiProperty()\n  @Column({ nullable: true })\n  deliveryComment?: string;\n\n  @ApiProperty()\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  phoneNumber?: string;\n\n  @ApiProperty()\n  @Column({\n    type: 'enum',\n    enum: RequestStatus,\n    default: RequestStatus.NEW,\n  })\n  status!: string;\n\n  @ApiProperty({ type: [RequestArticle] })\n  @OneToMany(\n    type => RequestArticle,\n    requestArticle => requestArticle.request,\n    { cascade: true },\n  )\n  articles!: RequestArticle[];\n\n  @ApiPropertyOptional({ type: User })\n  @Exclude()\n  requester!: User;\n}\n\nexport class RequestFillableFields {\n  requesterId!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestFillableFields.html":{"url":"classes/RequestFillableFields.html","title":"class - RequestFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/request.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                requesterId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requesterId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:78\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { RequestArticle } from './requestArticle.entity';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { RequestStatus } from './request-status';\nimport { AddressModel } from '../main/models/address.model';\nimport { User } from '../user/user.entity';\nimport { Exclude } from 'class-transformer';\n\n@Entity({\n  name: 'request',\n})\nexport class RequestEntity extends AddressModel {\n  @ApiProperty({ type: 'integer' })\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty()\n  @Column()\n  @CreateDateColumn()\n  created_at!: Date;\n\n  @ApiProperty({ type: 'integer' })\n  @Column()\n  requesterId!: number;\n\n  @ApiProperty()\n  @Column({\n    name: 'priority',\n    type: 'enum',\n    default: 'low',\n    enum: ['low', 'medium', 'high'],\n  })\n  priority?: string;\n\n  @ApiProperty()\n  @Column({ nullable: true })\n  additionalRequest?: string;\n\n  @ApiProperty()\n  @Column({ nullable: true })\n  deliveryComment?: string;\n\n  @ApiProperty()\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  phoneNumber?: string;\n\n  @ApiProperty()\n  @Column({\n    type: 'enum',\n    enum: RequestStatus,\n    default: RequestStatus.NEW,\n  })\n  status!: string;\n\n  @ApiProperty({ type: [RequestArticle] })\n  @OneToMany(\n    type => RequestArticle,\n    requestArticle => requestArticle.request,\n    { cascade: true },\n  )\n  articles!: RequestArticle[];\n\n  @ApiPropertyOptional({ type: User })\n  @Exclude()\n  requester!: User;\n}\n\nexport class RequestFillableFields {\n  requesterId!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestFormDto.html":{"url":"classes/RequestFormDto.html","title":"class - RequestFormDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestFormDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/dto/request-form.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AddressModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                additionalRequest\n                            \n                            \n                                    Readonly\n                                articles\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deliveryComment\n                            \n                            \n                                    Readonly\n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                number\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            additionalRequest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            articles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CreateRequestArticleDto[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'List of articles', type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deliveryComment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:24\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { AddressModel } from '../../main/models/address.model';\n\nexport class CreateRequestArticleDto {\n  @ApiProperty({\n    required: true,\n    description: 'Article ID received from the article list',\n    type: 'integer',\n  })\n  readonly articleId!: number;\n\n  @ApiProperty({\n    required: true,\n    description: 'Number of items',\n    type: 'integer',\n  })\n  readonly articleCount!: number;\n}\n\nexport class RequestFormDto extends AddressModel {\n  @ApiProperty({\n    required: true,\n    description: 'List of articles',\n    type: [CreateRequestArticleDto],\n  })\n  readonly articles!: CreateRequestArticleDto[];\n\n  @ApiProperty()\n  readonly additionalRequest?: string;\n  @ApiProperty()\n  readonly deliveryComment?: string;\n  @ApiProperty()\n  readonly phoneNumber?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RequestModule.html":{"url":"modules/RequestModule.html","title":"module - RequestModule","body":"\n                   \n\n\n\n\n    Modules\n    RequestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RequestModule\n\n\n\ncluster_RequestModule_imports\n\n\n\ncluster_RequestModule_exports\n\n\n\ncluster_RequestModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nRequestModule\n\nRequestModule\n\nRequestModule -->\n\nUserModule->RequestModule\n\n\n\n\n\nRequestService \n\nRequestService \n\nRequestService  -->\n\nRequestModule->RequestService \n\n\n\n\n\nRequestService\n\nRequestService\n\nRequestModule -->\n\nRequestService->RequestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/request/request.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RequestService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RequestController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RequestService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { RequestService } from './request.service';\nimport { RequestEntity } from './request.entity';\nimport { RequestController } from './request.controller';\nimport { UserModule } from '../user/user.module';\n\n@Module({\n  imports: [UserModule, TypeOrmModule.forFeature([RequestEntity])],\n  exports: [RequestService],\n  controllers: [RequestController],\n  providers: [RequestService],\n})\nexport class RequestModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestService.html":{"url":"injectables/RequestService.html","title":"injectable - RequestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/request.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                LOGGER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Private\n                                    Async\n                                findRequest\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Private\n                                populateRequest\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateRequestArticle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(requestRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/request/request.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRequestDto: RequestFormDto, user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRequestDto\n                                    \n                                                RequestFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findRequest(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(user: any, onlyMine: string, zipCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    onlyMine\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    zipCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            populateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populateRequest(request: RequestEntity, createRequestDto: RequestFormDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createRequestDto\n                                    \n                                                RequestFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(requestId: number, requestEntity: RequestFormDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestEntity\n                                    \n                                                RequestFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateRequestArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRequestArticle(requestId: number, articleId: number, articleStatusDto: RequestArticleStatusDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleStatusDto\n                                    \n                                                RequestArticleStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            LOGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('Request', true)\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  Logger,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Roles } from '../common/decorators/roles.decorator';\nimport { RequestEntity } from './request.entity';\nimport { RequestFormDto } from './dto/request-form.dto';\nimport { RequestArticle } from './requestArticle.entity';\nimport { RequestArticleStatusDto } from '../shoppingList/dto/shopping-list-form.dto';\n\n@Injectable()\n@Roles('user')\nexport class RequestService {\n  static LOGGER = new Logger('Request', true);\n\n  constructor(\n    @InjectRepository(RequestEntity)\n    private readonly requestRepository: Repository,\n  ) {}\n\n  async get(id: number) {\n    return this.requestRepository.findOne(id, { relations: ['articles'] });\n  }\n\n  async create(createRequestDto: RequestFormDto, user: any) {\n    const request = new RequestEntity();\n    this.populateRequest(request, createRequestDto);\n    request.requesterId = user.userId;\n\n    return this.requestRepository.save(request);\n  }\n\n  private populateRequest(\n    request: RequestEntity,\n    createRequestDto: RequestFormDto,\n  ) {\n    request.articles = [];\n    if (createRequestDto.articles) {\n      createRequestDto.articles.forEach(art => {\n        const newArticle = new RequestArticle();\n        newArticle.articleId = art.articleId;\n        newArticle.articleCount = art.articleCount;\n        newArticle.articleDone = false;\n        request.articles.push(newArticle);\n      });\n    }\n    request.additionalRequest = createRequestDto.additionalRequest;\n    request.phoneNumber = createRequestDto.phoneNumber;\n    request.deliveryComment = createRequestDto.deliveryComment;\n    request.city = createRequestDto.city;\n    request.street = createRequestDto.street;\n    request.number = createRequestDto.number;\n    request.zipCode = createRequestDto.zipCode;\n  }\n\n  async getAll(user: any, onlyMine: string, zipCode: string) {\n    const conditions: any = {};\n    if (onlyMine === 'true') {\n      conditions.requester = user.userId;\n    }\n    if (zipCode) {\n      conditions.zipCode = zipCode;\n    }\n    return await this.requestRepository.find({\n      where: conditions,\n      relations: ['articles'],\n    });\n  }\n\n  async updateRequestArticle(\n    requestId: number,\n    articleId: number,\n    articleStatusDto: RequestArticleStatusDto,\n  ) {\n    const request: RequestEntity = await this.findRequest(requestId);\n    const article = request.articles.find(\n      v => v.articleId === Number(articleId),\n    );\n    if (!article) {\n      throw new BadRequestException(\n        'This article does not exist in the request',\n      );\n    }\n    article.articleDone = articleStatusDto.articleDone;\n    return await this.requestRepository.save(request);\n  }\n\n  async update(requestId: number, requestEntity: RequestFormDto) {\n    const request: RequestEntity = await this.findRequest(requestId);\n    this.populateRequest(request, requestEntity);\n\n    return await this.requestRepository.save(request);\n  }\n\n  private async findRequest(id: number) {\n    const request: RequestEntity | undefined = await this.get(id);\n    if (!request) {\n      throw new NotFoundException('This request does not exist');\n    }\n    return request;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseTokenDto.html":{"url":"classes/ResponseTokenDto.html","title":"class - ResponseTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/response-token.dt.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                expiresIn\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'jwt token'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/response-token.dt.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'seconds until expiration', type: 'integer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/response-token.dt.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'user id', type: 'integer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/response-token.dt.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ResponseTokenDto {\n  @ApiProperty({\n    description: 'seconds until expiration',\n    type: 'integer',\n  })\n  expiresIn!: number;\n\n  @ApiProperty({\n    description: 'jwt token',\n  })\n  accessToken!: string;\n\n  @ApiProperty({\n    description: 'user id',\n    type: 'integer',\n  })\n  id!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingList.html":{"url":"classes/ShoppingList.html","title":"class - ShoppingList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                id\n                            \n                            \n                                owner\n                            \n                            \n                                requests\n                            \n                            \n                                status\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()@CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'integer'})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'integer'})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ShoppingListRequest[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: undefined})@OneToMany(undefined, undefined, {cascade: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: ShoppingListStatus, default: undefined, type: ShoppingListStatus})@Column({enum: ShoppingListStatus, type: 'enum', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()@UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ShoppingListRequest } from './shopping-list-request.entity';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ShoppingListStatus } from './shopping-list-status';\n\n@Entity({\n  name: 'shoppingList',\n})\nexport class ShoppingList {\n  @ApiProperty({ type: 'integer' })\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({ type: 'integer' })\n  @Column()\n  owner!: number;\n\n  @ApiProperty()\n  @Column()\n  @CreateDateColumn()\n  created_at!: Date;\n\n  @ApiProperty()\n  @Column()\n  @UpdateDateColumn()\n  updated_at!: Date;\n\n  @ApiProperty({\n    enum: ShoppingListStatus,\n    default: ShoppingListStatus.ACTIVE,\n    type: ShoppingListStatus,\n  })\n  @Column({\n    enum: ShoppingListStatus,\n    type: 'enum',\n    default: ShoppingListStatus.ACTIVE,\n  })\n  status!: string;\n\n  @ApiProperty({ type: [ShoppingListRequest] })\n  @OneToMany(\n    type => ShoppingListRequest,\n    shoppingListRequest => shoppingListRequest.shoppingList,\n    { cascade: true },\n  )\n  requests!: ShoppingListRequest[];\n}\n\nexport class ShoppingListFillableFields {\n  owner!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ShoppingListController.html":{"url":"controllers/ShoppingListController.html","title":"controller - ShoppingListController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ShoppingListController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                shopping-list\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRequestToList\n                            \n                            \n                                    Async\n                                deleteRequestFromList\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                    Async\n                                findShoppingList\n                            \n                            \n                                    Async\n                                getUserLists\n                            \n                            \n                                    Async\n                                insertNewShoppingList\n                            \n                            \n                                    Async\n                                updateShoppingList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addRequestToList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addRequestToList(shoppingListId: number, requestId: number, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':shoppingListId/:requestId')@ApiOkResponse({description: 'Successful', type: ShoppingList})@ApiBadRequestResponse({description: 'Bad request'})@ApiForbiddenResponse({description: 'This is not your shopping list'})@ApiNotFoundResponse({description: 'Shopping list not found'})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shoppingListId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteRequestFromList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRequestFromList(shoppingListId: number, requestId: number, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':shoppingListId/:requestId')@ApiOkResponse({description: 'Successful', type: ShoppingList})@ApiBadRequestResponse({description: 'Bad request'})@ApiForbiddenResponse({description: 'This is not your shopping list'})@ApiNotFoundResponse({description: 'Shopping list not found'})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shoppingListId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({description: 'Successful', type: ShoppingList})@ApiNotFoundResponse({description: 'Shopping list not found'})@ApiForbiddenResponse({description: 'This is not your shopping list'})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findShoppingList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findShoppingList(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserLists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserLists(user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Successful', type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertNewShoppingList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertNewShoppingList(createRequestDto: ShoppingListFormDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({description: 'Added a new shopping list', type: ShoppingList})@ApiBadRequestResponse({description: 'Bad request'})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRequestDto\n                                    \n                                                ShoppingListFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateShoppingList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateShoppingList(id: number, updateShoppingList: ShoppingListFormDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOkResponse({description: 'Successful', type: ShoppingList})@ApiBadRequestResponse({description: 'Bad request'})@ApiNotFoundResponse({description: 'Shopping list not found'})@ApiForbiddenResponse({description: 'This is not your shopping list'})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateShoppingList\n                                    \n                                                ShoppingListFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  Logger,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiForbiddenResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { ShoppingListService } from './shopping-list.service';\nimport { ShoppingList } from './shopping-list.entity';\nimport { ShoppingListFormDto } from './dto/shopping-list-form.dto';\nimport { ReqUser } from '../common/decorators/user.decorator';\nimport { JwtAuthGuard } from '../common/guards/jwt-guard';\nimport { UserID } from '../user/user.entity';\nimport { RequestService } from '../request/request.service';\n\n@ApiBearerAuth()\n@ApiTags('Shopping List')\n@ApiUnauthorizedResponse({ description: 'Unauthorized' })\n@UseGuards(JwtAuthGuard)\n@Controller('shopping-list')\nexport class ShoppingListController {\n  static LOGGER = new Logger('ShoppingList', true);\n\n  constructor(\n    private readonly shoppingListService: ShoppingListService,\n    private readonly requestService: RequestService,\n  ) {}\n\n  @Get()\n  @ApiOkResponse({ description: 'Successful', type: [ShoppingList] })\n  async getUserLists(@ReqUser() user: UserID): Promise {\n    return await this.shoppingListService.getAllByUser(user.userId);\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ description: 'Successful', type: ShoppingList })\n  @ApiNotFoundResponse({ description: 'Shopping list not found' })\n  @ApiForbiddenResponse({ description: 'This is not your shopping list' })\n  async findOne(\n    @Param('id') id: number,\n    @ReqUser() user: UserID,\n  ): Promise {\n    return await this.findShoppingList(id, user.userId);\n  }\n\n  @Post()\n  @ApiCreatedResponse({\n    description: 'Added a new shopping list',\n    type: ShoppingList,\n  })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  async insertNewShoppingList(\n    @Body() createRequestDto: ShoppingListFormDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    return this.shoppingListService.create(createRequestDto, user);\n  }\n\n  @Put(':id')\n  @ApiOkResponse({ description: 'Successful', type: ShoppingList })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiNotFoundResponse({ description: 'Shopping list not found' })\n  @ApiForbiddenResponse({ description: 'This is not your shopping list' })\n  async updateShoppingList(\n    @Param('id') id: number,\n    @Body() updateShoppingList: ShoppingListFormDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const shoppingList = await this.findShoppingList(id, user.userId);\n    return this.shoppingListService.update(updateShoppingList, shoppingList);\n  }\n\n  @Put(':shoppingListId/:requestId')\n  @ApiOkResponse({ description: 'Successful', type: ShoppingList })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiForbiddenResponse({ description: 'This is not your shopping list' })\n  @ApiNotFoundResponse({ description: 'Shopping list not found' })\n  async addRequestToList(\n    @Param('shoppingListId') shoppingListId: number,\n    @Param('requestId') requestId: number,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const shoppingList = await this.findShoppingList(\n      shoppingListId,\n      user.userId,\n    );\n    const request = await this.requestService.get(requestId);\n    ShoppingListController.LOGGER.log(request);\n    if (!request) {\n      throw new BadRequestException('This request does not exist');\n    }\n    return this.shoppingListService.addRequestToList(request.id, shoppingList);\n  }\n\n  @Delete(':shoppingListId/:requestId')\n  @ApiOkResponse({ description: 'Successful', type: ShoppingList })\n  @ApiBadRequestResponse({ description: 'Bad request' })\n  @ApiForbiddenResponse({ description: 'This is not your shopping list' })\n  @ApiNotFoundResponse({ description: 'Shopping list not found' })\n  async deleteRequestFromList(\n    @Param('shoppingListId') shoppingListId: number,\n    @Param('requestId') requestId: number,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const shoppingList = await this.findShoppingList(\n      shoppingListId,\n      user.userId,\n    );\n    return this.shoppingListService.removeRequest(requestId, shoppingList);\n  }\n\n  private async findShoppingList(id: number, userId: number) {\n    const shoppingList = await this.shoppingListService.get(id);\n    if (shoppingList.owner !== userId) {\n      throw new ForbiddenException(\n        'You can only see or edit your own shopping lists!',\n      );\n    }\n    return shoppingList;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingListFillableFields.html":{"url":"classes/ShoppingListFillableFields.html","title":"class - ShoppingListFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingListFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ShoppingListRequest } from './shopping-list-request.entity';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ShoppingListStatus } from './shopping-list-status';\n\n@Entity({\n  name: 'shoppingList',\n})\nexport class ShoppingList {\n  @ApiProperty({ type: 'integer' })\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({ type: 'integer' })\n  @Column()\n  owner!: number;\n\n  @ApiProperty()\n  @Column()\n  @CreateDateColumn()\n  created_at!: Date;\n\n  @ApiProperty()\n  @Column()\n  @UpdateDateColumn()\n  updated_at!: Date;\n\n  @ApiProperty({\n    enum: ShoppingListStatus,\n    default: ShoppingListStatus.ACTIVE,\n    type: ShoppingListStatus,\n  })\n  @Column({\n    enum: ShoppingListStatus,\n    type: 'enum',\n    default: ShoppingListStatus.ACTIVE,\n  })\n  status!: string;\n\n  @ApiProperty({ type: [ShoppingListRequest] })\n  @OneToMany(\n    type => ShoppingListRequest,\n    shoppingListRequest => shoppingListRequest.shoppingList,\n    { cascade: true },\n  )\n  requests!: ShoppingListRequest[];\n}\n\nexport class ShoppingListFillableFields {\n  owner!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingListFormDto.html":{"url":"classes/ShoppingListFormDto.html","title":"class - ShoppingListFormDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingListFormDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/dto/shopping-list-form.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                requests\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            requests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'List of request IDs', type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/dto/shopping-list-form.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, enum: ShoppingListStatus, default: undefined, type: ShoppingListStatus})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/dto/shopping-list-form.dto.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ShoppingListStatus } from '../shopping-list-status';\n\nexport class ShoppingListFormDto {\n  @ApiProperty({\n    required: true,\n    description: 'List of request IDs',\n    type: ['integer'],\n  })\n  readonly requests!: number[];\n\n  @ApiProperty({\n    required: false,\n    enum: ShoppingListStatus,\n    default: ShoppingListStatus.ACTIVE,\n    type: ShoppingListStatus,\n  })\n  status!: string;\n}\n\nexport class RequestArticleStatusDto {\n  @ApiProperty({\n    required: true,\n  })\n  articleDone!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShoppingListModule.html":{"url":"modules/ShoppingListModule.html","title":"module - ShoppingListModule","body":"\n                   \n\n\n\n\n    Modules\n    ShoppingListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShoppingListModule\n\n\n\ncluster_ShoppingListModule_imports\n\n\n\ncluster_ShoppingListModule_exports\n\n\n\ncluster_ShoppingListModule_providers\n\n\n\n\nRequestModule\n\nRequestModule\n\n\n\nShoppingListModule\n\nShoppingListModule\n\nShoppingListModule -->\n\nRequestModule->ShoppingListModule\n\n\n\n\n\nShoppingListService \n\nShoppingListService \n\nShoppingListService  -->\n\nShoppingListModule->ShoppingListService \n\n\n\n\n\nShoppingListService\n\nShoppingListService\n\nShoppingListModule -->\n\nShoppingListService->ShoppingListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ShoppingListService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ShoppingListController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RequestModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ShoppingListService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ShoppingListService } from './shopping-list.service';\nimport { ShoppingListController } from './shopping-list.controller';\nimport { ShoppingList } from './shopping-list.entity';\nimport { RequestModule } from '../request/request.module';\n\n@Module({\n  imports: [RequestModule, TypeOrmModule.forFeature([ShoppingList])],\n  exports: [ShoppingListService],\n  controllers: [ShoppingListController],\n  providers: [ShoppingListService],\n})\nexport class ShoppingListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingListRequest.html":{"url":"classes/ShoppingListRequest.html","title":"class - ShoppingListRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingListRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list-request.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                requestId\n                            \n                            \n                                shoppingList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()@ApiHideProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list-request.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, type: 'integer'})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list-request.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shoppingList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ShoppingList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list-request.entity.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { ShoppingList } from './shopping-list.entity';\nimport { ApiHideProperty, ApiProperty } from '@nestjs/swagger';\n\n@Entity({\n  name: 'shoppingListRequest',\n})\nexport class ShoppingListRequest {\n  @PrimaryGeneratedColumn()\n  @ApiHideProperty()\n  id!: number;\n\n  @ApiProperty({ required: true, type: 'integer' })\n  @Column()\n  requestId!: number;\n\n  @ManyToOne(\n    type => ShoppingList,\n    shoppingList => shoppingList.requests,\n  )\n  shoppingList!: ShoppingList;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingListService.html":{"url":"injectables/ShoppingListService.html","title":"injectable - ShoppingListService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                LOGGER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRequestToList\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAllByUser\n                            \n                            \n                                    Private\n                                populateShoppingList\n                            \n                            \n                                    Async\n                                removeRequest\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingListRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/shoppingList/shopping-list.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingListRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addRequestToList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addRequestToList(requestId: number, shoppingList: ShoppingList)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shoppingList\n                                    \n                                                ShoppingList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRequestDto: ShoppingListFormDto, user: UserID)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRequestDto\n                                    \n                                                ShoppingListFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllByUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllByUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            populateShoppingList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populateShoppingList(from: ShoppingListFormDto, to: ShoppingList)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                ShoppingListFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                ShoppingList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRequest(requestId: number, shoppingList: ShoppingList)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shoppingList\n                                    \n                                                ShoppingList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(form: ShoppingListFormDto, shoppingList: ShoppingList)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                ShoppingListFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shoppingList\n                                    \n                                                ShoppingList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            LOGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('ShoppingList', true)\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  Logger,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Roles } from '../common/decorators/roles.decorator';\nimport { ShoppingList } from './shopping-list.entity';\nimport { ShoppingListFormDto } from './dto/shopping-list-form.dto';\nimport { ShoppingListStatus } from './shopping-list-status';\nimport { ShoppingListRequest } from './shopping-list-request.entity';\nimport { UserID } from '../user/user.entity';\n\n@Injectable()\n@Roles('helper')\nexport class ShoppingListService {\n  static LOGGER = new Logger('ShoppingList', true);\n\n  constructor(\n    @InjectRepository(ShoppingList)\n    private readonly shoppingListRepository: Repository,\n  ) {}\n\n  async get(id: number) {\n    const shoppingList = await this.shoppingListRepository.findOne(id, {\n      relations: ['requests'],\n    });\n    if (!shoppingList) {\n      throw new NotFoundException('Shopping List not found');\n    }\n    return shoppingList;\n  }\n\n  async create(createRequestDto: ShoppingListFormDto, user: UserID) {\n    const shoppingList = new ShoppingList();\n    shoppingList.requests = [];\n    this.populateShoppingList(createRequestDto, shoppingList);\n    shoppingList.owner = user.userId;\n    shoppingList.status = ShoppingListStatus.ACTIVE;\n\n    return this.shoppingListRepository.save(shoppingList);\n  }\n\n  async getAllByUser(userId: number) {\n    return await this.shoppingListRepository.find({\n      where: { owner: userId },\n      relations: ['requests'],\n    });\n  }\n\n  async update(form: ShoppingListFormDto, shoppingList: ShoppingList) {\n    this.populateShoppingList(form, shoppingList);\n    return await this.shoppingListRepository.save(shoppingList);\n  }\n\n  async addRequestToList(requestId: number, shoppingList: ShoppingList) {\n    if (!shoppingList.requests.find(r => r.requestId === requestId)) {\n      const newRequest = new ShoppingListRequest();\n      newRequest.requestId = requestId;\n      shoppingList.requests.push(newRequest);\n    } else {\n      throw new BadRequestException('Already exists');\n    }\n    return await this.shoppingListRepository.save(shoppingList);\n  }\n\n  async removeRequest(requestId: number, shoppingList: ShoppingList) {\n    const index = shoppingList.requests.findIndex(\n      r => r.requestId === Number(requestId),\n    );\n    ShoppingListService.LOGGER.log(index);\n    ShoppingListService.LOGGER.log(shoppingList);\n    if (index > -1) {\n      shoppingList.requests.splice(index, 1);\n    } else {\n      throw new BadRequestException('Does not exists');\n    }\n    return await this.shoppingListRepository.save(shoppingList);\n  }\n\n  private populateShoppingList(from: ShoppingListFormDto, to: ShoppingList) {\n    to.status = from.status;\n    if (from.requests) {\n      from.requests.forEach(reqId => {\n        if (!to.requests.find(r => r.requestId === reqId)) {\n          const newRequest = new ShoppingListRequest();\n          newRequest.requestId = reqId;\n          to.requests.push(newRequest);\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslatedCallPayloadDto.html":{"url":"classes/TranslatedCallPayloadDto.html","title":"class - TranslatedCallPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslatedCallPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/call/dto/translated-call-payload.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                date\n                            \n                            \n                                    Readonly\n                                finished\n                            \n                            \n                                    Readonly\n                                translator\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'Date when the translation was finished'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/call/dto/translated-call-payload.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            finished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'Mark if translation is completed'})@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/call/dto/translated-call-payload.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            translator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'translator of the call'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/call/dto/translated-call-payload.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsBoolean } from 'class-validator';\n\nexport class TranslatedCallPayloadDto {\n  @ApiProperty({\n    required: true,\n    description: 'translator of the call',\n  })\n  @IsString()\n  readonly translator!: string;\n\n  @ApiProperty({\n    required: true,\n    description: 'Date when the translation was finished'\n  })\n  @IsString()\n  readonly date!: string;\n\n  @ApiProperty({\n    required: true,\n    description: 'Mark if translation is completed'\n  })\n  @IsBoolean()\n  readonly finished!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/update-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AddressModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                role\n                            \n                            \n                                    Optional\n                                telephone\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                number\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, enum: undefined})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            telephone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:24\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\nimport { AddressModel } from '../../main/models/address.model';\n\nexport class UpdateUserDto extends AddressModel {\n  @ApiProperty({ required: true })\n  @IsNotEmpty()\n  firstName!: string;\n\n  @ApiProperty({ required: true })\n  @IsNotEmpty()\n  lastName!: string;\n\n  @ApiProperty({ required: true, enum: ['helper', 'seeker'] })\n  @IsNotEmpty()\n  role!: string;\n\n  @ApiPropertyOptional()\n  telephone?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadCallPayloadDto.html":{"url":"classes/UploadCallPayloadDto.html","title":"class - UploadCallPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadCallPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/call/dto/upload-call-payload.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                audio_id\n                            \n                            \n                                    Readonly\n                                path\n                            \n                            \n                                    Readonly\n                                translated\n                            \n                            \n                                    Readonly\n                                upload_date\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            audio_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'The ID of the uploaded audio file'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/call/dto/upload-call-payload.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'Filesystem path of the audio file'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/call/dto/upload-call-payload.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            translated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'Mark if audio file translation is finished'})@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/call/dto/upload-call-payload.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            upload_date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'Date of file upload'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/call/dto/upload-call-payload.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsBoolean } from 'class-validator';\n\nexport class UploadCallPayloadDto {\n  @ApiProperty({\n    required: true,\n    description: 'The ID of the uploaded audio file',\n  })\n  @IsString()\n  readonly audio_id!: string;\n\n  @ApiProperty({\n    required: true,\n    description: 'Date of file upload'\n  })\n  @IsString()\n  readonly upload_date!: string;\n\n  @ApiProperty({\n    required: true,\n    description: 'Filesystem path of the audio file'\n  })\n  @IsString()\n  readonly path!: string;\n\n  @ApiProperty({\n    required: true,\n    description: 'Mark if audio file translation is finished'\n  })\n  @IsBoolean()\n  readonly translated!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AddressModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                    Optional\n                                telephone\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                number\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'password', length: 255, transformer: undefined})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column({type: 'enum', enum: UserRole, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            telephone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:24\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from 'class-transformer';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { PasswordTransformer } from './password.transformer';\nimport { UserRole } from './user-role';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { AddressModel } from '../main/models/address.model';\n\n@Entity({\n  name: 'users',\n})\nexport class User extends AddressModel {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({ required: true })\n  @Column({ length: 255 })\n  firstName!: string;\n\n  @ApiProperty({ required: true })\n  @Column({ length: 255 })\n  lastName!: string;\n\n  @ApiProperty({ required: true })\n  @Column({ length: 255 })\n  email!: string;\n\n  @ApiProperty({ required: true })\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.NONE,\n  })\n  role!: string;\n\n  @ApiProperty({ required: false })\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  telephone?: string;\n\n  @Column({\n    name: 'password',\n    length: 255,\n    transformer: new PasswordTransformer(),\n  })\n  @Exclude()\n  password!: string;\n}\n\nexport class UserFillableFields {\n  email!: string;\n  firstName!: string;\n  lastName!: string;\n  role?: string;\n  telephone?: string;\n  address?: string;\n  password!: string;\n}\n\nexport class UserID {\n  userId!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({description: 'Successful', type: User})@ApiNotFoundResponse({description: 'User not found'})@ApiBadRequestResponse({description: 'Bad Request'})@ApiParam({name: 'id', description: 'user id', type: 'integer'})\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Successful', type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateUserDto: UpdateUserDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOkResponse({description: 'Successful', type: User})@ApiBadRequestResponse({description: 'Bad Request'})@ApiNotFoundResponse({description: 'User not found'})@ApiForbiddenResponse({description: 'Forbidden'})@ApiParam({name: 'id', description: 'user id', type: 'integer'})\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, ForbiddenException, Get, Logger, Param, Put, UseGuards} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiForbiddenResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger';\nimport {ReqUser} from '../common/decorators/user.decorator';\nimport {User, UserID} from './user.entity';\nimport {UsersService} from './user.service';\nimport {UpdateUserDto} from './dto/update-user.dto';\nimport {JwtAuthGuard} from '../common/guards/jwt-guard';\n\n@ApiBearerAuth()\n@Controller('user')\n@UseGuards(JwtAuthGuard)\n@ApiTags('User')\nexport class UserController {\n  static LOGGER = new Logger('User', true);\n\n  constructor(private readonly userService: UsersService) {\n  }\n\n  @Get()\n  @ApiOkResponse({description: 'Successful', type: [User]})\n  async getAll(): Promise {\n    return await this.userService.getAll();\n  }\n\n  @Get(':id')\n  @ApiOkResponse({description: 'Successful', type: User})\n  @ApiNotFoundResponse({description: 'User not found'})\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  @ApiParam({\n    name: 'id',\n    description: 'user id',\n    type: 'integer',\n  })\n  async findOne(@Param('id') id: number): Promise {\n    return await this.userService.get(id);\n  }\n\n  @Put(':id')\n  @ApiOkResponse({description: 'Successful', type: User})\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  @ApiNotFoundResponse({description: 'User not found'})\n  @ApiForbiddenResponse({description: 'Forbidden'})\n  @ApiParam({\n    name: 'id',\n    description: 'user id',\n    type: 'integer',\n  })\n  async update(\n    @Param('id') id: number,\n    @Body() updateUserDto: UpdateUserDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const userToUpdate = await this.userService.get(id);\n    if (userToUpdate.id !== user.userId) {\n      throw new ForbiddenException('You cannot edit other users!');\n    }\n    return this.userService.update(updateUserDto, userToUpdate);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserFillableFields.html":{"url":"classes/UserFillableFields.html","title":"class - UserFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Optional\n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            telephone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from 'class-transformer';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { PasswordTransformer } from './password.transformer';\nimport { UserRole } from './user-role';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { AddressModel } from '../main/models/address.model';\n\n@Entity({\n  name: 'users',\n})\nexport class User extends AddressModel {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({ required: true })\n  @Column({ length: 255 })\n  firstName!: string;\n\n  @ApiProperty({ required: true })\n  @Column({ length: 255 })\n  lastName!: string;\n\n  @ApiProperty({ required: true })\n  @Column({ length: 255 })\n  email!: string;\n\n  @ApiProperty({ required: true })\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.NONE,\n  })\n  role!: string;\n\n  @ApiProperty({ required: false })\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  telephone?: string;\n\n  @Column({\n    name: 'password',\n    length: 255,\n    transformer: new PasswordTransformer(),\n  })\n  @Exclude()\n  password!: string;\n}\n\nexport class UserFillableFields {\n  email!: string;\n  firstName!: string;\n  lastName!: string;\n  role?: string;\n  telephone?: string;\n  address?: string;\n  password!: string;\n}\n\nexport class UserID {\n  userId!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserID.html":{"url":"classes/UserID.html","title":"class - UserID","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserID\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from 'class-transformer';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { PasswordTransformer } from './password.transformer';\nimport { UserRole } from './user-role';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { AddressModel } from '../main/models/address.model';\n\n@Entity({\n  name: 'users',\n})\nexport class User extends AddressModel {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({ required: true })\n  @Column({ length: 255 })\n  firstName!: string;\n\n  @ApiProperty({ required: true })\n  @Column({ length: 255 })\n  lastName!: string;\n\n  @ApiProperty({ required: true })\n  @Column({ length: 255 })\n  email!: string;\n\n  @ApiProperty({ required: true })\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.NONE,\n  })\n  role!: string;\n\n  @ApiProperty({ required: false })\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  telephone?: string;\n\n  @Column({\n    name: 'password',\n    length: 255,\n    transformer: new PasswordTransformer(),\n  })\n  @Exclude()\n  password!: string;\n}\n\nexport class UserFillableFields {\n  email!: string;\n  firstName!: string;\n  lastName!: string;\n  role?: string;\n  telephone?: string;\n  address?: string;\n  password!: string;\n}\n\nexport class UserID {\n  userId!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUserModule\n\nUserModule\n\nUsersService  -->\n\nUserModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUserModule -->\n\nUsersService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Logger, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { User } from './user.entity';\nimport { UsersService } from './user.service';\nimport { UserController } from './user.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  exports: [UsersService],\n  controllers: [UserController],\n  providers: [UsersService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nArticlesService\n\nArticlesService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nArticlesService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/articles/articles.modules.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticlesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticlesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Article } from './article.entity';\nimport { ArticlesController } from './articles.controller';\nimport { ArticlesService } from './articles.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Article])],\n  providers: [ArticlesService],\n  controllers: [ArticlesController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getByEmail\n                            \n                            \n                                    Async\n                                getByEmailAndPass\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(payload: UserFillableFields)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                UserFillableFields\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByEmailAndPass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmailAndPass(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(editRequestDto: UpdateUserDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editRequestDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotAcceptableException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Roles } from '../common/decorators/roles.decorator';\nimport { User, UserFillableFields } from './user.entity';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Injectable()\n@Roles('admin') // TODO: Add 'authenticatedUser'\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n  ) {}\n\n  async get(id: number) {\n    const user = await this.userRepository.findOne(id);\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return user;\n  }\n\n  async getByEmail(email: string) {\n    return await this.userRepository.findOne({ email });\n    // return await this.userRepository\n    //   .createQueryBuilder('users')\n    //   .where('users.email = :email')\n    //   .setParameter('email', email)\n    //   .getOne();\n  }\n\n  async getByEmailAndPass(email: string, password: string) {\n    // const passHash = createHmac('sha256', password).digest('hex');\n    return await this.userRepository.findOne({ email, password });\n    // return await this.userRepository\n    //   .createQueryBuilder('users')\n    //   .where('users.email = :email and users.password = :password')\n    //   .setParameter('email', email)\n    //   .setParameter('password', passHash)\n    //   .getOne();\n  }\n\n  async create(payload: UserFillableFields) {\n    const checkUserExistence = await this.getByEmail(payload.email);\n\n    if (checkUserExistence) {\n      throw new NotAcceptableException(\n        'Another user with provided email already exists.',\n      );\n    }\n\n    const newUser = this.userRepository.create(payload);\n    return await this.userRepository.save(newUser);\n  }\n\n  async update(editRequestDto: UpdateUserDto, user: User) {\n    user.city = editRequestDto.city;\n    user.street = editRequestDto.street;\n    user.number = editRequestDto.number;\n    user.zipCode = editRequestDto.zipCode;\n    user.firstName = editRequestDto.firstName;\n    user.lastName = editRequestDto.lastName;\n    user.role = editRequestDto.role;\n    user.telephone = editRequestDto.telephone;\n\n    return await this.userRepository.save(user);\n  }\n\n  async getAll() {\n    return await this.userRepository.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/articles/article.entity.ts\n            \n            class\n            Article\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/articles/article.entity.ts\n            \n            class\n            ArticleFillableFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/articles/articles.controller.ts\n            \n            controller\n            ArticlesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/articles/articles.service.ts\n            \n            injectable\n            ArticlesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/articles/dto/create-article.dto.ts\n            \n            class\n            CreateArticleDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/articles/interfaces/article.interface.ts\n            \n            interface\n            Article\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/audio-storage/audio-storage.controller.ts\n            \n            controller\n            AudioStorageController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/audio-storage/audio-storage.entity.ts\n            \n            class\n            AudioFile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/audio-storage/audio-storage.service.ts\n            \n            injectable\n            AudioStorageService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/audio-storage/audio-storage.service.ts\n            \n            variable\n            s3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/response-token.dt.ts\n            \n            class\n            ResponseTokenDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/login.payload.ts\n            \n            class\n            LoginPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/register.payload.ts\n            \n            class\n            RegisterPayload\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/call/call.controller.ts\n            \n            controller\n            CallController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/call/call.service.ts\n            \n            injectable\n            CallService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/call/dto/translated-call-payload.dto.ts\n            \n            class\n            TranslatedCallPayloadDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/call/dto/upload-call-payload.dto.ts\n            \n            class\n            UploadCallPayloadDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/common/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/decorators/user.decorator.ts\n            \n            interface\n            IRequestUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/common/decorators/user.decorator.ts\n            \n            variable\n            ReqUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/guards/jwt-guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/middlewares/logger.middleware.ts\n            \n            variable\n            loggerMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/modules/main/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/main/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/main/models/address.model.ts\n            \n            class\n            AddressModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/request/dto/request-form.dto.ts\n            \n            class\n            CreateRequestArticleDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/request/dto/request-form.dto.ts\n            \n            class\n            RequestFormDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/request/request.controller.ts\n            \n            controller\n            RequestController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/request/request.entity.ts\n            \n            class\n            RequestEntity\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/modules/request/request.entity.ts\n            \n            class\n            RequestFillableFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/request/request.service.ts\n            \n            injectable\n            RequestService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/request/requestArticle.entity.ts\n            \n            class\n            RequestArticle\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/dto/shopping-list-form.dto.ts\n            \n            class\n            RequestArticleStatusDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/dto/shopping-list-form.dto.ts\n            \n            class\n            ShoppingListFormDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/shopping-list-request.entity.ts\n            \n            class\n            ShoppingListRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/shopping-list.controller.ts\n            \n            controller\n            ShoppingListController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/shopping-list.entity.ts\n            \n            class\n            ShoppingList\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/shopping-list.entity.ts\n            \n            class\n            ShoppingListFillableFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/shopping-list.service.ts\n            \n            injectable\n            ShoppingListService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/user/password.transformer.ts\n            \n            class\n            PasswordTransformer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            UserFillableFields\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            UserID\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_CURRENT_VERSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_DESCRIPTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_ROOT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/index.ts\n            \n            variable\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @nestjs/common : ^6.10.14\n        \n            @nestjs/core : ^6.10.14\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/passport : ^6.1.1\n        \n            @nestjs/platform-express : 7.0.0\n        \n            @nestjs/serve-static : ^2.1.0\n        \n            @nestjs/swagger : ^4.1.10\n        \n            @nestjs/testing : ^6.10.14\n        \n            @nestjs/typeorm : ^6.2.0\n        \n            @types/dotenv : ^8.2.0\n        \n            @types/express : ^4.17.3\n        \n            @types/helmet : ^0.0.45\n        \n            @types/jest : ^24.0.25\n        \n            @types/joi : ^14.3.4\n        \n            @types/multer : ^1.4.2\n        \n            @types/multer-s3 : ^2.7.7\n        \n            @types/node : ^13.1.6\n        \n            @types/passport-jwt : ^3.0.3\n        \n            @types/supertest : ^2.0.8\n        \n            aws-sdk : ^2.643.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.0\n        \n            cross-env : ^6.0.3\n        \n            crypto : ^1.0.1\n        \n            dotenv : ^8.2.0\n        \n            express : ^4.17.1\n        \n            hbs : ^4.1.0\n        \n            helmet : ^3.21.2\n        \n            husky : ^4.0.7\n        \n            jest : ^25.1.0\n        \n            joi : ^14.3.1\n        \n            lint-staged : ^9.5.0\n        \n            mongodb : ^3.4.1\n        \n            multer : ^1.4.2\n        \n            multer-s3 : ^2.9.0\n        \n            nodemon : ^2.0.2\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^7.17.1\n        \n            prettier : ^1.19.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.4\n        \n            supertest : ^4.0.2\n        \n            swagger-ui-express : ^4.1.3\n        \n            ts-jest : ^24.3.0\n        \n            ts-loader : ^6.2.1\n        \n            ts-node : ^8.6.1\n        \n            tsconfig-paths : ^3.9.0\n        \n            tslint : 5.20.1\n        \n            typeorm : ^0.2.24\n        \n            typescript : ^3.7.4\n        \n            webpack : ^4.41.5\n        \n            webpack-cli : ^3.3.10\n        \n            webpack-node-externals : ^1.7.2\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            acorn : ^7.1.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RequestStatus   (src/.../request-status.ts)\n                        \n                        \n                            ShoppingListStatus   (src/.../shopping-list-status.ts)\n                        \n                        \n                            UserRole   (src/.../user-role.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/request/request-status.ts\n    \n        \n            \n                \n                    \n                        \n                        RequestStatus\n                    \n                \n                        \n                            \n                                 NEW\n                            \n                        \n                        \n                            \n                                Value : new\n                            \n                        \n                        \n                            \n                                 ONGOING\n                            \n                        \n                        \n                            \n                                Value : ongoing\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    src/modules/shoppingList/shopping-list-status.ts\n    \n        \n            \n                \n                    \n                        \n                        ShoppingListStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : active\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : canceled\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    src/modules/user/user-role.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 HELPER\n                            \n                        \n                        \n                            \n                                Value : helper\n                            \n                        \n                        \n                            \n                                 SEEKER\n                            \n                        \n                        \n                            \n                                Value : seeker\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDependencies\n\nNodeJS\nDocker\nPostgreSQL Client\nsudo apt install postgresql postgresql-contrib\n\n\nYarn\n\nInstallation\nInstall dependencies\nyarnEnvironment Configuration\nCreate a .env file in the root folder\nConfigure PostgreSQL:\nsudo -i -u postgres # Switch over to the postgres account on your server by typing:\npsql -U postgres # type the default password, usually 'postgres'\ncreate user username with encrypted password 'secretpassword';\ncreate database dbname with owner username;\n\\l # dbname should appear with username as ownerthen ctrl + c to exit the shell, then try to connect withpsql -U username dbname (it will ask for your password)\nNext, in .env, set these vars:\n\nDATABASE_TYPE=postgresDATABASE_HOST=dbDATABASE_PORT=5432DATABASE_USERNAME=usernameDATABASE_PASSWORD=secretpasswordDATABASE_NAME=dbname\nJWT_SECRET=jwt_awesome_key\n\nCreate a copy of .env called .env.development and change these vars:\n\nDATABASE_HOST=localhost\nDATABASE_PORT=54321\n\nDocker\nTemporary Note\nTo spin up a docker container for local API development, following commands can be used.\nCreate the postgres docker volume:\ndocker volume create --name=pgdata\nRun the postgis image:\ndocker run -d --name postgres-nearbuy -p 5432:5432 -e POSTGRES_PASSWORD=secretpassword -e POSTGRES_DB=dbname -e POSTGRES_USER=username -v pgdata:/var/lib/postgresql/data postgis/postgis:12-2.5\n\nPostgres admin:\ndocker run --network nearbuy-backend_default -p 3010:80 -e 'PGADMIN_DEFAULT_EMAIL=user@domain.com' -e 'PGADMIN_DEFAULT_PASSWORD=SuperSecret' -d dpage/pgadmin4\nThat adds a pgadmin container to the docker network created by docker-compose. You can connect in there to the host \"db\" (if using defaults).\n\nTo mount the project with Docker, you can use yarn deploy:local (which executes docker-compose up)\nUsage\n# development\nyarn start\n\n# watch mode\nyarn start:dev\n\n# production mode\nyarn start:prodTest\n# unit tests\nyarn test\n\n# e2e tests\nyarn test:e2e\n\n# test coverage\nyarn test:covSwagger\nRESTful APIs you can describe with already integrated Swagger.\nTo see all available endpoints visit http://localhost:3000/api/docs\nTo get the endpoints in JSON format, visit http://localhost:3000/api/docs-json\nTypeORM\nTypeORM gives you possibility to use next db types:\nmysql, postgres, mariadb, sqlite, etc. Please look at docs for more details.\nWe have provided working example with sqlite, but you have possibility to change\nthis through ormconfig.json. By default you will get sqlite-example.sql file\ncreated in the root directory, but it's ignored by git.\nSeeding\nSee TypeORM-Fixtures\nAuthentication - JWT\nAlready preconfigured JWT authentication.\nIt's suggested to change current password hashing to something more secure.\nYou can start use already working implementation of Login and Registration\nendpoints, just take a look at http://localhost:3000/api/docs.\nSources\n\nTypeORM MongoDB Documentation\n\nGreat MongoDB tutorial\n\nAnother NestJS boilerplate\n\nTutorial to build NestJS API + MongoDB with Mongoose instead of TypeORM\n\nBasic Authentication with JSON Web Tokens and Passport\n\n... or this one better integrated with NestJS\n\nBoilerplate with expiration-based JWT tokens\n\nVariant using Basic auth with cookie in session\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2019 Toundra\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AudioStorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CallModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RequestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShoppingListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AudioStorageModule\n\n\n\ncluster_AudioStorageModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CallModule\n\n\n\ncluster_CallModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_RequestModule\n\n\n\ncluster_RequestModule_exports\n\n\n\ncluster_ShoppingListModule\n\n\n\ncluster_ShoppingListModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UsersModule\n\n\n\n\nAudioStorageModule\n\nAudioStorageModule\n\n\n\nCallModule\n\nCallModule\n\nCallModule -->\n\nAudioStorageModule->CallModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAudioStorageModule->AppModule\n\n\n\n\n\nAudioStorageService \n\nAudioStorageService \n\nAudioStorageService  -->\n\nAudioStorageModule->AudioStorageService \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nAppModule -->\n\nCallModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAudioStorageModule -->\n\nConfigModule->AudioStorageModule\n\n\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nRequestModule\n\nRequestModule\n\n\n\nShoppingListModule\n\nShoppingListModule\n\nShoppingListModule -->\n\nRequestModule->ShoppingListModule\n\n\n\nAppModule -->\n\nRequestModule->AppModule\n\n\n\n\n\nRequestService \n\nRequestService \n\nRequestService  -->\n\nRequestModule->RequestService \n\n\n\nAppModule -->\n\nShoppingListModule->AppModule\n\n\n\n\n\nShoppingListService \n\nShoppingListService \n\nShoppingListService  -->\n\nShoppingListModule->ShoppingListService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nRequestModule -->\n\nUserModule->RequestModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUserModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nArticlesService\n\nArticlesService\n\nAppModule -->\n\nArticlesService->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nArticlesService->UsersModule\n\n\n\n\n\nAudioStorageService\n\nAudioStorageService\n\nAudioStorageModule -->\n\nAudioStorageService->AudioStorageModule\n\n\n\nAppModule -->\n\nAudioStorageService->AppModule\n\n\n\n\n\nRequestService\n\nRequestService\n\nRequestModule -->\n\nRequestService->RequestModule\n\n\n\nAppModule -->\n\nRequestService->AppModule\n\n\n\n\n\nShoppingListService\n\nShoppingListService\n\nShoppingListModule -->\n\nShoppingListService->ShoppingListModule\n\n\n\nAppModule -->\n\nShoppingListService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUserModule -->\n\nUsersService->UserModule\n\n\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nCallService\n\nCallService\n\nCallModule -->\n\nCallService->CallModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            loggerMiddleware   (src/.../logger.middleware.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            ReqUser   (src/.../user.decorator.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            s3   (src/.../audio-storage.service.ts)\n                        \n                        \n                            setupSwagger   (src/.../index.ts)\n                        \n                        \n                            SWAGGER_API_CURRENT_VERSION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_DESCRIPTION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_NAME   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_ROOT   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/common/middlewares/logger.middleware.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loggerMiddleware\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RequestHandler\n\n                        \n                    \n                    \n                        \n                            Default value : (request: any, response: any, next: NextFunction) => {\n  const {headers, method, query, params} = request;\n  const date = new Date().toJSON();\n  const time = date.replace('T', ' ').slice(0, -5);\n  const route = parse(request.url).path;\n  console.log(`${time} ~ ${method} ${route || '/'}`); // tslint:disable-line no-console\n  next();\n}\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/modules/common/decorators/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ReqUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, req: IRequestUser) => {\n  return req.user;\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/common/decorators/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: string[]) => SetMetadata('roles', roles)\n                        \n                    \n\n\n            \n        \n\n    src/modules/audio-storage/audio-storage.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new S3()\n                        \n                    \n\n\n            \n        \n\n    src/swagger/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            setupSwagger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (app: INestApplication) => {\n  const options = new DocumentBuilder()\n    .setTitle(SWAGGER_API_NAME)\n    .setDescription(SWAGGER_API_DESCRIPTION)\n    .setVersion(SWAGGER_API_CURRENT_VERSION)\n    .addBearerAuth()\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup(SWAGGER_API_ROOT, app, document);\n}\n                        \n                    \n\n\n            \n        \n\n    src/swagger/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_CURRENT_VERSION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_DESCRIPTION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Simple API Description'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Simple API'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_ROOT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api/docs'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
