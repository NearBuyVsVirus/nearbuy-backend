var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AddressModel.html",[0,0.18,1,1.543]],["body/classes/AddressModel.html",[0,0.193,1,2.212,2,0.959,3,0.186,4,0.186,5,0.144,6,3.514,7,0.347,8,1.223,9,1.865,10,3.97,11,1.315,12,3.97,13,3.458,14,0.636,15,0.017,16,1.292,17,1.679,18,4.235,19,4.705,20,3.854,21,1.558,22,0.81,23,4.076,24,4.076,25,4.076,26,4.076,27,0.277,28,2.765,29,1.2,30,1.097,31,4.779,32,0.763,33,0.186,34,3.469,35,0.009,36,0.012,37,0.009]],["title/controllers/AppController.html",[38,1.402,39,2.667]],["body/controllers/AppController.html",[0,0.239,3,0.23,4,0.23,5,0.178,7,0.429,15,0.017,16,1.11,17,1.296,22,0.626,27,0.345,32,0.942,33,0.23,35,0.011,36,0.014,37,0.011,38,2.302,39,4.38,40,1.862,41,4.342,42,2.197,43,5.446,44,3.043,45,3.762,46,5.036,47,1.777,48,1.083,49,4.084,50,4.342,51,2.849,52,2.849,53,1.55,54,3.27,55,1.55,56,5.036]],["title/modules/AppModule.html",[57,1.067,58,2.667]],["body/modules/AppModule.html",[0,0.132,1,2.508,3,0.127,4,0.127,5,0.098,11,0.596,15,0.017,16,0.495,27,0.386,33,0.127,35,0.006,36,0.009,37,0.006,39,3.484,40,1.53,48,0.596,49,3.723,50,2.391,52,1.569,53,0.854,57,1.394,58,5.387,59,1.187,60,1.187,61,1.392,62,1.392,63,1.249,64,2.485,65,1.392,66,2.391,67,2.391,68,2.391,69,4.001,70,4.001,71,3.485,72,4.001,73,3.723,74,4.001,75,3.277,76,3.485,77,3.277,78,3.485,79,2.926,80,2.077,81,1.392,82,1.317,83,2.774,84,3.215,85,3.215,86,3.215,87,3.215,88,2.341,89,1.864,90,1.676,91,1.676,92,1.249,93,2.14,94,2.774,95,2.774,96,2.774,97,0.747,98,1.392,99,1.864,100,2.391,101,1.685,102,2.391,103,2.774,104,2.774,105,2.391,106,2.774,107,2.14,108,2.774,109,2.774,110,1.951,111,2.391,112,4.734,113,2.391,114,1.966,115,1.676,116,2.774,117,2.14,118,2.774,119,2.391,120,2.391,121,2.774,122,2.501,123,2.14,124,2.391,125,1.801,126,2.14,127,2.774,128,2.774,129,2.774,130,2.774,131,2.391,132,2.774,133,2.774,134,2.774,135,2.774,136,2.774,137,2.774,138,2.774,139,2.391,140,2.391,141,2.774]],["title/injectables/AppService.html",[49,2.291,142,1.167]],["body/injectables/AppService.html",[0,0.237,3,0.228,4,0.228,5,0.177,7,0.426,9,1.287,14,0.488,15,0.017,16,1.106,22,0.77,27,0.316,33,0.228,35,0.011,36,0.014,37,0.011,42,2.187,43,5.432,47,1.765,48,1.075,49,3.746,52,2.829,55,1.539,89,3.171,90,3.022,126,4.782,142,1.908,143,2.375,144,4.312,145,2.51,146,5.001,147,5.001,148,1.939,149,1.027,150,5.001,151,5.001]],["title/classes/Article.html",[0,0.18,101,1.543]],["body/classes/Article.html",[0,0.27,2,1.03,3,0.2,4,0.2,5,0.155,7,0.372,8,1.281,11,1.224,14,0.654,15,0.017,16,1.129,17,1.466,22,0.707,27,0.29,28,2.318,29,1.287,30,1.704,32,0.818,33,0.26,34,2.327,35,0.01,36,0.013,37,0.01,101,2.901,149,1.49,152,3.375,153,1.871,154,4.909,155,4.909,156,4.909,157,3.772,158,4.375,159,4.392,160,4.375,161,3.221,162,4.375,163,2.318,164,2.436,165,2.196,166,2.318,167,2.327,168,3.078,169,3.078]],["title/classes/ArticleFillableFields.html",[0,0.18,169,2.667]],["body/classes/ArticleFillableFields.html",[0,0.283,2,1.111,3,0.216,4,0.216,5,0.167,7,0.402,8,1.345,11,1.015,14,0.583,15,0.017,16,1.17,22,0.586,27,0.305,28,2.434,29,1.389,30,1.766,32,0.883,33,0.273,34,2.511,35,0.01,36,0.013,37,0.01,101,2.671,149,1.493,152,3.641,153,1.609,155,4.07,156,4.07,159,3.641,161,2.67,163,2.434,164,2.558,165,2.369,166,2.434,167,2.511,168,3.321,169,4.206,170,4.721]],["title/controllers/ArticlesController.html",[38,1.402,84,2.462]],["body/controllers/ArticlesController.html",[0,0.191,3,0.184,4,0.184,5,0.143,7,0.343,9,1.038,14,0.66,15,0.017,17,1.389,22,0.67,27,0.345,32,0.754,33,0.184,35,0.009,36,0.012,37,0.009,38,1.49,40,1.49,42,1.903,44,2.435,47,1.903,48,0.867,51,3.051,52,2.28,53,1.24,55,1.66,76,3.439,84,3.503,101,2.474,148,1.563,149,0.828,165,3.051,166,1.64,171,3.475,172,2.435,173,5.597,174,2.474,175,5.394,176,5.394,177,4.03,178,3.923,179,2.4,180,4.03,181,3.453,182,4.03,183,4.523,184,3.475,185,4.65,186,4.03,187,4.03,188,2.617,189,3.795,190,2.435,191,2.835,192,2.435,193,3.475,194,3.475,195,3.475,196,3.109,197,4.03,198,4.03,199,3.109,200,3.259,201,4.03,202,4.03,203,4.03]],["title/injectables/ArticlesService.html",[76,2.144,142,1.167]],["body/injectables/ArticlesService.html",[0,0.179,3,0.172,4,0.172,5,0.134,7,0.321,9,1.514,14,0.573,15,0.018,16,1.127,22,0.785,27,0.337,29,1.111,33,0.172,35,0.008,36,0.011,37,0.008,42,1.821,47,2.075,48,0.812,53,1.162,55,1.81,76,2.919,92,1.7,101,2.393,142,1.588,143,1.793,145,2.59,148,2.28,149,1.208,153,1.016,173,5.449,174,2.781,181,3.72,183,4.297,193,3.255,194,3.255,196,2.912,204,3.255,205,3.351,206,5.161,207,3.775,208,4.446,209,3.775,210,5.161,211,5.161,212,3.775,213,3.775,214,5.161,215,3.775,216,2.656,217,3.775,218,1.793,219,1.537,220,1.216,221,3.775,222,3.775,223,3.775,224,3.775,225,2.912,226,3.775,227,1.895,228,3.775]],["title/controllers/AuthController.html",[38,1.402,229,2.667]],["body/controllers/AuthController.html",[0,0.163,3,0.157,4,0.157,5,0.122,7,0.292,9,1.243,14,0.647,15,0.017,17,1.243,21,0.738,22,0.6,27,0.347,32,0.642,33,0.157,35,0.008,36,0.011,37,0.008,38,1.269,40,1.269,42,1.704,45,3.666,47,1.704,48,0.738,51,2.732,53,1.487,55,1.487,79,2.294,97,1.3,110,2.414,122,2.074,145,1.722,148,1.873,149,0.992,166,1.966,172,2.074,174,2.699,178,3.666,179,1.786,181,3.226,188,2.228,189,2.414,190,2.074,191,3.398,192,2.074,200,2.919,218,2.294,219,1.966,220,1.105,227,3.044,229,3.398,230,2.959,231,2.959,232,5.23,233,4.83,234,3.432,235,3.666,236,3.432,237,4.83,238,3.432,239,3.398,240,3.432,241,4.83,242,3.432,243,4.268,244,3.432,245,4.164,246,3.432,247,3.726,248,4.164,249,3.432,250,3.726,251,2.919,252,3.432,253,2.414,254,3.162,255,2.647,256,2.647,257,3.432,258,3.932,259,3.432,260,3.432,261,3.432,262,3.432,263,3.432,264,2.414,265,3.432,266,2.414,267,3.432,268,3.432,269,4.83,270,3.432,271,3.432,272,3.432,273,3.432,274,3.432]],["title/modules/AuthModule.html",[57,1.067,69,2.462]],["body/modules/AuthModule.html",[0,0.188,3,0.182,4,0.182,5,0.141,15,0.017,27,0.372,33,0.182,35,0.009,36,0.012,37,0.009,40,1.976,48,0.855,55,1.223,57,1.699,59,1.7,60,1.7,61,1.995,62,1.995,63,1.79,64,3.03,65,2.682,69,4.867,71,4.009,75,3.689,80,2.682,81,1.995,82,1.887,88,3.415,89,2.907,90,2.402,93,3.066,107,3.066,174,1.618,229,4.247,254,3.924,255,3.066,275,3.426,276,3.974,277,3.426,278,4.504,279,3.974,280,3.974,281,3.066,282,3.974,283,2.796,284,3.974,285,3.974,286,5.344,287,3.47,288,3.974,289,3.426,290,3.974,291,3.426,292,3.974,293,3.066,294,3.974,295,3.426]],["title/injectables/AuthService.html",[142,1.167,254,2.144]],["body/injectables/AuthService.html",[0,0.177,3,0.171,4,0.171,5,0.132,7,0.318,9,1.505,14,0.57,15,0.017,22,0.726,27,0.347,33,0.171,35,0.008,36,0.011,37,0.008,42,1.808,47,1.808,48,0.803,53,1.8,55,1.577,79,2.988,89,3.14,90,2.258,97,1.939,98,1.875,110,2.628,142,1.577,143,1.774,145,2.571,148,2.267,149,1.201,153,1.006,174,2.772,181,2.725,218,2.777,219,2.085,220,1.203,227,1.875,235,3.802,254,2.898,256,2.882,264,4.114,281,2.882,293,2.882,296,3.221,297,5.124,298,5.124,299,3.736,300,6.81,301,3.736,302,5.124,303,3.736,304,3.736,305,3.736,306,2.882,307,3.736,308,3.736,309,3.736,310,3.736,311,3.221,312,3.736,313,3.736,314,3.736,315,2.935,316,3.736,317,1.875,318,3.736,319,2.113]],["title/controllers/CallController.html",[38,1.402,320,2.667]],["body/controllers/CallController.html",[0,0.201,3,0.194,4,0.194,5,0.15,7,0.586,15,0.017,16,0.996,17,1.606,22,0.775,27,0.285,32,0.794,33,0.194,35,0.009,36,0.012,37,0.009,38,1.57,40,1.57,42,1.97,44,2.565,45,4.005,47,2.201,48,0.913,51,2.401,54,4.051,55,1.307,172,2.565,174,2.877,178,4.005,179,2.45,181,3.525,190,2.565,192,2.565,200,3.374,239,2.987,253,2.987,266,2.987,320,3.928,321,3.66,322,4.813,323,6.627,324,6.627,325,4.245,326,4.245,327,5.583,328,4.245,329,4.245,330,4.245,331,4.245,332,4.245,333,4.245,334,4.245]],["title/modules/CallModule.html",[57,1.067,70,2.462]],["body/modules/CallModule.html",[0,0.234,3,0.225,4,0.225,5,0.175,15,0.017,27,0.341,33,0.225,35,0.011,36,0.014,37,0.011,40,2.272,48,1.06,57,1.884,59,2.11,60,2.11,61,2.475,62,2.475,63,2.221,64,3.36,65,2.475,70,4.774,80,3.084,81,2.475,82,2.342,320,4.71,335,4.252,336,4.252,337,4.774,338,4.932,339,4.932,340,4.932]],["title/injectables/CallService.html",[142,1.167,337,2.462]],["body/injectables/CallService.html",[0,0.271,3,0.261,4,0.261,5,0.203,15,0.017,27,0.292,33,0.261,35,0.013,36,0.015,37,0.013,48,1.23,142,2.069,143,2.716,337,4.365,341,4.931]],["title/modules/ConfigModule.html",[57,1.067,71,2.144]],["body/modules/ConfigModule.html",[0,0.235,3,0.227,4,0.227,5,0.176,15,0.017,27,0.315,33,0.227,35,0.011,36,0.014,37,0.011,48,1.068,57,1.89,59,2.125,60,2.125,61,2.492,62,2.492,63,2.236,64,3.098,65,3.37,71,4.087,80,3.098,81,2.492,82,2.358,89,3.398,220,1.599,342,4.282,343,4.282,344,4.966,345,4.966,346,4.966,347,4.966,348,4.966]],["title/classes/ConfigService.html",[0,0.18,89,1.707]],["body/classes/ConfigService.html",[0,0.107,2,0.531,3,0.103,4,0.103,5,0.08,7,0.192,8,0.796,9,1.122,14,0.481,15,0.017,16,1.013,21,0.485,22,0.89,27,0.222,33,0.103,35,0.005,36,0.008,37,0.005,42,1.248,47,1.741,53,1.342,55,2.175,89,1.592,123,1.742,124,3.758,145,1.133,148,1.69,149,0.895,218,2.697,219,2.008,220,0.727,317,1.133,349,1.947,350,4.359,351,3.536,352,3.536,353,4.359,354,4.359,355,4.359,356,4.359,357,4.359,358,4.359,359,4.359,360,4.359,361,4.359,362,4.359,363,4.359,364,4.359,365,4.359,366,4.359,367,3.536,368,3.536,369,2.258,370,5.681,371,3.536,372,2.258,373,3.536,374,3.536,375,2.258,376,3.536,377,2.258,378,3.536,379,3.536,380,2.728,381,2.728,382,3.536,383,3.536,384,3.536,385,2.728,386,3.536,387,1.371,388,3.536,389,4.359,390,2.258,391,2.258,392,3.536,393,3.536,394,3.536,395,3.049,396,2.258,397,2.258,398,2.258,399,2.258,400,2.258,401,2.258,402,2.258,403,2.258,404,2.258,405,2.258,406,2.258,407,2.258,408,2.258,409,2.258,410,2.258,411,2.258,412,2.258,413,2.258,414,2.258,415,2.258,416,2.258,417,2.258,418,2.258,419,2.258,420,2.258,421,2.258,422,2.258,423,2.258,424,2.258,425,1.947,426,2.258,427,2.258,428,3.049,429,2.258,430,2.258,431,2.258,432,6.944,433,4.359,434,1.947,435,3.049,436,3.049,437,2.258,438,2.258,439,2.258,440,2.258,441,2.258,442,2.258,443,2.258,444,2.258,445,2.258,446,2.258,447,3.536,448,2.258,449,3.536,450,2.258,451,2.258,452,2.258,453,3.536,454,2.258,455,2.258,456,2.258,457,2.258,458,2.258,459,2.258,460,2.258,461,1.947,462,1.742,463,2.258,464,1.947,465,2.258,466,2.258,467,1.947,468,2.258,469,2.258,470,1.947,471,2.258,472,2,473,2.258,474,2.258,475,2.258,476,2.258,477,1.589,478,1.947,479,3.536,480,2.258,481,2.258,482,3.536,483,2.258,484,3.536,485,2.258,486,2.258,487,4.359,488,1.466,489,3.536,490,2.258,491,2.258,492,2.258]],["title/classes/CreateArticleDto.html",[0,0.18,183,2.462]],["body/classes/CreateArticleDto.html",[0,0.29,2,1.153,3,0.224,4,0.224,5,0.173,7,0.417,8,1.377,14,0.478,15,0.017,16,1.091,17,1.261,21,1.316,22,0.608,27,0.312,30,1.647,32,0.916,33,0.224,35,0.011,36,0.014,37,0.011,53,2.054,101,2.491,149,1.478,159,4.72,166,2.491,168,3.446,183,3.974,472,2.771,493,5.276,494,4.223,495,1.899,496,4.898,497,4.898,498,6.12,499,3.181]],["title/classes/CreateRequestArticleDto.html",[0,0.18,500,2.667]],["body/classes/CreateRequestArticleDto.html",[0,0.256,1,2.2,2,0.951,3,0.185,4,0.185,5,0.143,7,0.344,8,1.216,11,1.499,14,0.694,15,0.017,16,1.086,17,1.391,21,1.456,22,0.671,27,0.275,30,1.916,32,0.756,33,0.247,35,0.009,36,0.012,37,0.009,53,2.277,101,2.645,153,1.455,165,2.712,166,2.757,167,3.457,472,3.444,495,2.095,500,4.572,501,4.696,502,2.624,503,4.283,504,3.679,505,4.659,506,3.484,507,4.659,508,2.361,509,3.484,510,2.15,511,2.442,512,1.82,513,2.843,514,2.843,515,2.843]],["title/modules/DatabaseModule.html",[57,1.067,72,2.462]],["body/modules/DatabaseModule.html",[0,0.185,3,0.178,4,0.178,5,0.187,14,0.38,15,0.018,21,0.838,27,0.375,33,0.178,35,0.009,36,0.012,37,0.009,48,0.838,57,1.484,59,1.668,71,2.984,72,3.425,88,2.984,89,2.692,90,2.356,91,2.356,92,1.756,93,3.007,97,1.609,98,1.957,99,2.692,100,3.361,101,2.433,102,3.361,112,4.548,114,2.839,115,2.356,123,3.007,126,3.007,131,3.361,139,3.361,289,3.361,295,3.361,315,1.957,508,1.512,516,3.899,517,5.275,518,3.18,519,3.899,520,3.381,521,1.957,522,3.899,523,3.899,524,3.361,525,3.899,526,3.899,527,3.361,528,3.899,529,3.361,530,3.899,531,3.899,532,3.899,533,5.275,534,3.899,535,3.361,536,3.899,537,3.899,538,3.007,539,3.899,540,3.899,541,3.899,542,3.899,543,3.899,544,5.275,545,1.756,546,3.899,547,3.899,548,3.899]],["title/interfaces/IRequestUser.html",[549,2.462,550,2.667]],["body/interfaces/IRequestUser.html",[3,0.229,4,0.229,5,0.178,7,0.427,8,1.398,9,1.599,14,0.489,15,0.017,27,0.317,33,0.284,35,0.011,36,0.014,37,0.011,48,1.079,55,1.545,97,2.035,98,2.519,179,2.297,219,2.043,512,2.797,549,3.259,550,4.747,551,3.871,552,3.871,553,5.019,554,3.033,555,4.327,556,4.327,557,4.327]],["title/injectables/JwtAuthGuard.html",[142,1.167,558,2.291]],["body/injectables/JwtAuthGuard.html",[0,0.217,3,0.268,4,0.209,5,0.162,15,0.018,27,0.299,33,0.209,35,0.01,36,0.013,37,0.01,48,0.986,55,1.806,97,1.742,142,1.806,143,2.177,220,1.476,283,3.226,306,4.527,317,2.301,322,3.953,477,3.226,512,2.065,538,3.537,558,3.546,559,3.953,560,3.953,561,5.869,562,4.585,563,4.585,564,4.585,565,4.585,566,3.953,567,4.585,568,4.585,569,3.537,570,4.585,571,4.585,572,3.953,573,4.585,574,4.585,575,4.585,576,4.585,577,5.869]],["title/interfaces/JwtPayload.html",[549,2.462,578,2.667]],["body/interfaces/JwtPayload.html",[3,0.234,4,0.234,5,0.182,7,0.436,8,1.416,9,1.829,11,1.596,14,0.664,15,0.017,16,1.215,33,0.234,35,0.011,36,0.014,37,0.011,549,3.329,551,3.954,578,4.428,579,4.42,580,6.124,581,6.124,582,7.104]],["title/injectables/JwtStrategy.html",[142,1.167,278,2.462]],["body/injectables/JwtStrategy.html",[0,0.193,3,0.186,4,0.186,5,0.144,7,0.346,9,1.396,14,0.529,15,0.018,21,1.166,22,0.674,27,0.356,33,0.186,35,0.009,36,0.012,37,0.009,42,1.914,47,1.434,48,0.874,53,1.67,89,3.21,90,2.456,142,1.67,143,1.93,145,2.722,148,2.103,149,1.114,174,2.485,218,2.576,219,1.654,235,2.456,250,3.135,254,3.949,255,3.135,256,3.135,278,3.522,283,2.859,287,2.639,291,3.504,306,3.135,512,1.83,578,2.859,580,4.677,581,4.677,583,3.504,584,6.105,585,4.065,586,4.065,587,4.065,588,4.065,589,4.065,590,4.065,591,4.065,592,3.135,593,4.065,594,4.065,595,4.065,596,4.065,597,4.065,598,4.065,599,4.065,600,4.065]],["title/classes/LoginPayload.html",[0,0.18,235,2.291]],["body/classes/LoginPayload.html",[0,0.291,2,1.161,3,0.225,4,0.225,5,0.175,7,0.42,8,1.383,14,0.599,15,0.017,16,1.25,17,1.582,21,1.321,22,0.763,27,0.313,30,1.328,32,0.923,33,0.225,35,0.011,36,0.014,37,0.011,235,3.714,315,3.36,319,3.787,495,2.717,499,3.203,601,4.252,602,4.932,603,4.932,604,4.252,605,4.932,606,5.299,607,4.741,608,4.252,609,4.252]],["title/classes/PasswordTransformer.html",[0,0.18,610,2.291]],["body/classes/PasswordTransformer.html",[0,0.222,2,1.1,3,0.214,4,0.214,5,0.166,7,0.398,9,1.53,14,0.579,15,0.017,16,1.314,22,0.738,27,0.333,29,1.376,33,0.214,35,0.01,36,0.013,37,0.01,42,2.097,47,2.097,55,1.829,75,2.486,120,5.123,148,2.304,149,1.22,488,4.242,610,3.591,611,4.03,612,6.532,613,5.942,614,4.675,615,5.942,616,4.675,617,5.123,618,4.675,619,4.675,620,4.675]],["title/classes/RegisterPayload.html",[0,0.18,243,2.667]],["body/classes/RegisterPayload.html",[0,0.256,2,0.949,3,0.184,4,0.184,5,0.143,7,0.343,8,1.214,9,1.389,14,0.66,15,0.017,16,1.319,17,1.742,21,1.455,22,0.841,27,0.31,30,1.085,32,0.754,33,0.184,35,0.009,36,0.012,37,0.009,243,3.795,315,3.051,319,3.439,387,2.091,495,2.868,499,2.617,545,2.429,569,4.16,604,3.475,606,4.65,607,5.008,608,3.475,609,3.475,621,3.475,622,3.948,623,3.948,624,4.216,625,4.03,626,4.03,627,4.65,628,4.03,629,4.03,630,4.03,631,2.429,632,3.948,633,1.815,634,4.03,635,4.03,636,4.03,637,2.835]],["title/classes/RequestArticle.html",[0,0.18,518,2.016]],["body/classes/RequestArticle.html",[0,0.256,2,0.949,3,0.184,4,0.184,5,0.143,7,0.343,8,1.214,11,1.529,14,0.679,15,0.017,17,1.742,21,1.307,22,0.841,27,0.31,28,2.474,29,1.186,30,1.085,32,0.754,33,0.246,35,0.009,36,0.012,37,0.009,99,2.923,125,3.503,149,0.828,153,1.636,163,2.195,164,2.601,179,2.4,495,2.701,503,4.277,504,3.674,518,3.234,521,2.023,545,2.429,633,1.815,638,3.109,639,4.277,640,4.65,641,4.03,642,4.03,643,4.03,644,4.03,645,4.03,646,3.475,647,4.03,648,4.16,649,3.475,650,3.109,651,2.28,652,2.835]],["title/classes/RequestArticleStatusDto.html",[0,0.18,653,2.291]],["body/classes/RequestArticleStatusDto.html",[0,0.28,2,1.09,3,0.212,4,0.212,5,0.164,7,0.394,8,1.329,11,1.27,14,0.576,15,0.017,16,0.826,17,1.192,21,1.398,22,0.575,27,0.301,30,1.844,32,0.866,33,0.27,35,0.01,36,0.013,37,0.01,53,1.425,125,3.835,166,1.884,179,1.712,387,1.795,472,3.678,495,1.795,502,3.006,508,2.656,545,2.085,631,2.085,639,4.575,653,3.568,654,4.555,655,4.629,656,3.568,657,2.462,658,3.34,659,2.797,660,3.991,661,2.797,662,3.006]],["title/controllers/RequestController.html",[38,1.402,86,2.462]],["body/controllers/RequestController.html",[0,0.093,3,0.09,4,0.09,5,0.07,7,0.167,9,1.288,11,1.389,13,3.025,14,0.657,15,0.017,16,0.954,17,1.288,21,0.981,22,0.622,27,0.316,32,0.368,33,0.09,35,0.004,36,0.007,37,0.004,38,0.727,40,0.727,42,1.118,44,1.188,45,3.536,47,1.766,48,0.423,51,1.112,52,1.112,53,0.975,54,2.963,55,1.54,77,2.117,79,1.505,86,2.058,97,1.814,98,0.987,99,2.408,110,1.384,122,1.188,148,1.94,149,1.155,163,2.459,165,1.59,166,2.037,172,1.188,174,2.743,178,3.232,179,2.427,181,3.298,188,2.963,189,2.229,190,1.188,191,2.229,192,1.188,199,1.517,200,2.405,218,0.934,219,2.037,220,1.02,227,3.112,239,1.384,251,1.915,253,1.384,264,1.384,266,1.384,317,0.987,381,2.444,385,2.444,472,2.581,477,2.229,504,2.758,508,0.763,511,3.831,521,0.987,545,2.055,554,3.024,558,1.188,653,2.758,661,3.232,663,1.696,664,2.8,665,3.98,666,3.98,667,3.98,668,3.98,669,1.967,670,1.967,671,4.611,672,3.169,673,1.967,674,3.169,675,3.169,676,3.169,677,3.169,678,3.98,679,1.967,680,1.967,681,1.967,682,3.98,683,3.07,684,3.473,685,1.967,686,3.473,687,1.967,688,3.112,689,3.169,690,1.967,691,1.967,692,2.229,693,1.967,694,4.564,695,1.967,696,1.967,697,1.967,698,1.967,699,1.967,700,1.384,701,1.517,702,1.517,703,1.696,704,1.517,705,2.444,706,1.517,707,3.98,708,1.696,709,1.696,710,2.229,711,1.517,712,1.517,713,1.517,714,1.696,715,1.967,716,1.517,717,1.967,718,1.696,719,1.967,720,1.967,721,1.967,722,1.967,723,1.967,724,1.967,725,1.967,726,1.967,727,4.564,728,4.564,729,1.967,730,3.07,731,3.431,732,1.696,733,1.696,734,1.517,735,1.967,736,1.967,737,1.967,738,1.967,739,1.967]],["title/classes/RequestEntity.html",[0,0.18,99,1.707]],["body/classes/RequestEntity.html",[0,0.221,1,2.512,2,0.591,3,0.115,4,0.115,5,0.089,7,0.214,8,0.864,9,1.84,10,2.493,11,1.327,12,2.493,13,2.172,14,0.707,15,0.017,16,1.253,17,1.808,18,3.39,19,3.39,20,3.155,21,1.476,22,0.872,27,0.315,28,2.414,29,0.739,30,1.661,31,1.767,32,0.47,33,0.175,34,1.336,35,0.006,36,0.009,37,0.006,97,1.405,98,1.26,99,1.729,149,0.789,153,1.255,157,2.165,161,2.172,163,1.563,164,1.643,165,2.34,167,2.042,179,1.42,387,2.024,510,1.336,512,1.729,513,3.28,514,3.28,515,3.28,518,3.155,631,2.866,633,2.099,651,1.421,652,3.28,658,2.953,740,1.937,741,3.28,742,4.85,743,4.501,744,3.84,745,2.511,746,4.173,747,2.165,748,2.701,749,2.511,750,2.493,751,2.165,752,2.511,753,2.511,754,2.511,755,2.511,756,2.511,757,2.511,758,4.019,759,2.511,760,3.31,761,2.511,762,2.511,763,2.511,764,2.511,765,2.165,766,3.596,767,2.511,768,3.673,769,1.767,770,1.767,771,1.767,772,1.767,773,2.701,774,2.701,775,1.937,776,2.493,777,1.518,778,2.165,779,2.165,780,3.31,781,2.165,782,2.165]],["title/classes/RequestFillableFields.html",[0,0.18,651,2.144]],["body/classes/RequestFillableFields.html",[0,0.28,1,2.116,2,0.898,3,0.174,4,0.174,5,0.135,7,0.325,8,1.17,11,1.365,14,0.619,15,0.017,16,1.185,20,2.029,21,1.365,22,0.474,27,0.358,28,2.79,29,1.123,30,1.888,31,2.684,32,0.714,33,0.237,34,2.029,35,0.008,36,0.012,37,0.008,97,1.591,98,1.915,99,1.718,149,1.068,153,1.027,161,2.158,163,2.116,164,2.224,165,1.915,167,2.765,179,1.922,387,2.016,510,2.029,512,1.718,513,2.684,514,2.684,515,2.684,518,3.533,631,2.859,651,2.94,652,2.684,658,2.94,740,2.943,741,2.684,742,4.482,743,5.473,746,4.159,748,2.684,750,2.478,758,4.482,760,3.29,766,4.01,773,3.657,774,3.657,775,2.943,776,3.375,777,2.306,778,3.29,779,3.29,780,4.482,781,3.29,782,3.29,783,3.816]],["title/classes/RequestFillableFields-1.html",[0,0.15,651,1.79,784,3.165]],["body/classes/RequestFillableFields-1.html",[0,0.281,2,1.097,3,0.213,4,0.213,5,0.165,7,0.397,8,1.334,11,1.524,14,0.578,15,0.017,21,1.402,22,0.579,27,0.333,28,2.655,29,1.371,30,1.254,32,0.872,33,0.271,35,0.01,36,0.013,37,0.01,99,2.937,125,3.026,149,0.957,153,1.254,163,2.414,164,2.537,179,2.192,495,2.529,503,3.278,504,2.816,518,3.154,521,2.338,545,2.098,638,3.594,639,3.278,648,4.574,649,4.017,650,3.594,651,3.354,652,4.589,785,4.659]],["title/classes/RequestFormDto.html",[0,0.18,511,2.291]],["body/classes/RequestFormDto.html",[0,0.218,1,2.718,2,0.754,3,0.146,4,0.146,5,0.113,7,0.273,8,1.034,9,1.89,10,2.985,11,1.339,12,2.985,13,2.601,14,0.704,15,0.017,16,1.259,17,1.759,18,3.818,19,3.818,20,3.127,21,1.469,22,0.848,27,0.234,30,1.9,32,0.599,33,0.21,35,0.007,36,0.01,37,0.007,53,2.259,101,1.871,153,0.862,165,3.125,166,2.393,167,2.445,472,3.043,495,1.241,500,4.136,501,4.803,502,2.079,503,2.252,504,1.935,505,2.76,507,2.76,508,2.086,510,1.703,511,2.778,512,2.07,513,3.784,514,3.784,515,3.784,633,1.442,768,4.136,769,2.252,770,2.252,771,2.252,772,2.252,786,3.202,787,3.202,788,3.202,789,3.202]],["title/modules/RequestModule.html",[57,1.067,73,2.291]],["body/modules/RequestModule.html",[0,0.214,3,0.206,4,0.206,5,0.16,15,0.016,27,0.366,33,0.206,35,0.01,36,0.013,37,0.01,40,2.148,48,0.97,57,1.808,59,1.931,60,1.931,61,2.265,62,2.265,63,2.032,64,3.224,65,3.224,73,4.521,75,3.822,77,4.063,80,2.916,81,2.265,82,2.143,86,4.172,88,3.286,91,2.727,92,2.032,99,2.032,107,3.481,521,2.265,708,3.891,790,3.891,791,4.513,792,3.891,793,4.513,794,4.513,795,4.513,796,4.513]],["title/injectables/RequestService.html",[77,2.016,142,1.167]],["body/injectables/RequestService.html",[0,0.102,3,0.099,4,0.099,5,0.076,7,0.184,8,0.767,9,1.557,11,1.479,13,2.963,14,0.59,15,0.018,16,0.993,21,0.91,22,0.773,27,0.308,29,0.634,33,0.099,35,0.005,36,0.008,37,0.005,42,1.203,47,2.059,48,0.464,53,0.664,55,1.714,77,1.814,92,0.971,97,1.294,99,2.98,101,1.722,122,2.556,142,1.05,143,1.024,145,1.711,148,2.345,149,1.242,153,0.918,165,1.711,174,2.874,179,2.303,205,2.214,208,3.383,216,1.517,218,2.77,219,2.375,220,1.794,227,2.795,251,2.906,317,1.711,387,0.836,488,1.4,504,2.556,508,0.836,511,3.854,518,1.814,521,1.082,545,0.971,633,0.971,650,1.663,653,2.906,664,2.399,671,4.146,686,2.214,692,3.685,700,1.517,709,1.859,710,2.399,714,1.859,718,2.94,733,1.859,734,2.63,775,1.663,797,1.859,798,3.41,799,3.41,800,2.399,801,3.41,802,2.156,803,3.41,804,3.41,805,2.94,806,2.156,807,3.41,808,2.156,809,2.63,810,2.156,811,3.41,812,2.156,813,3.41,814,2.156,815,2.156,816,3.41,817,2.156,818,3.41,819,4.23,820,2.156,821,1.859,822,1.4,823,1.663,824,2.156,825,2.156,826,2.156,827,2.94,828,3.41,829,2.156,830,2.399,831,4.23,832,2.156,833,2.156,834,2.156,835,2.156,836,2.156,837,2.156,838,2.156,839,2.156,840,2.156,841,2.156,842,2.156,843,2.156,844,2.156,845,2.156,846,2.156,847,2.156,848,2.156,849,2.156,850,2.156,851,2.156,852,2.156,853,2.156,854,2.156,855,2.94,856,2.156,857,2.156,858,2.156,859,3.41,860,2.156,861,2.156,862,2.156,863,1.859,864,2.156,865,2.156,866,2.156]],["title/classes/ResponseTokenDto.html",[0,0.18,258,2.667]],["body/classes/ResponseTokenDto.html",[0,0.209,2,1.039,3,0.202,4,0.202,5,0.156,7,0.376,8,1.289,11,1.447,14,0.709,15,0.017,16,1.022,17,1.637,22,0.79,27,0.225,30,1.811,32,0.826,33,0.202,35,0.01,36,0.013,37,0.01,97,1.542,153,1.877,154,5.482,166,2.588,167,3.579,258,4.03,287,3.72,293,4.904,311,5.482,867,5.801,868,3.807,869,5.728,870,4.415,871,5.728,872,5.728,873,4.938,874,4.415,875,4.415]],["title/classes/ShoppingList.html",[0,0.18,114,1.8]],["body/classes/ShoppingList.html",[0,0.236,2,0.844,3,0.164,4,0.164,5,0.127,7,0.305,8,1.121,11,1.397,14,0.686,15,0.017,16,0.888,17,1.731,21,1.071,22,0.835,27,0.315,28,2.645,29,1.055,30,1.81,32,0.671,33,0.228,35,0.008,36,0.011,37,0.008,114,2.718,149,0.737,153,1.54,163,2.027,164,2.131,387,1.931,508,1.931,520,3.804,521,1.8,631,2.785,633,2.243,656,3.458,657,2.649,658,3.498,661,3.458,662,2.329,741,4.026,746,3.504,747,3.092,748,3.504,750,4.016,751,3.092,765,3.092,773,3.504,774,3.504,876,3.669,877,2.766,878,4.35,879,4.934,880,3.586,881,3.586,882,3.586,883,3.586,884,3.586,885,3.586,886,3.586,887,3.586,888,3.586,889,4.295,890,3.092,891,2.523]],["title/controllers/ShoppingListController.html",[38,1.402,87,2.462]],["body/controllers/ShoppingListController.html",[0,0.095,3,0.092,4,0.092,5,0.071,7,0.171,9,1.39,11,1.498,14,0.667,15,0.017,17,1.302,21,0.432,22,0.671,27,0.31,32,0.376,33,0.092,35,0.004,36,0.007,37,0.004,38,0.742,40,0.742,42,1.137,44,1.213,45,3.563,47,1.905,48,0.432,51,1.136,52,1.136,53,0.992,54,2.999,55,1.662,77,2.147,78,2.283,87,2.092,97,1.822,98,1.008,111,1.731,114,3.084,115,1.213,117,1.549,122,1.213,148,2.093,149,1.109,153,1.361,172,1.213,174,2.836,178,3.262,179,2.097,181,3.32,184,1.731,188,2.621,189,2.267,190,1.213,191,1.413,192,1.213,199,1.549,200,2.439,218,2.193,219,1.88,220,1.628,225,1.549,227,2.709,239,1.413,251,1.947,253,1.413,266,1.413,317,1.617,508,2.679,554,3.056,558,1.213,633,0.904,657,3.706,659,3.428,683,1.549,684,2.999,686,2.621,688,3.548,692,2.267,701,1.549,702,1.549,704,1.549,705,2.485,706,1.549,710,1.413,711,1.549,712,1.549,713,1.549,716,1.549,730,3.113,731,1.731,732,1.731,734,1.549,821,1.731,830,2.839,863,1.731,876,3.017,892,1.731,893,3.479,894,3.479,895,3.222,896,3.222,897,4.036,898,5.399,899,2.008,900,2.008,901,4.036,902,2.008,903,2.008,904,2.008,905,3.222,906,1.731,907,2.008,908,2.778,909,2.008,910,3.222,911,2.008,912,2.008,913,2.008,914,2.008,915,3.222,916,2.008,917,2.008,918,1.731,919,2.008,920,1.731,921,1.731,922,1.731,923,2.008,924,2.008,925,2.008,926,2.008,927,2.008,928,1.731,929,3.479,930,2.778,931,3.222,932,2.008,933,1.731,934,2.008,935,2.008,936,2.008,937,2.008,938,2.008,939,2.008,940,2.008,941,1.731,942,1.731,943,1.731,944,1.731,945,2.008]],["title/classes/ShoppingListFillableFields.html",[0,0.18,891,2.667]],["body/classes/ShoppingListFillableFields.html",[0,0.267,2,1.014,3,0.197,4,0.197,5,0.153,7,0.367,8,1.269,11,1.433,14,0.613,15,0.017,16,0.769,21,0.926,22,0.535,27,0.34,28,2.816,29,1.268,30,1.91,32,0.806,33,0.258,35,0.01,36,0.013,37,0.01,114,2.677,149,0.885,153,1.16,163,2.295,164,2.412,387,1.671,508,2.186,520,3.913,521,2.163,631,2.539,656,3.407,657,2.999,658,3.189,661,2.604,662,2.798,741,3.032,746,3.032,748,3.032,750,3.661,773,3.966,774,3.966,876,2.999,877,3.324,878,4.689,879,3.715,889,4.861,890,3.715,891,3.966,946,4.309]],["title/classes/ShoppingListFormDto.html",[0,0.18,659,2.291]],["body/classes/ShoppingListFormDto.html",[0,0.266,2,1.008,3,0.196,4,0.196,5,0.152,7,0.365,8,1.264,11,1.347,14,0.649,15,0.017,16,1.002,17,1.446,21,1.347,22,0.697,27,0.286,30,1.79,32,0.801,33,0.257,35,0.01,36,0.012,37,0.01,53,1.928,125,2.781,166,2.286,179,2.076,387,2.177,472,3.544,495,2.177,502,2.781,506,3.693,508,2.747,509,3.693,545,2.529,631,2.529,633,2.529,639,3.013,653,2.588,654,4.833,656,3.786,657,2.278,658,3.762,659,3.394,660,4.842,661,3.786,662,2.781]],["title/modules/ShoppingListModule.html",[57,1.067,74,2.462]],["body/modules/ShoppingListModule.html",[0,0.211,3,0.204,4,0.204,5,0.158,15,0.016,27,0.365,33,0.204,35,0.01,36,0.013,37,0.01,40,2.131,48,0.958,57,1.797,59,1.906,60,1.906,61,2.237,62,2.237,63,2.007,64,3.205,65,3.205,73,4.328,74,4.847,78,4.313,80,2.892,81,2.237,82,2.116,87,4.147,88,3.26,91,2.693,92,2.007,105,3.842,113,3.842,114,2.116,115,2.693,117,3.438,657,3.397,876,2.37,947,3.842,948,4.457,949,3.842,950,4.457,951,4.457,952,4.457]],["title/classes/ShoppingListRequest.html",[0,0.18,520,2.144]],["body/classes/ShoppingListRequest.html",[0,0.21,2,1.043,3,0.202,4,0.202,5,0.157,7,0.377,8,1.291,11,1.448,14,0.657,15,0.017,17,1.639,21,0.952,22,0.791,27,0.325,28,2.336,29,1.303,30,1.192,32,0.829,33,0.202,35,0.01,36,0.013,37,0.01,114,3.503,115,2.676,149,0.91,153,1.714,163,2.336,164,2.724,495,2.225,508,2.612,520,3.602,633,1.994,640,3.818,646,3.818,648,4.427,657,2.356,686,4.135,876,3.583,953,3.818,954,4.429,955,4.429,956,4.429,957,3.818]],["title/injectables/ShoppingListService.html",[78,2.144,142,1.167]],["body/injectables/ShoppingListService.html",[0,0.127,3,0.122,4,0.122,5,0.095,7,0.228,9,1.565,11,1.428,14,0.593,15,0.017,22,0.755,27,0.339,29,0.787,33,0.122,35,0.006,36,0.009,37,0.006,42,1.422,47,2.041,48,0.575,53,0.823,55,1.78,78,2.279,92,1.205,97,1.304,98,1.343,114,3.476,115,1.617,142,1.24,143,1.27,145,2.022,148,2.357,149,1.248,153,0.72,174,2.92,205,2.616,208,3.794,216,1.882,218,1.27,219,2.354,220,1.862,227,2.706,317,1.343,508,2.091,520,3.05,521,1.343,656,1.617,657,2.577,658,1.513,659,3.811,661,2.434,662,1.737,684,1.737,686,2.616,688,3.05,692,1.882,700,1.882,710,1.882,800,2.834,805,3.473,809,3.107,822,1.737,823,2.064,827,3.473,830,1.882,876,3.355,878,1.882,893,3.473,922,2.307,941,2.307,957,2.307,958,2.307,959,4.029,960,2.675,961,2.675,962,4.029,963,4.029,964,2.675,965,2.675,966,2.675,967,4.029,968,2.675,969,4.029,970,2.675,971,2.675,972,2.675,973,2.675,974,2.675,975,2.675,976,2.675,977,2.675,978,4.846,979,4.029,980,4.029,981,4.846,982,4.029,983,4.846,984,2.675,985,2.675,986,2.675,987,2.675,988,2.675]],["title/classes/UpdateUserDto.html",[0,0.18,989,2.462]],["body/classes/UpdateUserDto.html",[0,0.234,1,2.798,2,0.834,3,0.162,4,0.162,5,0.125,7,0.301,8,1.111,9,1.857,10,3.207,11,1.062,12,3.207,13,2.793,14,0.684,15,0.017,16,1.312,17,1.805,18,3.994,19,3.994,20,3.271,21,1.507,22,0.871,27,0.29,30,0.953,31,4,32,0.663,33,0.162,35,0.008,36,0.011,37,0.008,495,2.597,499,2.3,510,1.884,512,2.224,607,4.744,622,3.692,623,3.692,624,3.692,627,4.258,631,2.224,768,4.327,769,2.492,770,2.492,771,2.492,772,2.492,989,3.207,990,5.577,991,3.054,992,4,993,3.542,994,3.542,995,3.542,996,3.542,997,3.542,998,3.054,999,3.054]],["title/classes/User.html",[0,0.18,97,1.02]],["body/classes/User.html",[0,0.259,1,2.592,2,0.648,3,0.126,4,0.126,5,0.097,7,0.234,8,0.926,9,1.754,10,2.672,11,1.259,12,2.672,13,2.328,14,0.683,15,0.017,16,1.34,17,1.781,18,3.552,19,3.552,20,3.268,21,1.465,22,0.859,27,0.313,28,2.226,29,0.81,30,0.741,32,0.515,33,0.225,34,2.622,35,0.006,36,0.009,37,0.006,97,1.327,149,0.845,153,1.327,161,3.855,163,1.675,164,2.109,220,0.886,315,3.083,319,3.094,387,1.596,495,2.642,510,1.464,512,1.853,545,1.239,610,2.487,622,3.552,623,3.552,624,3.802,631,2.463,632,3.201,633,1.239,637,1.936,688,2.065,768,3.848,769,1.936,770,1.936,771,1.936,772,1.936,776,2.672,777,2.978,992,3.848,1000,1.936,1001,4.929,1002,2.753,1003,2.753,1004,2.753,1005,2.753,1006,2.753,1007,2.753,1008,2.753,1009,2.753,1010,2.753,1011,2.753,1012,2.753,1013,2.123,1014,1.936,1015,3.802,1016,1.663,1017,2.123]],["title/controllers/UserController.html",[38,1.402,85,2.462]],["body/controllers/UserController.html",[0,0.137,3,0.132,4,0.132,5,0.103,7,0.247,9,1.101,11,1.346,14,0.691,15,0.017,17,1.308,21,0.623,22,0.631,27,0.33,32,0.542,33,0.132,35,0.006,36,0.009,37,0.006,38,1.071,40,1.071,42,1.509,44,1.751,45,3.783,47,1.793,48,0.623,51,1.639,52,1.639,53,0.892,54,3.299,55,1.564,79,2.03,85,2.776,97,1.971,122,1.751,148,1.658,149,1.152,153,1.906,166,2.283,167,2.983,172,1.751,174,2.762,178,3.389,179,1.581,181,3.329,188,2.776,190,1.751,192,1.751,200,2.583,219,1.179,220,1.377,225,2.235,227,2.55,251,2.583,264,2.038,317,1.454,554,2.583,558,1.751,633,1.305,664,3.946,683,2.235,684,2.776,688,2.815,701,2.235,702,2.235,704,2.235,705,3.298,706,2.235,711,2.235,712,2.235,713,2.235,716,2.235,730,3.298,800,3.574,830,2.038,894,3.686,906,2.498,908,2.498,918,2.498,920,2.498,921,2.498,928,2.498,929,2.498,930,2.498,933,2.498,942,2.498,944,2.498,989,4.204,1014,2.038,1018,2.498,1019,2.897,1020,2.897,1021,2.897,1022,2.897,1023,2.897,1024,2.897,1025,2.897,1026,2.897,1027,2.897,1028,5.081,1029,2.235,1030,2.498,1031,2.498,1032,2.498,1033,2.897,1034,2.897,1035,2.897,1036,2.897,1037,2.897,1038,4.275,1039,2.897,1040,4.275,1041,2.897,1042,2.897]],["title/classes/UserFillableFields.html",[0,0.18,1016,2.291]],["body/classes/UserFillableFields.html",[0,0.289,1,1.983,2,0.818,3,0.159,4,0.159,5,0.123,7,0.296,8,1.096,9,1.714,11,1.047,14,0.68,15,0.017,16,1.362,20,1.847,21,1.381,22,0.849,27,0.339,28,2.482,29,1.022,30,0.935,32,0.65,33,0.257,34,2.591,35,0.008,36,0.011,37,0.008,97,1.311,149,1,153,0.935,161,3.633,163,1.983,164,2.084,220,1.118,315,3.223,319,3.45,387,1.347,495,2.49,510,1.847,512,1.564,545,1.564,610,2.944,622,3.96,623,3.96,624,4.17,631,2.193,632,3.163,637,2.444,688,2.445,776,3.163,777,2.944,992,4.29,1000,2.444,1013,2.679,1014,2.444,1015,4.339,1016,2.944,1017,4.339,1043,3.473,1044,3.473,1045,3.473,1046,3.473,1047,3.473,1048,3.473,1049,3.473]],["title/classes/UserID.html",[0,0.18,688,1.902]],["body/classes/UserID.html",[0,0.305,1,2.159,2,0.925,3,0.18,4,0.18,5,0.139,7,0.335,8,1.193,11,1.291,14,0.517,15,0.017,16,1.343,20,2.091,21,1.443,22,0.488,27,0.352,28,2.616,29,1.157,30,1.058,32,0.735,33,0.274,34,2.821,35,0.009,36,0.012,37,0.009,97,1.428,149,1.089,153,1.058,161,3.796,163,2.159,164,2.269,220,1.266,315,3.013,319,3,387,1.524,495,2.602,510,2.091,512,1.77,545,1.77,610,3.205,622,3.444,623,3.444,624,3.898,631,2.388,632,3.444,637,2.765,688,3.368,776,3.444,777,3.205,992,3.731,1000,2.765,1013,3.032,1014,2.765,1015,4.63,1016,2.375,1017,3.032,1050,3.931]],["title/modules/UserModule.html",[57,1.067,75,2.016]],["body/modules/UserModule.html",[0,0.216,3,0.208,4,0.208,5,0.161,15,0.017,27,0.359,33,0.208,35,0.01,36,0.013,37,0.01,40,2.161,48,0.98,57,1.816,59,1.949,60,1.949,61,2.286,62,2.286,63,2.051,64,3.239,65,3.239,75,3.896,79,3.632,80,2.933,81,2.286,82,2.163,85,4.191,88,2.577,91,2.753,92,2.051,97,1.226,119,3.928,251,2.753,1029,3.514,1030,3.928,1051,3.928,1052,3.928,1053,4.556,1054,4.556,1055,4.556]],["title/modules/UsersModule.html",[57,1.067,1056,2.667]],["body/modules/UsersModule.html",[0,0.225,3,0.216,4,0.216,5,0.168,15,0.017,27,0.363,33,0.216,35,0.011,36,0.013,37,0.011,40,2.215,48,1.018,57,1.85,59,2.026,60,2.026,61,2.377,62,2.377,63,2.133,64,3.298,65,2.377,76,4.116,80,3.007,81,2.377,82,2.249,84,4.268,88,2.679,91,2.862,92,2.133,101,1.928,195,4.084,196,3.653,1056,5.12,1057,4.084,1058,4.737,1059,4.737,1060,4.737,1061,4.737]],["title/injectables/UsersService.html",[79,1.8,142,1.167]],["body/injectables/UsersService.html",[0,0.123,3,0.118,4,0.118,5,0.091,7,0.22,9,1.544,11,1.02,14,0.585,15,0.018,16,1.173,22,0.774,27,0.306,29,0.76,33,0.118,35,0.006,36,0.009,37,0.006,42,1.385,47,2.116,48,0.556,53,0.795,55,1.977,79,1.863,92,1.163,97,1.835,142,1.208,143,1.227,145,1.969,148,2.326,149,1.232,153,0.695,174,2.963,205,2.548,208,3.727,216,1.818,218,1.227,219,2.156,220,1.263,227,3.301,247,1.993,248,2.228,250,1.993,315,2.859,317,1.969,319,3.526,477,1.818,664,3.727,684,1.678,700,1.818,800,2.761,809,3.027,822,1.678,823,1.993,989,3.44,1016,3.201,1029,1.993,1031,2.228,1032,2.228,1062,2.228,1063,3.924,1064,3.924,1065,2.584,1066,2.584,1067,3.924,1068,3.924,1069,2.584,1070,2.584,1071,2.584,1072,3.924,1073,2.584,1074,3.924,1075,2.584,1076,3.924,1077,2.584,1078,2.584,1079,3.924,1080,2.584,1081,2.584,1082,2.584,1083,2.584,1084,2.584,1085,2.584,1086,3.924,1087,3.924,1088,3.924,1089,3.924,1090,3.924,1091,3.924,1092,3.924,1093,2.584,1094,2.584,1095,2.584,1096,2.584,1097,3.924,1098,2.584,1099,2.228,1100,1.993,1101,2.584,1102,2.584,1103,2.584,1104,2.584,1105,2.584,1106,2.584,1107,2.584,1108,2.584,1109,2.584,1110,2.584,1111,2.584,1112,2.584,1113,2.584,1114,2.584,1115,2.584,1116,2.584,1117,2.584,1118,2.584,1119,2.584,1120,2.584,1121,2.584]],["title/coverage.html",[1122,3.992]],["body/coverage.html",[0,0.353,1,1.01,5,0.088,6,2.139,14,0.242,15,0.017,35,0.006,36,0.008,37,0.006,38,2.272,39,1.745,41,2.139,49,1.499,57,0.698,63,1.117,76,1.403,77,1.32,78,1.403,79,1.178,84,1.611,85,1.611,86,1.611,87,1.611,89,1.117,97,0.668,99,1.117,101,1.548,114,1.178,142,2.001,144,2.139,152,2.934,169,1.745,171,2.139,183,1.611,204,2.139,220,0.799,229,1.745,230,2.139,235,1.499,243,1.745,254,1.403,258,1.745,278,1.611,296,2.139,320,1.745,321,2.139,337,1.611,341,2.139,349,2.139,395,5.605,493,2.139,494,2.139,500,1.745,501,2.934,502,3.368,508,1.794,511,1.499,518,1.32,520,1.403,549,3.004,550,1.745,552,2.934,554,1.499,558,1.499,559,2.139,560,2.139,578,1.745,579,2.139,583,2.139,601,2.139,610,1.499,611,2.139,621,2.139,638,2.934,651,2.152,653,1.499,654,2.934,659,1.499,663,2.139,688,1.245,740,2.934,797,2.139,822,1.611,867,2.139,868,2.139,876,2.975,877,2.934,891,1.745,892,2.139,953,2.139,958,2.139,989,1.611,990,2.139,991,2.139,1000,3.255,1016,1.499,1018,2.139,1062,2.139,1122,1.914,1123,1.914,1124,2.481,1125,2.481,1126,2.934,1127,2.481,1128,7.809,1129,6.848,1130,6.501,1131,6.635,1132,3.804,1133,2.481,1134,5.903,1135,4.627,1136,2.139,1137,2.139,1138,2.139,1139,2.481,1140,2.481,1141,3.804,1142,2.481,1143,2.481,1144,4.627,1145,2.481,1146,3.804,1147,4.472,1148,2.139,1149,2.139,1150,2.139,1151,2.139,1152,2.139,1153,2.139,1154,2.481,1155,2.481]],["title/dependencies.html",[60,1.951,1156,3.165]],["body/dependencies.html",[0,0.234,15,0.018,29,1.042,32,0.663,35,0.008,36,0.011,37,0.008,48,0.762,60,2.113,92,1.595,281,2.732,283,2.492,287,3.207,425,3.054,428,3.054,462,2.732,499,2.3,535,4.902,538,4.385,592,3.809,617,3.054,777,2.14,1157,3.542,1158,3.542,1159,5.685,1160,3.542,1161,4.938,1162,3.542,1163,4.902,1164,3.542,1165,3.542,1166,3.542,1167,3.542,1168,3.542,1169,4.938,1170,3.542,1171,3.542,1172,3.542,1173,3.542,1174,3.542,1175,3.542,1176,3.542,1177,3.542,1178,3.542,1179,3.542,1180,3.542,1181,3.542,1182,3.542,1183,3.542,1184,3.542,1185,3.542,1186,3.542,1187,3.054,1188,3.542,1189,3.542,1190,3.542,1191,3.542,1192,3.542,1193,3.542,1194,3.542,1195,4.938,1196,3.542,1197,3.542,1198,3.542,1199,3.542,1200,3.542,1201,3.542,1202,3.542,1203,3.542,1204,3.542,1205,3.542,1206,3.542,1207,3.542,1208,3.542,1209,3.542,1210,3.542,1211,3.542,1212,3.542,1213,3.542,1214,3.542,1215,3.542,1216,3.542,1217,3.542,1218,3.542,1219,3.054,1220,3.542,1221,3.542,1222,3.542,1223,3.542,1224,3.542,1225,4.938,1226,3.542,1227,3.542,1228,3.542,1229,3.542,1230,3.542,1231,3.542,1232,3.542,1233,3.542,1234,3.542,1235,3.542,1236,3.542,1237,3.542,1238,3.542,1239,3.542,1240,3.542,1241,3.542,1242,3.542]],["title/miscellaneous/enumerations.html",[1243,1.913,1244,3.931]],["body/miscellaneous/enumerations.html",[7,0.416,15,0.017,35,0.011,36,0.014,37,0.011,220,1.966,488,4.927,508,2.368,632,3.965,656,3.69,766,4.71,876,2.596,998,5.265,999,5.265,1243,2.95,1244,4.209,1245,4.882,1246,6.983,1247,4.882,1248,4.882,1249,6.107,1250,4.882,1251,6.107,1252,6.983,1253,6.107,1254,6.107,1255,4.882,1256,6.107]],["title/miscellaneous/functions.html",[1243,1.913,1257,3.931]],["body/miscellaneous/functions.html",[7,0.503,15,0.015,35,0.013,36,0.015,37,0.013,63,3.258,1126,4.558,1243,3.57,1257,5.094,1258,5.094]],["title/index.html",[7,0.269,1259,2.729,1260,2.729]],["body/index.html",[5,0.139,14,0.251,15,0.016,29,1.674,35,0.006,36,0.009,37,0.006,43,3.018,60,1.674,97,0.693,149,0.529,168,1.811,185,3.374,205,3.889,231,2.22,232,2.22,245,2.22,247,3.651,287,3.074,315,2.654,381,1.986,387,1.517,434,3.374,435,2.22,436,3.374,461,2.22,462,3.651,464,2.22,467,5.53,470,4.081,478,3.374,524,2.22,527,2.22,529,4.559,566,4.081,569,1.986,572,2.22,592,1.986,873,2.22,878,1.811,943,3.374,1099,2.22,1100,1.986,1122,1.986,1123,1.986,1187,4.081,1219,2.22,1261,2.575,1262,6.811,1263,5.288,1264,2.575,1265,3.913,1266,2.575,1267,3.913,1268,2.575,1269,6.415,1270,2.575,1271,2.575,1272,2.575,1273,2.575,1274,2.575,1275,4.734,1276,2.575,1277,2.575,1278,2.575,1279,2.575,1280,2.575,1281,2.575,1282,2.575,1283,2.575,1284,2.575,1285,4.734,1286,2.575,1287,2.575,1288,2.575,1289,2.575,1290,2.22,1291,2.575,1292,2.575,1293,2.575,1294,3.913,1295,2.575,1296,2.575,1297,3.374,1298,3.913,1299,2.575,1300,2.575,1301,2.22,1302,2.575,1303,2.575,1304,4.734,1305,2.575,1306,2.575,1307,2.575,1308,2.575,1309,2.575,1310,3.913,1311,3.913,1312,2.575,1313,3.374,1314,2.22,1315,2.575,1316,2.575,1317,3.913,1318,2.575,1319,4.734,1320,2.575,1321,2.575,1322,3.913,1323,3.913,1324,3.913,1325,2.575,1326,5.688,1327,2.575,1328,2.575,1329,2.575,1330,2.575,1331,2.575,1332,2.575,1333,2.575,1334,2.575,1335,3.913,1336,2.575,1337,2.575,1338,2.575,1339,2.575,1340,2.575,1341,2.575,1342,2.575,1343,3.913,1344,3.913,1345,3.913,1346,2.575,1347,2.575,1348,2.575,1349,4.081,1350,2.575,1351,2.575,1352,2.575,1353,3.913,1354,2.575,1355,3.913,1356,2.575,1357,2.575,1358,3.913,1359,2.575,1360,2.575,1361,2.575,1362,2.575,1363,2.575,1364,2.575,1365,3.913,1366,2.22,1367,4.734,1368,3.913,1369,4.734,1370,4.734,1371,2.575,1372,2.575,1373,3.913,1374,2.575,1375,2.575,1376,2.575,1377,3.913,1378,2.575,1379,2.575,1380,3.913,1381,2.575,1382,2.575,1383,2.575,1384,2.575,1385,3.913,1386,2.575,1387,2.575,1388,2.575,1389,2.575,1390,2.575,1391,2.575,1392,2.575,1393,2.575,1394,2.575,1395,2.575,1396,2.575,1397,2.575,1398,2.575,1399,2.575,1400,3.913,1401,4.734,1402,3.913,1403,2.22,1404,2.575,1405,2.575,1406,3.913,1407,2.575,1408,3.913,1409,2.575,1410,2.575,1411,2.575,1412,2.575,1413,2.575]],["title/license.html",[1259,2.729,1260,2.729,1414,2.729]],["body/license.html",[15,0.013,35,0.01,36,0.013,37,0.01,82,2.077,385,4.392,855,3.772,1100,3.375,1123,3.375,1163,3.772,1290,3.772,1301,4.909,1314,3.772,1349,4.909,1414,3.772,1415,5.694,1416,6.33,1417,4.375,1418,4.375,1419,5.694,1420,4.375,1421,4.375,1422,4.375,1423,4.375,1424,4.375,1425,4.375,1426,7.438,1427,4.375,1428,4.375,1429,4.375,1430,6.33,1431,4.375,1432,4.375,1433,4.375,1434,4.375,1435,4.375,1436,4.375,1437,4.375,1438,4.375,1439,4.375,1440,4.375,1441,5.694,1442,4.375,1443,4.375,1444,4.375,1445,4.375,1446,4.375,1447,5.694,1448,5.694,1449,4.375,1450,4.375,1451,4.375,1452,4.375,1453,4.375,1454,4.375,1455,4.375,1456,4.375,1457,4.375,1458,4.375,1459,4.375,1460,4.375,1461,4.375,1462,4.375,1463,4.375,1464,4.375,1465,4.375,1466,4.375,1467,4.375,1468,4.375,1469,4.375,1470,4.375,1471,4.375,1472,4.375,1473,4.375,1474,4.375,1475,4.375,1476,4.375]],["title/modules.html",[59,2.214]],["body/modules.html",[15,0.014,35,0.011,36,0.014,37,0.011,58,3.606,59,2.193,69,3.329,70,3.329,71,2.9,72,3.329,73,3.098,74,3.329,75,2.727,1056,3.606,1366,4.42,1477,7.592,1478,7.592,1479,7.592,1480,7.65,1481,5.126]],["title/overview.html",[1482,4.462]],["body/overview.html",[1,2.243,2,0.787,15,0.017,35,0.007,36,0.011,37,0.007,40,1.236,49,3.33,57,0.941,58,5.455,59,1.43,60,1.43,61,1.678,62,1.678,63,1.506,64,1.678,65,1.678,66,2.883,67,2.883,68,2.883,69,4.681,70,4.111,71,3.581,72,3.578,73,4.247,74,4.487,75,3.675,76,3.392,77,3.675,78,3.909,79,3.281,80,2.38,81,1.678,82,1.588,89,2.7,143,1.588,254,3.117,275,2.883,277,2.883,278,3.578,335,2.883,336,2.883,337,3.578,342,2.883,343,2.883,551,2.579,790,2.883,792,2.883,947,2.883,949,2.883,1051,2.883,1052,2.883,1056,4.218,1057,2.883,1482,2.883,1483,4.742,1484,3.344,1485,3.344,1486,3.344]],["title/miscellaneous/variables.html",[380,3.517,1243,1.913]],["body/miscellaneous/variables.html",[7,0.308,14,0.658,15,0.018,16,1.163,35,0.008,36,0.011,37,0.008,55,1.115,57,1.412,140,4.325,166,1.474,179,1.855,219,2.746,220,1.615,380,2.794,387,2.734,488,4.578,550,2.549,552,2.794,554,3.031,555,3.123,556,3.123,557,3.123,703,3.123,750,2.352,822,4.033,1126,2.794,1136,3.123,1137,3.123,1138,4.325,1147,3.123,1148,4.325,1149,4.325,1150,4.325,1151,4.325,1152,3.123,1153,4.325,1243,2.189,1258,3.123,1297,4.325,1313,4.325,1403,3.123,1487,3.623,1488,3.623,1489,3.623,1490,3.623,1491,6.211,1492,3.623,1493,3.623,1494,3.623,1495,3.623,1496,3.623,1497,3.623,1498,3.623,1499,3.623,1500,3.623,1501,3.623,1502,5.016,1503,3.623,1504,3.623,1505,3.623,1506,3.623,1507,3.623,1508,3.623,1509,5.016,1510,3.623,1511,5.016,1512,3.623,1513,3.623,1514,3.623,1515,3.623,1516,3.623,1517,5.016,1518,3.623,1519,3.623,1520,3.623,1521,5.016,1522,3.623]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["0.0.45",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["0.2.24",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":784,"title":{"classes/RequestFillableFields-1.html":{}},"body":{}}],["1.0",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.1",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["1.19.1",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["1.7.2",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":19,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["13.1.6",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["14.3.1",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["14.3.4",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":1333,"title":{},"body":{"index.html":{}}}],["2/5",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["2019",{"_index":1417,"title":{},"body":{"license.html":{}}}],["24",{"_index":1485,"title":{},"body":{"overview.html":{}}}],["24.0.25",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["24.3.0",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["25.1.0",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["255",{"_index":161,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["3",{"_index":1486,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["3.21.2",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["3.3.10",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["3.7.4",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["3010:80",{"_index":1337,"title":{},"body":{"index.html":{}}}],["4.0.0",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["4.0.7",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["4.1.10",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["4.17.3",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["4.41.5",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.20.1",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["5432:5432",{"_index":1325,"title":{},"body":{"index.html":{}}}],["6.0.3",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["6.10.14",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1484,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["7.17.1",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["8.6.1",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1483,"title":{},"body":{"overview.html":{}}}],["9.5.0",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":1446,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":352,"title":{},"body":{"classes/ConfigService.html":{}}}],["accesstoken",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"classes/ResponseTokenDto.html":{}}}],["account",{"_index":1278,"title":{},"body":{"index.html":{}}}],["acorn",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":1470,"title":{},"body":{"license.html":{}}}],["active",{"_index":1253,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":477,"title":{},"body":{"classes/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/RequestController.html":{},"injectables/UsersService.html":{}}}],["addbearerauth",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":915,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["additionalrequest",{"_index":513,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{}}}],["addrequesttolist",{"_index":893,"title":{},"body":{"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["addrequesttolist(requestid",{"_index":963,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["addrequesttolist(shoppinglistid",{"_index":899,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["address",{"_index":1017,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["addressmodel",{"_index":1,"title":{"classes/AddressModel.html":{}},"body":{"classes/AddressModel.html":{},"modules/AppModule.html":{},"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"coverage.html":{},"overview.html":{}}}],["addressmodel:10",{"_index":771,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["addressmodel:17",{"_index":770,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["addressmodel:24",{"_index":772,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["addressmodel:31",{"_index":769,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["adds",{"_index":1341,"title":{},"body":{"index.html":{}}}],["admin",{"_index":1334,"title":{},"body":{"index.html":{}}}],["allowunknown",{"_index":486,"title":{},"body":{"classes/ConfigService.html":{}}}],["already",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["and/or",{"_index":1439,"title":{},"body":{"license.html":{}}}],["another",{"_index":1099,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["api",{"_index":1313,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["api/docs",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_auth_enabled",{"_index":474,"title":{},"body":{"classes/ConfigService.html":{}}}],["apibadrequestresponse",{"_index":190,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apibadrequestresponse({description",{"_index":200,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apibearerauth",{"_index":705,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apicreatedresponse",{"_index":191,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["apicreatedresponse({description",{"_index":199,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["apiforbiddenresponse",{"_index":921,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apiforbiddenresponse({description",{"_index":929,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apinotacceptableresponse",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["apinotacceptableresponse({description",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["apinotfoundresponse",{"_index":706,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apinotfoundresponse({description",{"_index":730,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apiokresponse",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apiokresponse({description",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apiparam",{"_index":1028,"title":{},"body":{"controllers/UserController.html":{}}}],["apiproperty",{"_index":30,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["apiproperty()@column",{"_index":883,"title":{},"body":{"classes/ShoppingList.html":{}}}],["apiproperty()@column()@createdatecolumn",{"_index":751,"title":{},"body":{"classes/RequestEntity.html":{},"classes/ShoppingList.html":{}}}],["apiproperty()@column()@updatedatecolumn",{"_index":887,"title":{},"body":{"classes/ShoppingList.html":{}}}],["apiproperty()@column({length",{"_index":755,"title":{},"body":{"classes/RequestEntity.html":{}}}],["apiproperty()@column({name",{"_index":757,"title":{},"body":{"classes/RequestEntity.html":{}}}],["apiproperty()@column({nullable",{"_index":744,"title":{},"body":{"classes/RequestEntity.html":{}}}],["apiproperty()@column({type",{"_index":765,"title":{},"body":{"classes/RequestEntity.html":{},"classes/ShoppingList.html":{}}}],["apiproperty()@primarygeneratedcolumn",{"_index":881,"title":{},"body":{"classes/ShoppingList.html":{}}}],["apiproperty({description",{"_index":154,"title":{},"body":{"classes/Article.html":{},"classes/ResponseTokenDto.html":{}}}],["apiproperty({required",{"_index":495,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["apiproperty({type",{"_index":746,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["apipropertyoptional",{"_index":31,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/UpdateUserDto.html":{}}}],["apipropertyoptional()@column({length",{"_index":18,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["apipropertyoptional({type",{"_index":760,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["apiquery",{"_index":707,"title":{},"body":{"controllers/RequestController.html":{}}}],["apis",{"_index":1363,"title":{},"body":{"index.html":{}}}],["apitags",{"_index":192,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["apitags('articles",{"_index":198,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["apitags('authentication",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('calls",{"_index":332,"title":{},"body":{"controllers/CallController.html":{}}}],["apitags('request",{"_index":715,"title":{},"body":{"controllers/RequestController.html":{}}}],["apitags('shopping",{"_index":923,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["apitags('user",{"_index":1034,"title":{},"body":{"controllers/UserController.html":{}}}],["apiunauthorizedresponse",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["apiunauthorizedresponse({description",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["app",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.controller",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":39,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appear",{"_index":1287,"title":{},"body":{"index.html":{}}}],["applied",{"_index":386,"title":{},"body":{"classes/ConfigService.html":{}}}],["apply(loggermiddleware",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":58,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule.isdev",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule.port",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["appservice",{"_index":49,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["apt",{"_index":1266,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1474,"title":{},"body":{"license.html":{}}}],["art.articlecount",{"_index":838,"title":{},"body":{"injectables/RequestService.html":{}}}],["art.articleid",{"_index":836,"title":{},"body":{"injectables/RequestService.html":{}}}],["article",{"_index":101,"title":{"classes/Article.html":{}},"body":{"modules/AppModule.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["article.articledone",{"_index":864,"title":{},"body":{"injectables/RequestService.html":{}}}],["article.dto",{"_index":194,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["article.dto.ts",{"_index":494,"title":{},"body":{"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["article.dto.ts:10",{"_index":497,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.entity",{"_index":196,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"modules/UsersModule.html":{}}}],["article.name",{"_index":221,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articlecount",{"_index":503,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestArticle.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{}}}],["articledone",{"_index":639,"title":{},"body":{"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestFillableFields-1.html":{},"classes/ShoppingListFormDto.html":{}}}],["articlefillablefields",{"_index":169,"title":{"classes/ArticleFillableFields.html":{}},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"coverage.html":{}}}],["articleid",{"_index":504,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestArticle.html":{},"controllers/RequestController.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{}}}],["articles",{"_index":165,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"classes/CreateRequestArticleDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{}}}],["articles.controller",{"_index":1060,"title":{},"body":{"modules/UsersModule.html":{}}}],["articles.service",{"_index":195,"title":{},"body":{"controllers/ArticlesController.html":{},"modules/UsersModule.html":{}}}],["articles/article.entity",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["articles/articles.controller",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["articles/articles.service",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["articlescontroller",{"_index":84,"title":{"controllers/ArticlesController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["articlesrepository",{"_index":210,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articlesservice",{"_index":76,"title":{"injectables/ArticlesService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["articlestatus",{"_index":694,"title":{},"body":{"controllers/RequestController.html":{}}}],["articlestatusdto",{"_index":819,"title":{},"body":{"injectables/RequestService.html":{}}}],["articlestatusdto.articledone",{"_index":865,"title":{},"body":{"injectables/RequestService.html":{}}}],["article})@apibadrequestresponse({description",{"_index":186,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["ask",{"_index":1296,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1427,"title":{},"body":{"license.html":{}}}],["async",{"_index":174,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":285,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":229,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authcontroller.logger.log(user",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticateduser",{"_index":1082,"title":{},"body":{"injectables/UsersService.html":{}}}],["authentication",{"_index":566,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["authguard",{"_index":562,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":563,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":69,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authors",{"_index":1463,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":254,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":155,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{}}}],["available",{"_index":1366,"title":{},"body":{"index.html":{},"modules.html":{}}}],["await",{"_index":227,"title":{},"body":{"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["backend_default",{"_index":1336,"title":{},"body":{"index.html":{}}}],["bad",{"_index":178,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["badrequestexception",{"_index":821,"title":{},"body":{"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{}}}],["badrequestexception('this",{"_index":863,"title":{},"body":{"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{}}}],["based",{"_index":1411,"title":{},"body":{"index.html":{}}}],["basic",{"_index":1406,"title":{},"body":{"index.html":{}}}],["better",{"_index":1410,"title":{},"body":{"index.html":{}}}],["body",{"_index":188,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["boilerplate",{"_index":1402,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestFillableFields-1.html":{},"classes/ShoppingListFormDto.html":{}}}],["bootstrap",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1480,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1477,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1403,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":1290,"title":{},"body":{"index.html":{},"license.html":{}}}],["call",{"_index":322,"title":{},"body":{"controllers/CallController.html":{},"injectables/JwtAuthGuard.html":{}}}],["call.controller",{"_index":339,"title":{},"body":{"modules/CallModule.html":{}}}],["call.service",{"_index":340,"title":{},"body":{"modules/CallModule.html":{}}}],["call/call.module",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["callcontroller",{"_index":320,"title":{"controllers/CallController.html":{}},"body":{"controllers/CallController.html":{},"modules/CallModule.html":{},"coverage.html":{}}}],["called",{"_index":1302,"title":{},"body":{"index.html":{}}}],["callmodule",{"_index":70,"title":{"modules/CallModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CallModule.html":{},"modules.html":{},"overview.html":{}}}],["callservice",{"_index":337,"title":{"injectables/CallService.html":{}},"body":{"modules/CallModule.html":{},"injectables/CallService.html":{},"coverage.html":{},"overview.html":{}}}],["canactivate(context",{"_index":564,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canceled",{"_index":1254,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cascade",{"_index":748,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["change",{"_index":1304,"title":{},"body":{"index.html":{}}}],["charge",{"_index":1423,"title":{},"body":{"license.html":{}}}],["checkuserexistence",{"_index":1097,"title":{},"body":{"injectables/UsersService.html":{}}}],["city",{"_index":10,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["claim",{"_index":1466,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"overview.html":{}}}],["cli",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["client",{"_index":1264,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":275,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":277,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_callmodule",{"_index":335,"title":{},"body":{"modules/CallModule.html":{},"overview.html":{}}}],["cluster_callmodule_providers",{"_index":336,"title":{},"body":{"modules/CallModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":342,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":343,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_requestmodule",{"_index":790,"title":{},"body":{"modules/RequestModule.html":{},"overview.html":{}}}],["cluster_requestmodule_exports",{"_index":792,"title":{},"body":{"modules/RequestModule.html":{},"overview.html":{}}}],["cluster_requestmodule_imports",{"_index":791,"title":{},"body":{"modules/RequestModule.html":{}}}],["cluster_requestmodule_providers",{"_index":793,"title":{},"body":{"modules/RequestModule.html":{}}}],["cluster_shoppinglistmodule",{"_index":947,"title":{},"body":{"modules/ShoppingListModule.html":{},"overview.html":{}}}],["cluster_shoppinglistmodule_exports",{"_index":949,"title":{},"body":{"modules/ShoppingListModule.html":{},"overview.html":{}}}],["cluster_shoppinglistmodule_imports",{"_index":948,"title":{},"body":{"modules/ShoppingListModule.html":{}}}],["cluster_shoppinglistmodule_providers",{"_index":950,"title":{},"body":{"modules/ShoppingListModule.html":{}}}],["cluster_usermodule",{"_index":1051,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1052,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1053,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usersmodule",{"_index":1057,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1058,"title":{},"body":{"modules/UsersModule.html":{}}}],["cockroachdb",{"_index":459,"title":{},"body":{"classes/ConfigService.html":{}}}],["code",{"_index":677,"title":{},"body":{"controllers/RequestController.html":{}}}],["column",{"_index":28,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["column({default",{"_index":649,"title":{},"body":{"classes/RequestArticle.html":{},"classes/RequestFillableFields-1.html":{}}}],["column({length",{"_index":1015,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["column({name",{"_index":1006,"title":{},"body":{"classes/User.html":{}}}],["column({nullable",{"_index":780,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["commands",{"_index":1315,"title":{},"body":{"index.html":{}}}],["common/decorators/roles.decorator",{"_index":823,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["common/decorators/user.decorator",{"_index":711,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["common/guards/jwt",{"_index":712,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["complete",{"_index":689,"title":{},"body":{"controllers/RequestController.html":{}}}],["completed",{"_index":1252,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["compodoc/compodoc",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["compose",{"_index":1343,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":855,"title":{},"body":{"injectables/RequestService.html":{},"license.html":{}}}],["conditions.requester",{"_index":856,"title":{},"body":{"injectables/RequestService.html":{}}}],["conditions.zipcode",{"_index":857,"title":{},"body":{"injectables/RequestService.html":{}}}],["config",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{}}}],["config.databasehost",{"_index":525,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.databasename",{"_index":528,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.databasepassword",{"_index":531,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.databaseport",{"_index":526,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.databasetype",{"_index":523,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.databaseusername",{"_index":530,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.get('api_port",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["config.isdev",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["config.isprod",{"_index":547,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.service",{"_index":345,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config/config.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["config/config.service",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":71,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":89,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["configservice(`.env.${process.env.node_env",{"_index":348,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configservice.get('jwt_secret",{"_index":291,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configuration",{"_index":1272,"title":{},"body":{"index.html":{}}}],["configure",{"_index":1274,"title":{},"body":{"index.html":{}}}],["configure(consumer",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":1294,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1475,"title":{},"body":{"license.html":{}}}],["console",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(`${time",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":219,"title":{},"body":{"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":145,"title":{},"body":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["constructor(articlesrepository",{"_index":207,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["constructor(authservice",{"_index":585,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(config",{"_index":146,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(filepath",{"_index":367,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(jwtservice",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["constructor(requestrepository",{"_index":802,"title":{},"body":{"injectables/RequestService.html":{}}}],["constructor(shoppinglistrepository",{"_index":960,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["constructor(userrepository",{"_index":1065,"title":{},"body":{"injectables/UsersService.html":{}}}],["consumer",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":159,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/CreateArticleDto.html":{}}}],["container",{"_index":1311,"title":{},"body":{"index.html":{}}}],["contract",{"_index":1471,"title":{},"body":{"license.html":{}}}],["contrib",{"_index":1268,"title":{},"body":{"index.html":{}}}],["controller",{"_index":38,"title":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('articles",{"_index":197,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["controller('auth",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('call",{"_index":331,"title":{},"body":{"controllers/CallController.html":{}}}],["controller('request",{"_index":717,"title":{},"body":{"controllers/RequestController.html":{}}}],["controller('shopping",{"_index":924,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["controller('user",{"_index":1033,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1413,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1441,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1301,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1416,"title":{},"body":{"license.html":{}}}],["cordova",{"_index":460,"title":{},"body":{"classes/ConfigService.html":{}}}],["coverage",{"_index":1122,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crash",{"_index":539,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["create",{"_index":205,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(createarticledto",{"_index":211,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["create(createrequestdto",{"_index":805,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{}}}],["create(payload",{"_index":1068,"title":{},"body":{"injectables/UsersService.html":{}}}],["createarticledto",{"_index":183,"title":{"classes/CreateArticleDto.html":{}},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["createarticledto.name",{"_index":222,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["created",{"_index":185,"title":{},"body":{"controllers/ArticlesController.html":{},"index.html":{}}}],["created_at",{"_index":741,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["createdatecolumn",{"_index":773,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["createhmac('sha256",{"_index":1093,"title":{},"body":{"injectables/UsersService.html":{}}}],["createparamdecorator",{"_index":553,"title":{},"body":{"interfaces/IRequestUser.html":{}}}],["createparamdecorator((data",{"_index":555,"title":{},"body":{"interfaces/IRequestUser.html":{},"miscellaneous/variables.html":{}}}],["createquerybuilder('users",{"_index":1088,"title":{},"body":{"injectables/UsersService.html":{}}}],["createrequestarticledto",{"_index":500,"title":{"classes/CreateRequestArticleDto.html":{}},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestFormDto.html":{},"coverage.html":{}}}],["createrequestdto",{"_index":692,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["createrequestdto.additionalrequest",{"_index":842,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.articles",{"_index":832,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.articles.foreach(art",{"_index":833,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.city",{"_index":848,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.deliverycomment",{"_index":846,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.number",{"_index":852,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.phonenumber",{"_index":844,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.requests",{"_index":976,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["createrequestdto.requests.foreach(reqid",{"_index":977,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["createrequestdto.street",{"_index":850,"title":{},"body":{"injectables/RequestService.html":{}}}],["createrequestdto.zipcode",{"_index":854,"title":{},"body":{"injectables/RequestService.html":{}}}],["credentials",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["cross",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["crypto",{"_index":617,"title":{},"body":{"classes/PasswordTransformer.html":{},"dependencies.html":{}}}],["crypto.createhmac('sha256",{"_index":619,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["ctrl",{"_index":1289,"title":{},"body":{"index.html":{}}}],["current",{"_index":1392,"title":{},"body":{"index.html":{}}}],["custom",{"_index":565,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["d",{"_index":1322,"title":{},"body":{"index.html":{}}}],["damages",{"_index":1467,"title":{},"body":{"license.html":{}}}],["database",{"_index":527,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["database/database.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["database_host=localhost",{"_index":1305,"title":{},"body":{"index.html":{}}}],["database_port=54321",{"_index":1306,"title":{},"body":{"index.html":{}}}],["database_type",{"_index":457,"title":{},"body":{"classes/ConfigService.html":{}}}],["database_type=postgresdatabase_host=dbdatabase_port=5432database_username=usernamedatabase_password=secretpassworddatabase_name=dbname",{"_index":1299,"title":{},"body":{"index.html":{}}}],["databasehost",{"_index":356,"title":{},"body":{"classes/ConfigService.html":{}}}],["databasemodule",{"_index":72,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databasename",{"_index":360,"title":{},"body":{"classes/ConfigService.html":{}}}],["databasepassword",{"_index":359,"title":{},"body":{"classes/ConfigService.html":{}}}],["databaseport",{"_index":357,"title":{},"body":{"classes/ConfigService.html":{}}}],["databasetype",{"_index":355,"title":{},"body":{"classes/ConfigService.html":{}}}],["databaseusername",{"_index":358,"title":{},"body":{"classes/ConfigService.html":{}}}],["date",{"_index":750,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"miscellaneous/variables.html":{}}}],["date().tojson",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date.replace('t",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db",{"_index":1344,"title":{},"body":{"index.html":{}}}],["dbname",{"_index":1285,"title":{},"body":{"index.html":{}}}],["deal",{"_index":1429,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1476,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"classes/Article.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":387,"title":{},"body":{"classes/ConfigService.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":456,"title":{},"body":{"classes/ConfigService.html":{}}}],["default(true",{"_index":476,"title":{},"body":{"classes/ConfigService.html":{}}}],["defaults",{"_index":1346,"title":{},"body":{"index.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["deliverycomment",{"_index":514,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{}}}],["dependencies",{"_index":60,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy:local",{"_index":1350,"title":{},"body":{"index.html":{}}}],["describe",{"_index":1364,"title":{},"body":{"index.html":{}}}],["description",{"_index":166,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingListFormDto.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":1379,"title":{},"body":{"index.html":{}}}],["development",{"_index":434,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["directly",{"_index":534,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["directory",{"_index":1384,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1437,"title":{},"body":{"license.html":{}}}],["doc",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["docker",{"_index":1262,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1378,"title":{},"body":{"index.html":{}}}],["document",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1123,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentbuilder",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dotenv",{"_index":425,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["dotenvparseoutput",{"_index":370,"title":{},"body":{"classes/ConfigService.html":{}}}],["dpage/pgadmin4",{"_index":1340,"title":{},"body":{"index.html":{}}}],["dto/create",{"_index":193,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["dto/request",{"_index":709,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["dto/response",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/shopping",{"_index":922,"title":{},"body":{"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["dto/update",{"_index":1031,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["e",{"_index":1326,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":1359,"title":{},"body":{"index.html":{}}}],["each",{"_index":393,"title":{},"body":{"classes/ConfigService.html":{}}}],["edit",{"_index":944,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["editrequestdto",{"_index":1078,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.city",{"_index":1105,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.firstname",{"_index":1113,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.lastname",{"_index":1115,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.number",{"_index":1109,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.role",{"_index":1117,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.street",{"_index":1107,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.telephone",{"_index":1119,"title":{},"body":{"injectables/UsersService.html":{}}}],["editrequestdto.zipcode",{"_index":1111,"title":{},"body":{"injectables/UsersService.html":{}}}],["email",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{}}}],["encrypted",{"_index":1283,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":1367,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":378,"title":{},"body":{"classes/ConfigService.html":{}}}],["entities",{"_index":533,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["entity",{"_index":163,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/RequestArticle.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["entity.requester",{"_index":727,"title":{},"body":{"controllers/RequestController.html":{}}}],["enum",{"_index":631,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["enumerations",{"_index":1244,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1187,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["env.development",{"_index":1303,"title":{},"body":{"index.html":{}}}],["envconfig",{"_index":350,"title":{},"body":{"classes/ConfigService.html":{}}}],["environment",{"_index":394,"title":{},"body":{"classes/ConfigService.html":{}}}],["envvarsschema",{"_index":449,"title":{},"body":{"classes/ConfigService.html":{}}}],["err",{"_index":577,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":487,"title":{},"body":{"classes/ConfigService.html":{}}}],["error(`config",{"_index":491,"title":{},"body":{"classes/ConfigService.html":{}}}],["error.message",{"_index":492,"title":{},"body":{"classes/ConfigService.html":{}}}],["establish",{"_index":571,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["etc",{"_index":1375,"title":{},"body":{"index.html":{}}}],["event",{"_index":1462,"title":{},"body":{"license.html":{}}}],["example",{"_index":569,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"classes/RegisterPayload.html":{},"index.html":{}}}],["example.sql",{"_index":1383,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":776,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["executes",{"_index":1351,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":561,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exist",{"_index":734,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{}}}],["existing",{"_index":176,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["exists",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["exit",{"_index":1291,"title":{},"body":{"index.html":{}}}],["exp",{"_index":580,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["expiration",{"_index":873,"title":{},"body":{"classes/ResponseTokenDto.html":{},"index.html":{}}}],["expiresin",{"_index":293,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ResponseTokenDto.html":{}}}],["export",{"_index":33,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1163,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":512,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["externals",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["extractjwt",{"_index":590,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":596,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":545,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestFillableFields-1.html":{},"injectables/RequestService.html":{},"classes/ShoppingListFormDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["false})@column({length",{"_index":1011,"title":{},"body":{"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["filepath",{"_index":369,"title":{},"body":{"classes/ConfigService.html":{}}}],["files",{"_index":1428,"title":{},"body":{"license.html":{}}}],["findall",{"_index":173,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["findone",{"_index":894,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["findone(@param('id",{"_index":1037,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":225,"title":{},"body":{"injectables/ArticlesService.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["findrequest",{"_index":798,"title":{},"body":{"injectables/RequestService.html":{}}}],["findrequest(id",{"_index":807,"title":{},"body":{"injectables/RequestService.html":{}}}],["findshoppinglist",{"_index":895,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["findshoppinglist(id",{"_index":910,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["firstname",{"_index":622,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["fitness",{"_index":1458,"title":{},"body":{"license.html":{}}}],["fixtures",{"_index":1389,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1273,"title":{},"body":{"index.html":{}}}],["following",{"_index":1314,"title":{},"body":{"index.html":{},"license.html":{}}}],["forbidden",{"_index":1039,"title":{},"body":{"controllers/UserController.html":{}}}],["forbidden'})@apiparam({name",{"_index":1026,"title":{},"body":{"controllers/UserController.html":{}}}],["forbiddenexception",{"_index":920,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["forbiddenexception('you",{"_index":942,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["form",{"_index":971,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["form.dto",{"_index":710,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["form.dto.ts",{"_index":502,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestFormDto.html":{},"classes/ShoppingListFormDto.html":{},"coverage.html":{}}}],["form.dto.ts:10",{"_index":509,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/ShoppingListFormDto.html":{}}}],["form.dto.ts:17",{"_index":506,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/ShoppingListFormDto.html":{}}}],["form.dto.ts:24",{"_index":655,"title":{},"body":{"classes/RequestArticleStatusDto.html":{}}}],["form.dto.ts:26",{"_index":787,"title":{},"body":{"classes/RequestFormDto.html":{}}}],["form.dto.ts:29",{"_index":786,"title":{},"body":{"classes/RequestFormDto.html":{}}}],["form.dto.ts:31",{"_index":788,"title":{},"body":{"classes/RequestFormDto.html":{}}}],["form.dto.ts:33",{"_index":789,"title":{},"body":{"classes/RequestFormDto.html":{}}}],["form.requests",{"_index":986,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["form.requests.foreach(reqid",{"_index":987,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["form.status",{"_index":985,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["format",{"_index":1371,"title":{},"body":{"index.html":{}}}],["forroutes",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":684,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["found'})@apibadrequestresponse({description",{"_index":1020,"title":{},"body":{"controllers/UserController.html":{}}}],["found'})@apiforbiddenresponse({description",{"_index":908,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["free",{"_index":1422,"title":{},"body":{"license.html":{}}}],["from(value",{"_index":613,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["fs",{"_index":427,"title":{},"body":{"classes/ConfigService.html":{}}}],["function",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1257,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1444,"title":{},"body":{"license.html":{}}}],["generatetoken",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetoken(user",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["generic",{"_index":373,"title":{},"body":{"classes/ConfigService.html":{}}}],["get(':id",{"_index":928,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apiokresponse({description",{"_index":906,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["get(':requestid",{"_index":729,"title":{},"body":{"controllers/RequestController.html":{}}}],["get(':requestid')@apiokresponse({description",{"_index":681,"title":{},"body":{"controllers/RequestController.html":{}}}],["get('listen",{"_index":333,"title":{},"body":{"controllers/CallController.html":{}}}],["get('listen')@apiokresponse({description",{"_index":326,"title":{},"body":{"controllers/CallController.html":{}}}],["get('webhook",{"_index":334,"title":{},"body":{"controllers/CallController.html":{}}}],["get('webhook')@apiokresponse({description",{"_index":329,"title":{},"body":{"controllers/CallController.html":{}}}],["get()@apiokresponse({description",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["get(id",{"_index":809,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["get(key",{"_index":371,"title":{},"body":{"classes/ConfigService.html":{}}}],["getall",{"_index":664,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["getall(onlymine",{"_index":669,"title":{},"body":{"controllers/RequestController.html":{}}}],["getall(user",{"_index":811,"title":{},"body":{"injectables/RequestService.html":{}}}],["getallbyuser",{"_index":959,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["getallbyuser(userid",{"_index":967,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["getbyemail",{"_index":1063,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyemail(email",{"_index":1072,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyemailandpass",{"_index":1064,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyemailandpass(email",{"_index":1074,"title":{},"body":{"injectables/UsersService.html":{}}}],["getdatabasehost",{"_index":402,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdatabasename",{"_index":410,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdatabasepassword",{"_index":408,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdatabaseport",{"_index":404,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdatabasetype",{"_index":400,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdatabaseusername",{"_index":406,"title":{},"body":{"classes/ConfigService.html":{}}}],["getgoogleauthclientid",{"_index":414,"title":{},"body":{"classes/ConfigService.html":{}}}],["getgoogleauthclientsecret",{"_index":416,"title":{},"body":{"classes/ConfigService.html":{}}}],["getgoogleauthredirecturi",{"_index":418,"title":{},"body":{"classes/ConfigService.html":{}}}],["getisdev",{"_index":390,"title":{},"body":{"classes/ConfigService.html":{}}}],["getisprod",{"_index":396,"title":{},"body":{"classes/ConfigService.html":{}}}],["getistest",{"_index":398,"title":{},"body":{"classes/ConfigService.html":{}}}],["getjwtsecret",{"_index":412,"title":{},"body":{"classes/ConfigService.html":{}}}],["getone",{"_index":1091,"title":{},"body":{"injectables/UsersService.html":{}}}],["getsinglerequest",{"_index":665,"title":{},"body":{"controllers/RequestController.html":{}}}],["getsinglerequest(requestid",{"_index":680,"title":{},"body":{"controllers/RequestController.html":{}}}],["getter",{"_index":374,"title":{},"body":{"classes/ConfigService.html":{}}}],["getters",{"_index":392,"title":{},"body":{"classes/ConfigService.html":{}}}],["getting",{"_index":1259,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettwillioaccountssid",{"_index":420,"title":{},"body":{"classes/ConfigService.html":{}}}],["gettwillioauthtoken",{"_index":422,"title":{},"body":{"classes/ConfigService.html":{}}}],["getuserlists",{"_index":896,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["getuserlists(@requser",{"_index":926,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["getuserlists(user",{"_index":912,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["git",{"_index":1387,"title":{},"body":{"index.html":{}}}],["gives",{"_index":1372,"title":{},"body":{"index.html":{}}}],["glob",{"_index":536,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["googleauthclientid",{"_index":362,"title":{},"body":{"classes/ConfigService.html":{}}}],["googleauthclientsecret",{"_index":363,"title":{},"body":{"classes/ConfigService.html":{}}}],["googleauthredirecturi",{"_index":364,"title":{},"body":{"classes/ConfigService.html":{}}}],["granted",{"_index":1421,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1481,"title":{},"body":{"modules.html":{}}}],["great",{"_index":1399,"title":{},"body":{"index.html":{}}}],["guard",{"_index":713,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["guard.ts",{"_index":560,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["handlerequest(err",{"_index":576,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hashing",{"_index":1393,"title":{},"body":{"index.html":{}}}],["headers",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helmet",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["helper",{"_index":998,"title":{},"body":{"classes/UpdateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["here",{"_index":568,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hereby",{"_index":1420,"title":{},"body":{"license.html":{}}}],["high",{"_index":779,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["holders",{"_index":1464,"title":{},"body":{"license.html":{}}}],["host",{"_index":524,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["http://localhost:3000/api/docs",{"_index":1369,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com/middleware",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/nestjs/nest/issues/711",{"_index":540,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["husky",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["iat",{"_index":581,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["id",{"_index":153,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"classes/CreateRequestArticleDto.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":660,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/ShoppingListFormDto.html":{}}}],["ignore",{"_index":574,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["ignored",{"_index":1386,"title":{},"body":{"index.html":{}}}],["ignoreexpiration",{"_index":597,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1321,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":1396,"title":{},"body":{"index.html":{}}}],["implements",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"classes/PasswordTransformer.html":{}}}],["implicit",{"_index":575,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["implied",{"_index":1454,"title":{},"body":{"license.html":{}}}],["import",{"_index":27,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["importing",{"_index":532,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["imports",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":1449,"title":{},"body":{"license.html":{}}}],["including",{"_index":385,"title":{},"body":{"classes/ConfigService.html":{},"controllers/RequestController.html":{},"license.html":{}}}],["incremented",{"_index":156,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":768,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["inject",{"_index":295,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["injectable",{"_index":142,"title":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/CallService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/CallService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":143,"title":{},"body":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/CallService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":216,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(article",{"_index":217,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["injectrepository(requestentity",{"_index":825,"title":{},"body":{"injectables/RequestService.html":{}}}],["injectrepository(shoppinglist",{"_index":973,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["injectrepository(user",{"_index":1083,"title":{},"body":{"injectables/UsersService.html":{}}}],["insertnewshoppinglist",{"_index":897,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["insertnewshoppinglist(createrequestdto",{"_index":914,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["insertone",{"_index":175,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["insertone(@body",{"_index":201,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["insertone(createarticledto",{"_index":182,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["insertrequestwitharticles",{"_index":666,"title":{},"body":{"controllers/RequestController.html":{}}}],["insertrequestwitharticles(createrequestdto",{"_index":687,"title":{},"body":{"controllers/RequestController.html":{}}}],["install",{"_index":1267,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1270,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1405,"title":{},"body":{"index.html":{}}}],["integer",{"_index":167,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"controllers/UserController.html":{}}}],["integer'})@column",{"_index":763,"title":{},"body":{"classes/RequestEntity.html":{}}}],["integer'})@primarygeneratedcolumn",{"_index":157,"title":{},"body":{"classes/Article.html":{},"classes/RequestEntity.html":{}}}],["integrated",{"_index":1365,"title":{},"body":{"index.html":{}}}],["interface",{"_index":549,"title":{"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{}},"body":{"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["interfaces",{"_index":551,"title":{},"body":{"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"overview.html":{}}}],["irequestuser",{"_index":550,"title":{"interfaces/IRequestUser.html":{}},"body":{"interfaces/IRequestUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isdev",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["isemail",{"_index":606,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["isexpired",{"_index":600,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["isnotempty",{"_index":607,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{}}}],["isprod",{"_index":353,"title":{},"body":{"classes/ConfigService.html":{}}}],["isstring",{"_index":498,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["istest",{"_index":354,"title":{},"body":{"classes/ConfigService.html":{}}}],["it's",{"_index":1385,"title":{},"body":{"index.html":{}}}],["items",{"_index":505,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestFormDto.html":{}}}],["javascript",{"_index":383,"title":{},"body":{"classes/ConfigService.html":{}}}],["jest",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["joi",{"_index":428,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["joi.boolean",{"_index":475,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.number",{"_index":473,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.object",{"_index":451,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.objectschema",{"_index":450,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.string",{"_index":453,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.string().required",{"_index":482,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.validate",{"_index":490,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.validationoptions",{"_index":485,"title":{},"body":{"classes/ConfigService.html":{}}}],["json",{"_index":1370,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":287,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/ResponseTokenDto.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy",{"_index":284,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_secret=jwt_awesome_key",{"_index":1300,"title":{},"body":{"index.html":{}}}],["jwtauthguard",{"_index":558,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":595,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":288,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":578,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtsecret",{"_index":361,"title":{},"body":{"classes/ConfigService.html":{}}}],["jwtservice",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":278,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":375,"title":{},"body":{"classes/ConfigService.html":{}}}],["kind",{"_index":1453,"title":{},"body":{"license.html":{}}}],["l",{"_index":1286,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":623,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["legend",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":34,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["liability",{"_index":1468,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1465,"title":{},"body":{"license.html":{}}}],["license",{"_index":1414,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":1432,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1455,"title":{},"body":{"license.html":{}}}],["line",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["list",{"_index":508,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["list'})@apinotfoundresponse({description",{"_index":903,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/ShoppingListModule.html":{}}}],["list.controller.ts",{"_index":892,"title":{},"body":{"controllers/ShoppingListController.html":{},"coverage.html":{}}}],["list.controller.ts:104",{"_index":911,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:46",{"_index":913,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:54",{"_index":909,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:64",{"_index":916,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:76",{"_index":919,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.controller.ts:90",{"_index":904,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["list.entity",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{}}}],["list.entity.ts",{"_index":877,"title":{},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"coverage.html":{}}}],["list.entity.ts:12",{"_index":882,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:16",{"_index":884,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:21",{"_index":880,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:26",{"_index":888,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:34",{"_index":886,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:42",{"_index":885,"title":{},"body":{"classes/ShoppingList.html":{}}}],["list.entity.ts:46",{"_index":946,"title":{},"body":{"classes/ShoppingListFillableFields.html":{}}}],["list.module",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["list.module.ts",{"_index":951,"title":{},"body":{"modules/ShoppingListModule.html":{}}}],["list.service",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{}}}],["list.service.ts",{"_index":958,"title":{},"body":{"injectables/ShoppingListService.html":{},"coverage.html":{}}}],["list.service.ts:14",{"_index":961,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:21",{"_index":966,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:29",{"_index":965,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:45",{"_index":968,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:52",{"_index":970,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["list.service.ts:64",{"_index":964,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["listen",{"_index":323,"title":{},"body":{"controllers/CallController.html":{}}}],["lists",{"_index":945,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["loader",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":1312,"title":{},"body":{"index.html":{}}}],["logger",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["logger('auth",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger('request",{"_index":718,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["logger('shoppinglist",{"_index":925,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["logger('user",{"_index":1035,"title":{},"body":{"controllers/UserController.html":{}}}],["loggermiddleware",{"_index":1138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":546,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["logic",{"_index":567,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["login",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["login(@body",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(credentials",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["login.payload",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["loginpayload",{"_index":235,"title":{"classes/LoginPayload.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"coverage.html":{}}}],["look",{"_index":1377,"title":{},"body":{"index.html":{}}}],["low",{"_index":758,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["main/models/address.model",{"_index":510,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["manytoone",{"_index":648,"title":{},"body":{"classes/RequestArticle.html":{},"classes/RequestFillableFields-1.html":{},"classes/ShoppingListRequest.html":{}}}],["manytoone(undefined",{"_index":646,"title":{},"body":{"classes/RequestArticle.html":{},"classes/ShoppingListRequest.html":{}}}],["mariadb",{"_index":461,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["markarticleasdone",{"_index":667,"title":{},"body":{"controllers/RequestController.html":{}}}],["markarticleasdone(requestid",{"_index":693,"title":{},"body":{"controllers/RequestController.html":{}}}],["matching",{"_index":36,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":778,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["merchantability",{"_index":1457,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1435,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["migrations",{"_index":542,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["minlength",{"_index":608,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["minlength(5",{"_index":609,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["miscellaneous",{"_index":1243,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1415,"title":{},"body":{"license.html":{}}}],["mode",{"_index":1355,"title":{},"body":{"index.html":{}}}],["models/address.model",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["modify",{"_index":1434,"title":{},"body":{"license.html":{}}}],["module",{"_index":57,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":59,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":462,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{},"index.html":{}}}],["mongoose",{"_index":1404,"title":{},"body":{"index.html":{}}}],["more",{"_index":478,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["mount",{"_index":1347,"title":{},"body":{"index.html":{}}}],["mssql",{"_index":463,"title":{},"body":{"classes/ConfigService.html":{}}}],["mysql",{"_index":464,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["name",{"_index":149,"title":{},"body":{"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"classes/RequestArticle.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["name=pgdata",{"_index":1318,"title":{},"body":{"index.html":{}}}],["native",{"_index":469,"title":{},"body":{"classes/ConfigService.html":{}}}],["nativescript",{"_index":465,"title":{},"body":{"classes/ConfigService.html":{}}}],["nearbuy",{"_index":1323,"title":{},"body":{"index.html":{}}}],["needed",{"_index":379,"title":{},"body":{"classes/ConfigService.html":{}}}],["nestjs",{"_index":1401,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":281,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":283,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/ArticlesService.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"modules/ShoppingListModule.html":{},"injectables/ShoppingListService.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["network",{"_index":1335,"title":{},"body":{"index.html":{}}}],["new",{"_index":220,"title":{},"body":{"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["newarticle",{"_index":834,"title":{},"body":{"injectables/RequestService.html":{}}}],["newarticle.articlecount",{"_index":837,"title":{},"body":{"injectables/RequestService.html":{}}}],["newarticle.articledone",{"_index":839,"title":{},"body":{"injectables/RequestService.html":{}}}],["newarticle.articleid",{"_index":835,"title":{},"body":{"injectables/RequestService.html":{}}}],["newrequest",{"_index":978,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["newrequest.id",{"_index":988,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["newrequest.requestid",{"_index":979,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["newuser",{"_index":1101,"title":{},"body":{"injectables/UsersService.html":{}}}],["next",{"_index":1297,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["nextfunction",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["node_env",{"_index":452,"title":{},"body":{"classes/ConfigService.html":{}}}],["nodejs",{"_index":1261,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["none",{"_index":1256,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noninfringement",{"_index":1461,"title":{},"body":{"license.html":{}}}],["notacceptableexception",{"_index":1079,"title":{},"body":{"injectables/UsersService.html":{}}}],["note",{"_index":1308,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":700,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('shopping",{"_index":975,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["notfoundexception('this",{"_index":733,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["notfoundexception('user",{"_index":1085,"title":{},"body":{"injectables/UsersService.html":{}}}],["notice",{"_index":1447,"title":{},"body":{"license.html":{}}}],["nullable",{"_index":20,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["number",{"_index":11,"title":{},"body":{"classes/AddressModel.html":{},"modules/AppModule.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/CreateRequestArticleDto.html":{},"interfaces/JwtPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{}}}],["number(articleid",{"_index":862,"title":{},"body":{"injectables/RequestService.html":{}}}],["number(configservice.get('jwt_expiration_time",{"_index":294,"title":{},"body":{"modules/AuthModule.html":{}}}],["number(this.configservice.get('jwt_expiration_time",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["number(this.envconfig.database_port",{"_index":439,"title":{},"body":{"classes/ConfigService.html":{}}}],["object",{"_index":384,"title":{},"body":{"classes/ConfigService.html":{}}}],["obtaining",{"_index":1425,"title":{},"body":{"license.html":{}}}],["one",{"_index":1409,"title":{},"body":{"index.html":{}}}],["onetomany",{"_index":774,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["ongoing",{"_index":1251,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onlymine",{"_index":671,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["optional",{"_index":9,"title":{},"body":{"classes/AddressModel.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oracle",{"_index":466,"title":{},"body":{"classes/ConfigService.html":{}}}],["ormconfig.json",{"_index":1382,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1473,"title":{},"body":{"license.html":{}}}],["out",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["over",{"_index":1277,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1482,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":878,"title":{},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"injectables/ShoppingListService.html":{},"index.html":{}}}],["ownerthen",{"_index":1288,"title":{},"body":{"index.html":{}}}],["p",{"_index":1324,"title":{},"body":{"index.html":{}}}],["package",{"_index":1156,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":701,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["param('articleid",{"_index":738,"title":{},"body":{"controllers/RequestController.html":{}}}],["param('id",{"_index":930,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["param('requestid",{"_index":731,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["param('shoppinglistid",{"_index":936,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["parameters",{"_index":148,"title":{},"body":{"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parse",{"_index":424,"title":{},"body":{"classes/ConfigService.html":{}}}],["parse(readfilesync(filepath",{"_index":429,"title":{},"body":{"classes/ConfigService.html":{}}}],["parse(request.url).path",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parsedconfig",{"_index":389,"title":{},"body":{"classes/ConfigService.html":{}}}],["particular",{"_index":1459,"title":{},"body":{"license.html":{}}}],["passhash",{"_index":1092,"title":{},"body":{"injectables/UsersService.html":{}}}],["passport",{"_index":592,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["passportmodule",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register({defaultstrategy",{"_index":286,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":589,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":593,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passreqtocallback",{"_index":599,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["password).digest('hex",{"_index":1094,"title":{},"body":{"injectables/UsersService.html":{}}}],["password.transformer",{"_index":1013,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["passwordtransformer",{"_index":610,"title":{"classes/PasswordTransformer.html":{}},"body":{"classes/PasswordTransformer.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"coverage.html":{}}}],["path",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["paths",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["pattern",{"_index":537,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["payload",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["peer",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["permission",{"_index":1419,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1442,"title":{},"body":{"license.html":{}}}],["person",{"_index":1424,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1443,"title":{},"body":{"license.html":{}}}],["pg",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["pgadmin",{"_index":1342,"title":{},"body":{"index.html":{}}}],["pgadmin_default_email=user@domain.com",{"_index":1338,"title":{},"body":{"index.html":{}}}],["pgadmin_default_password=supersecret",{"_index":1339,"title":{},"body":{"index.html":{}}}],["pgdata:/var/lib/postgresql/data",{"_index":1331,"title":{},"body":{"index.html":{}}}],["phonenumber",{"_index":515,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{}}}],["please",{"_index":1376,"title":{},"body":{"index.html":{}}}],["populaterequest",{"_index":799,"title":{},"body":{"injectables/RequestService.html":{}}}],["populaterequest(request",{"_index":813,"title":{},"body":{"injectables/RequestService.html":{}}}],["port",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{}}}],["portions",{"_index":1451,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":1373,"title":{},"body":{"index.html":{}}}],["post",{"_index":189,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["post('login",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apiokresponse({description",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apicreatedresponse({description",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apicreatedresponse({description",{"_index":184,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/ShoppingListController.html":{}}}],["postgis",{"_index":1320,"title":{},"body":{"index.html":{}}}],["postgis/postgis:12",{"_index":1332,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":467,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["postgres_db=dbname",{"_index":1328,"title":{},"body":{"index.html":{}}}],["postgres_password=secretpassword",{"_index":1327,"title":{},"body":{"index.html":{}}}],["postgres_user=username",{"_index":1329,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":1263,"title":{},"body":{"index.html":{}}}],["preconfigured",{"_index":1390,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":172,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["prettier",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["primarygeneratedcolumn",{"_index":164,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["priority",{"_index":742,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["private",{"_index":218,"title":{},"body":{"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["process.env.port",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":435,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["project",{"_index":1348,"title":{},"body":{"index.html":{}}}],["promise",{"_index":181,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["provide",{"_index":346,"title":{},"body":{"modules/ConfigModule.html":{}}}],["provided",{"_index":1100,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{},"license.html":{}}}],["providers",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["provision",{"_index":455,"title":{},"body":{"classes/ConfigService.html":{}}}],["psql",{"_index":1281,"title":{},"body":{"index.html":{}}}],["public",{"_index":432,"title":{},"body":{"classes/ConfigService.html":{}}}],["publish",{"_index":1436,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1460,"title":{},"body":{"license.html":{}}}],["put",{"_index":702,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["put(':id",{"_index":933,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["put(':id')@apiokresponse({description",{"_index":918,"title":{},"body":{"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["put(':requestid",{"_index":735,"title":{},"body":{"controllers/RequestController.html":{}}}],["put(':requestid')@apiokresponse({description",{"_index":698,"title":{},"body":{"controllers/RequestController.html":{}}}],["put(':requestid/:articleid",{"_index":737,"title":{},"body":{"controllers/RequestController.html":{}}}],["put(':requestid/:articleid')@apiokresponse({description",{"_index":695,"title":{},"body":{"controllers/RequestController.html":{}}}],["put(':shoppinglistid/:requestid",{"_index":935,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["put(':shoppinglistid/:requestid')@apiokresponse({description",{"_index":900,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["query",{"_index":703,"title":{},"body":{"controllers/RequestController.html":{},"miscellaneous/variables.html":{}}}],["query('onlymine",{"_index":719,"title":{},"body":{"controllers/RequestController.html":{}}}],["query('zipcode",{"_index":720,"title":{},"body":{"controllers/RequestController.html":{}}}],["r",{"_index":723,"title":{},"body":{"controllers/RequestController.html":{}}}],["r.requester",{"_index":724,"title":{},"body":{"controllers/RequestController.html":{}}}],["react",{"_index":468,"title":{},"body":{"classes/ConfigService.html":{}}}],["readfilesync",{"_index":426,"title":{},"body":{"classes/ConfigService.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["received",{"_index":507,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestFormDto.html":{}}}],["reflect",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(payload",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["register.payload",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerpayload",{"_index":243,"title":{"classes/RegisterPayload.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterPayload.html":{},"coverage.html":{}}}],["registration",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["relations",{"_index":827,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{}}}],["remove",{"_index":206,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["remove(id",{"_index":214,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["replied",{"_index":678,"title":{},"body":{"controllers/RequestController.html":{}}}],["replied.'})@apiquery({name",{"_index":673,"title":{},"body":{"controllers/RequestController.html":{}}}],["repository",{"_index":208,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{}}}],["req",{"_index":556,"title":{},"body":{"interfaces/IRequestUser.html":{},"miscellaneous/variables.html":{}}}],["req.user",{"_index":557,"title":{},"body":{"interfaces/IRequestUser.html":{},"miscellaneous/variables.html":{}}}],["reqid",{"_index":980,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["request",{"_index":179,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"interfaces/IRequestUser.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request'})@apiforbiddenresponse({description",{"_index":902,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["request'})@apinotacceptableresponse({description",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["request'})@apinotfoundresponse({description",{"_index":683,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["request'})@apiparam({name",{"_index":1021,"title":{},"body":{"controllers/UserController.html":{}}}],["request'})@apiunauthorizedresponse({description",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.additionalrequest",{"_index":841,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.articles",{"_index":650,"title":{},"body":{"classes/RequestArticle.html":{},"classes/RequestFillableFields-1.html":{},"injectables/RequestService.html":{}}}],["request.articles.find((v",{"_index":860,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.articles.push(newarticle",{"_index":840,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.city",{"_index":847,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.controller",{"_index":795,"title":{},"body":{"modules/RequestModule.html":{}}}],["request.deliverycomment",{"_index":845,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.entity",{"_index":521,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/RequestArticle.html":{},"controllers/RequestController.html":{},"classes/RequestFillableFields-1.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"injectables/ShoppingListService.html":{}}}],["request.entity.ts",{"_index":953,"title":{},"body":{"classes/ShoppingListRequest.html":{},"coverage.html":{}}}],["request.entity.ts:10",{"_index":954,"title":{},"body":{"classes/ShoppingListRequest.html":{}}}],["request.entity.ts:14",{"_index":955,"title":{},"body":{"classes/ShoppingListRequest.html":{}}}],["request.entity.ts:20",{"_index":956,"title":{},"body":{"classes/ShoppingListRequest.html":{}}}],["request.number",{"_index":851,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.phonenumber",{"_index":843,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.requesterid",{"_index":829,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.service",{"_index":708,"title":{},"body":{"controllers/RequestController.html":{},"modules/RequestModule.html":{}}}],["request.street",{"_index":849,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.zipcode",{"_index":853,"title":{},"body":{"injectables/RequestService.html":{}}}],["request/request.controller",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["request/request.entity",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["request/request.module",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/ShoppingListModule.html":{}}}],["request/request.service",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"controllers/ShoppingListController.html":{}}}],["request/requestarticle.entity",{"_index":519,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["requestarticle",{"_index":518,"title":{"classes/RequestArticle.html":{}},"body":{"modules/DatabaseModule.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["requestarticle.entity",{"_index":775,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"injectables/RequestService.html":{}}}],["requestarticle.request",{"_index":782,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["requestarticlestatusdto",{"_index":653,"title":{"classes/RequestArticleStatusDto.html":{}},"body":{"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/ShoppingListFormDto.html":{},"coverage.html":{}}}],["requestcontroller",{"_index":86,"title":{"controllers/RequestController.html":{}},"body":{"modules/AppModule.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"coverage.html":{}}}],["requestentity",{"_index":99,"title":{"classes/RequestEntity.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"classes/RequestArticle.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["requestentity})@apibadrequestresponse({description",{"_index":682,"title":{},"body":{"controllers/RequestController.html":{}}}],["requestentity})@post",{"_index":690,"title":{},"body":{"controllers/RequestController.html":{}}}],["requester",{"_index":652,"title":{},"body":{"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{}}}],["requesterid",{"_index":743,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["requestfillablefields",{"_index":651,"title":{"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{}},"body":{"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"coverage.html":{}}}],["requestformdto",{"_index":511,"title":{"classes/RequestFormDto.html":{}},"body":{"classes/CreateRequestArticleDto.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["requesthandler",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestid",{"_index":686,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{}}}],["requesting",{"_index":672,"title":{},"body":{"controllers/RequestController.html":{}}}],["requestmethod.all",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmodule",{"_index":73,"title":{"modules/RequestModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules.html":{},"overview.html":{}}}],["requestrepository",{"_index":804,"title":{},"body":{"injectables/RequestService.html":{}}}],["requests",{"_index":661,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{}}}],["requests.map(async",{"_index":722,"title":{},"body":{"controllers/RequestController.html":{}}}],["requestservice",{"_index":77,"title":{"injectables/RequestService.html":{}},"body":{"modules/AppModule.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"coverage.html":{},"overview.html":{}}}],["requeststatus",{"_index":766,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"miscellaneous/enumerations.html":{}}}],["requeststatus.new",{"_index":781,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{}}}],["required",{"_index":472,"title":{},"body":{"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestFormDto.html":{},"classes/ShoppingListFormDto.html":{}}}],["requser",{"_index":554,"title":{},"body":{"interfaces/IRequestUser.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsetokendto",{"_index":258,"title":{"classes/ResponseTokenDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResponseTokenDto.html":{},"coverage.html":{}}}],["responsetokendto})@apibadrequestresponse({description",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["restful",{"_index":1362,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":1431,"title":{},"body":{"license.html":{}}}],["result",{"_index":35,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":37,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"classes/PasswordTransformer.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["rights",{"_index":1433,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":624,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["role.ts",{"_index":1249,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roles",{"_index":822,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles('admin",{"_index":1080,"title":{},"body":{"injectables/UsersService.html":{}}}],["roles('helper",{"_index":972,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["roles('user",{"_index":824,"title":{},"body":{"injectables/RequestService.html":{}}}],["root",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["route",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rules",{"_index":480,"title":{},"body":{"classes/ConfigService.html":{}}}],["run",{"_index":1319,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":675,"title":{},"body":{"controllers/RequestController.html":{}}}],["seconds",{"_index":871,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["secret",{"_index":290,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":598,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secretpassword",{"_index":1284,"title":{},"body":{"index.html":{}}}],["secure",{"_index":1395,"title":{},"body":{"index.html":{}}}],["see",{"_index":943,"title":{},"body":{"controllers/ShoppingListController.html":{},"index.html":{}}}],["seeding",{"_index":1388,"title":{},"body":{"index.html":{}}}],["seeker",{"_index":999,"title":{},"body":{"classes/UpdateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["sell",{"_index":1440,"title":{},"body":{"license.html":{}}}],["server",{"_index":1279,"title":{},"body":{"index.html":{}}}],["session",{"_index":572,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["set",{"_index":381,"title":{},"body":{"classes/ConfigService.html":{},"controllers/RequestController.html":{},"index.html":{}}}],["setdescription(swagger_api_description",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('roles",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setparameter('email",{"_index":1090,"title":{},"body":{"injectables/UsersService.html":{}}}],["setparameter('password",{"_index":1096,"title":{},"body":{"injectables/UsersService.html":{}}}],["settitle(swagger_api_name",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setupswagger",{"_index":1153,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setversion(swagger_api_current_version",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":1448,"title":{},"body":{"license.html":{}}}],["shell",{"_index":1292,"title":{},"body":{"index.html":{}}}],["shopping",{"_index":657,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{}}}],["shoppinglist",{"_index":114,"title":{"classes/ShoppingList.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{}}}],["shoppinglist.owner",{"_index":941,"title":{},"body":{"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["shoppinglist.requests",{"_index":957,"title":{},"body":{"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{}}}],["shoppinglist.requests.push(newrequest",{"_index":981,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglist.status",{"_index":982,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglist/dto/shopping",{"_index":714,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["shoppinglist/shopping",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["shoppinglistcontroller",{"_index":87,"title":{"controllers/ShoppingListController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{},"coverage.html":{}}}],["shoppinglistcontroller.logger.log(request",{"_index":938,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["shoppinglistfillablefields",{"_index":891,"title":{"classes/ShoppingListFillableFields.html":{}},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"coverage.html":{}}}],["shoppinglistformdto",{"_index":659,"title":{"classes/ShoppingListFormDto.html":{}},"body":{"classes/RequestArticleStatusDto.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{}}}],["shoppinglistid",{"_index":905,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["shoppinglistmodule",{"_index":74,"title":{"modules/ShoppingListModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ShoppingListModule.html":{},"modules.html":{},"overview.html":{}}}],["shoppinglistrepository",{"_index":962,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["shoppinglistrequest",{"_index":520,"title":{"classes/ShoppingListRequest.html":{}},"body":{"modules/DatabaseModule.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{}}}],["shoppinglistrequest.shoppinglist",{"_index":890,"title":{},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["shoppinglistservice",{"_index":78,"title":{"injectables/ShoppingListService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ShoppingListController.html":{},"modules/ShoppingListModule.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{},"overview.html":{}}}],["shoppingliststatus",{"_index":656,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{},"miscellaneous/enumerations.html":{}}}],["shoppingliststatus.active",{"_index":662,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{}}}],["shoppinglist})@apibadrequestresponse({description",{"_index":901,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["shoppinglist})@apinotfoundresponse({description",{"_index":907,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["signoptions",{"_index":292,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice(0",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":1426,"title":{},"body":{"license.html":{}}}],["something",{"_index":1394,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallController.html":{},"modules/CallModule.html":{},"injectables/CallService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["sources",{"_index":1398,"title":{},"body":{"index.html":{}}}],["spin",{"_index":1309,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":470,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["sqljs",{"_index":471,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/.../constants.ts",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.middleware.ts",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1258,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../request",{"_index":1245,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../roles.decorator.ts",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shopping",{"_index":1247,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":1248,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.decorator.ts",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1126,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/modules/**/*.entity{.ts,.js",{"_index":541,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/modules/**/*.migration{.ts,.js",{"_index":543,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/modules/articles/article.entity.ts",{"_index":152,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"coverage.html":{}}}],["src/modules/articles/article.entity.ts:13",{"_index":158,"title":{},"body":{"classes/Article.html":{}}}],["src/modules/articles/article.entity.ts:19",{"_index":162,"title":{},"body":{"classes/Article.html":{}}}],["src/modules/articles/article.entity.ts:23",{"_index":170,"title":{},"body":{"classes/ArticleFillableFields.html":{}}}],["src/modules/articles/articles.controller.ts",{"_index":171,"title":{},"body":{"controllers/ArticlesController.html":{},"coverage.html":{}}}],["src/modules/articles/articles.controller.ts:16",{"_index":187,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.controller.ts:26",{"_index":180,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.modules.ts",{"_index":1059,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/articles/articles.service.ts",{"_index":204,"title":{},"body":{"injectables/ArticlesService.html":{},"coverage.html":{}}}],["src/modules/articles/articles.service.ts:14",{"_index":212,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/articles.service.ts:21",{"_index":213,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/articles.service.ts:29",{"_index":215,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/articles.service.ts:8",{"_index":209,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/dto/create",{"_index":493,"title":{},"body":{"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["src/modules/articles/interfaces/article.interface.ts",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:35",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:47",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:10",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:18",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:29",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/response",{"_index":867,"title":{},"body":{"classes/ResponseTokenDto.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.payload.ts",{"_index":579,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":583,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:10",{"_index":586,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:37",{"_index":588,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/login.payload.ts",{"_index":601,"title":{},"body":{"classes/LoginPayload.html":{},"coverage.html":{}}}],["src/modules/auth/login.payload.ts:12",{"_index":605,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/auth/login.payload.ts:7",{"_index":603,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/auth/register.payload.ts",{"_index":621,"title":{},"body":{"classes/RegisterPayload.html":{},"coverage.html":{}}}],["src/modules/auth/register.payload.ts:12",{"_index":628,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/register.payload.ts:16",{"_index":629,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/register.payload.ts:19",{"_index":634,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/register.payload.ts:24",{"_index":630,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/register.payload.ts:8",{"_index":626,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/call/call.controller.ts",{"_index":321,"title":{},"body":{"controllers/CallController.html":{},"coverage.html":{}}}],["src/modules/call/call.controller.ts:10",{"_index":325,"title":{},"body":{"controllers/CallController.html":{}}}],["src/modules/call/call.controller.ts:17",{"_index":328,"title":{},"body":{"controllers/CallController.html":{}}}],["src/modules/call/call.controller.ts:23",{"_index":330,"title":{},"body":{"controllers/CallController.html":{}}}],["src/modules/call/call.module.ts",{"_index":338,"title":{},"body":{"modules/CallModule.html":{}}}],["src/modules/call/call.service.ts",{"_index":341,"title":{},"body":{"injectables/CallService.html":{},"coverage.html":{}}}],["src/modules/common/decorators/roles.decorator.ts",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/common/decorators/user.decorator.ts",{"_index":552,"title":{},"body":{"interfaces/IRequestUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/common/guards/jwt",{"_index":559,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/modules/common/middlewares/logger.middleware.ts",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/config/config.module.ts",{"_index":344,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/modules/config/config.service.ts",{"_index":349,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["src/modules/config/config.service.ts:16",{"_index":391,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:20",{"_index":397,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:24",{"_index":399,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:28",{"_index":401,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:32",{"_index":403,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:36",{"_index":405,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:40",{"_index":407,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:44",{"_index":409,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:48",{"_index":411,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:52",{"_index":413,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:56",{"_index":415,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:6",{"_index":368,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:60",{"_index":417,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:64",{"_index":419,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:68",{"_index":421,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:72",{"_index":423,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:79",{"_index":372,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:87",{"_index":377,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/database/database.module.ts",{"_index":516,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/modules/main/app.controller.ts",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/modules/main/app.controller.ts:13",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/main/app.module.ts",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/main/app.service.ts",{"_index":144,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/modules/main/app.service.ts:10",{"_index":150,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/main/app.service.ts:6",{"_index":147,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/main/models/address.model.ts",{"_index":6,"title":{},"body":{"classes/AddressModel.html":{},"coverage.html":{}}}],["src/modules/main/models/address.model.ts:10",{"_index":25,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/modules/main/models/address.model.ts:17",{"_index":24,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/modules/main/models/address.model.ts:24",{"_index":26,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/modules/main/models/address.model.ts:31",{"_index":23,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/modules/request/dto/request",{"_index":501,"title":{},"body":{"classes/CreateRequestArticleDto.html":{},"classes/RequestFormDto.html":{},"coverage.html":{}}}],["src/modules/request/request",{"_index":1250,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/request/request.controller.ts",{"_index":663,"title":{},"body":{"controllers/RequestController.html":{},"coverage.html":{}}}],["src/modules/request/request.controller.ts:106",{"_index":696,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:46",{"_index":679,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:64",{"_index":691,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:77",{"_index":685,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:92",{"_index":699,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.entity.ts",{"_index":740,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"coverage.html":{}}}],["src/modules/request/request.entity.ts:15",{"_index":754,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:20",{"_index":752,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:24",{"_index":764,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:33",{"_index":759,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:37",{"_index":745,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:41",{"_index":753,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:48",{"_index":756,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:56",{"_index":767,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:64",{"_index":749,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:68",{"_index":762,"title":{},"body":{"classes/RequestEntity.html":{}}}],["src/modules/request/request.entity.ts:72",{"_index":783,"title":{},"body":{"classes/RequestFillableFields.html":{}}}],["src/modules/request/request.module.ts",{"_index":794,"title":{},"body":{"modules/RequestModule.html":{}}}],["src/modules/request/request.service.ts",{"_index":797,"title":{},"body":{"injectables/RequestService.html":{},"coverage.html":{}}}],["src/modules/request/request.service.ts:14",{"_index":803,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:22",{"_index":810,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:26",{"_index":806,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:34",{"_index":814,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:54",{"_index":812,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:67",{"_index":820,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:77",{"_index":817,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:84",{"_index":808,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/requestarticle.entity.ts",{"_index":638,"title":{},"body":{"classes/RequestArticle.html":{},"classes/RequestFillableFields-1.html":{},"coverage.html":{}}}],["src/modules/request/requestarticle.entity.ts:10",{"_index":645,"title":{},"body":{"classes/RequestArticle.html":{}}}],["src/modules/request/requestarticle.entity.ts:14",{"_index":644,"title":{},"body":{"classes/RequestArticle.html":{}}}],["src/modules/request/requestarticle.entity.ts:18",{"_index":641,"title":{},"body":{"classes/RequestArticle.html":{}}}],["src/modules/request/requestarticle.entity.ts:22",{"_index":643,"title":{},"body":{"classes/RequestArticle.html":{}}}],["src/modules/request/requestarticle.entity.ts:28",{"_index":647,"title":{},"body":{"classes/RequestArticle.html":{}}}],["src/modules/request/requestarticle.entity.ts:32",{"_index":785,"title":{},"body":{"classes/RequestFillableFields-1.html":{}}}],["src/modules/shoppinglist/dto/shopping",{"_index":654,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/ShoppingListFormDto.html":{},"coverage.html":{}}}],["src/modules/shoppinglist/shopping",{"_index":876,"title":{},"body":{"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"modules/ShoppingListModule.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/user/dto/update",{"_index":990,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/user/password.transformer.ts",{"_index":611,"title":{},"body":{"classes/PasswordTransformer.html":{},"coverage.html":{}}}],["src/modules/user/password.transformer.ts:10",{"_index":616,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["src/modules/user/password.transformer.ts:6",{"_index":614,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["src/modules/user/user",{"_index":1255,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/user/user.controller.ts",{"_index":1018,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:29",{"_index":1023,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:42",{"_index":1022,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:56",{"_index":1027,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.entity.ts",{"_index":1000,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"coverage.html":{}}}],["src/modules/user/user.entity.ts:14",{"_index":1004,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:18",{"_index":1003,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:22",{"_index":1005,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:26",{"_index":1002,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:34",{"_index":1010,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:41",{"_index":1012,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:49",{"_index":1008,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:53",{"_index":1044,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:54",{"_index":1045,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:55",{"_index":1046,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:56",{"_index":1048,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:57",{"_index":1049,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:58",{"_index":1043,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:59",{"_index":1047,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/user/user.entity.ts:63",{"_index":1050,"title":{},"body":{"classes/UserID.html":{}}}],["src/modules/user/user.module.ts",{"_index":1054,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":1062,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:11",{"_index":1066,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:18",{"_index":1070,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:26",{"_index":1073,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:35",{"_index":1075,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:46",{"_index":1069,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:59",{"_index":1077,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:72",{"_index":1071,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/swagger/constants.ts",{"_index":1147,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/index.ts",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["staged",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["start",{"_index":1353,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1356,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1357,"title":{},"body":{"index.html":{}}}],["started",{"_index":1260,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["status",{"_index":658,"title":{},"body":{"classes/RequestArticleStatusDto.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"injectables/ShoppingListService.html":{}}}],["status.ts",{"_index":1246,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["strategy",{"_index":591,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["street",{"_index":12,"title":{},"body":{"classes/AddressModel.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["string",{"_index":16,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"injectables/ArticlesService.html":{},"controllers/CallController.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":582,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["subject",{"_index":1445,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1438,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1450,"title":{},"body":{"license.html":{}}}],["successful",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["successful'})@apibadrequestresponse({description",{"_index":327,"title":{},"body":{"controllers/CallController.html":{}}}],["sudo",{"_index":1265,"title":{},"body":{"index.html":{}}}],["suggested",{"_index":1391,"title":{},"body":{"index.html":{}}}],["super",{"_index":594,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":573,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super.login(request",{"_index":570,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["supertest",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["support",{"_index":1478,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1479,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1219,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["swagger_api_current_version",{"_index":1148,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_description",{"_index":1149,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_name",{"_index":1150,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_root",{"_index":1151,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(swagger_api_root",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":1276,"title":{},"body":{"index.html":{}}}],["synchronize",{"_index":544,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["table",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1397,"title":{},"body":{"index.html":{}}}],["telephone",{"_index":992,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["temporary",{"_index":1307,"title":{},"body":{"index.html":{}}}],["test",{"_index":436,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["test:covswagger",{"_index":1361,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1360,"title":{},"body":{"index.html":{}}}],["test@test.com",{"_index":636,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["test@test.com'})@isemail",{"_index":625,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["tests",{"_index":1358,"title":{},"body":{"index.html":{}}}],["this.appservice.root",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["this.articlesrepository.delete(id",{"_index":228,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.find",{"_index":224,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.findone(id",{"_index":226,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.save(article",{"_index":223,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesservice.create(createarticledto",{"_index":202,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articlesservice.findall",{"_index":203,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.authservice.generatetoken(user",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(credentials",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.config.get('api_url",{"_index":151,"title":{},"body":{"injectables/AppService.html":{}}}],["this.envconfig",{"_index":430,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.database_host",{"_index":438,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.database_name",{"_index":442,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.database_password",{"_index":441,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.database_type",{"_index":437,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.database_username",{"_index":440,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.googleauth_client_id",{"_index":444,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.googleauth_client_secret",{"_index":445,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.googleauth_redirect_uri",{"_index":446,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.jwt_secret",{"_index":443,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.node_env",{"_index":433,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig.twilio_account_ssid",{"_index":447,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig[key",{"_index":448,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.findrequest(requestid",{"_index":859,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.findshoppinglist(id",{"_index":931,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.findshoppinglist(shoppinglistid",{"_index":937,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.get(id",{"_index":866,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.getbyemail(payload.email",{"_index":1098,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.sign({...userpayload",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.populaterequest(request",{"_index":828,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.requestrepository.find",{"_index":858,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.requestrepository.findone(id",{"_index":826,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.requestrepository.save(request",{"_index":831,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.requestservice.create(createrequestdto",{"_index":726,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.requestservice.get(requestid",{"_index":732,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["this.requestservice.getall(user",{"_index":721,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.requestservice.update(requestid",{"_index":736,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.requestservice.updaterequestarticle(requestid",{"_index":739,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.shoppinglistrepository.find",{"_index":984,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["this.shoppinglistrepository.findone(id",{"_index":974,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["this.shoppinglistrepository.save(shoppinglist",{"_index":983,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["this.shoppinglistservice.addrequesttolist(request.id",{"_index":939,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.shoppinglistservice.create(createrequestdto",{"_index":932,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.shoppinglistservice.get(id",{"_index":940,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.shoppinglistservice.getallbyuser(user.userid",{"_index":927,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.shoppinglistservice.update(updateshoppinglist",{"_index":934,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["this.userrepository",{"_index":1087,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.create(payload",{"_index":1102,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.find",{"_index":1121,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone(id",{"_index":1084,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone({email",{"_index":1086,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(newuser",{"_index":1103,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(user",{"_index":1120,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.create(payload",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.get(entity.requesterid",{"_index":728,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.userservice.get(id",{"_index":1038,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.get(r.requesterid",{"_index":725,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.userservice.getall",{"_index":1036,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getbyemailandpass(email",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(updateuserdto",{"_index":1042,"title":{},"body":{"controllers/UserController.html":{}}}],["this.validateinput(parsedconfig",{"_index":431,"title":{},"body":{"classes/ConfigService.html":{}}}],["through",{"_index":1381,"title":{},"body":{"index.html":{}}}],["throw",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to(value",{"_index":615,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["todo",{"_index":1081,"title":{},"body":{"injectables/UsersService.html":{}}}],["token",{"_index":869,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["token.dt",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dt.ts",{"_index":868,"title":{},"body":{"classes/ResponseTokenDto.html":{},"coverage.html":{}}}],["token.dt.ts:13",{"_index":870,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["token.dt.ts:19",{"_index":875,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["token.dt.ts:8",{"_index":874,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["tokens",{"_index":1408,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1472,"title":{},"body":{"license.html":{}}}],["toundra",{"_index":1418,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":777,"title":{},"body":{"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"dependencies.html":{}}}],["true",{"_index":21,"title":{},"body":{"classes/AddressModel.html":{},"controllers/AuthController.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["true})@column",{"_index":640,"title":{},"body":{"classes/RequestArticle.html":{},"classes/ShoppingListRequest.html":{}}}],["true})@column({default",{"_index":642,"title":{},"body":{"classes/RequestArticle.html":{}}}],["true})@column({length",{"_index":1001,"title":{},"body":{"classes/User.html":{}}}],["true})@column({type",{"_index":1009,"title":{},"body":{"classes/User.html":{}}}],["true})@isemail",{"_index":602,"title":{},"body":{"classes/LoginPayload.html":{}}}],["true})@isnotempty",{"_index":627,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{}}}],["true})@isnotempty()@minlength(5",{"_index":604,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["try",{"_index":1293,"title":{},"body":{"index.html":{}}}],["ts",{"_index":538,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["tsconfig",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tutorial",{"_index":1400,"title":{},"body":{"index.html":{}}}],["twilio_account_ssid",{"_index":481,"title":{},"body":{"classes/ConfigService.html":{}}}],["twilio_auth_token",{"_index":483,"title":{},"body":{"classes/ConfigService.html":{}}}],["twillioaccountssid",{"_index":365,"title":{},"body":{"classes/ConfigService.html":{}}}],["twillioauthtoken",{"_index":366,"title":{},"body":{"classes/ConfigService.html":{}}}],["type",{"_index":14,"title":{},"body":{"classes/AddressModel.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateRequestArticleDto.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PasswordTransformer.html":{},"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestArticleStatusDto.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":29,"title":{},"body":{"classes/AddressModel.html":{},"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"injectables/ArticlesService.html":{},"classes/PasswordTransformer.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"classes/RequestFillableFields-1.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{},"classes/ShoppingListRequest.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([article",{"_index":1061,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([requestentity",{"_index":796,"title":{},"body":{"modules/RequestModule.html":{}}}],["typeormmodule.forfeature([shoppinglist",{"_index":952,"title":{},"body":{"modules/ShoppingListModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":522,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":517,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types",{"_index":1374,"title":{},"body":{"index.html":{}}}],["types/dotenv",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["types/express",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["types/helmet",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["types/jest",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["types/joi",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["types/supertest",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["typing",{"_index":1280,"title":{},"body":{"index.html":{}}}],["u",{"_index":1275,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallController.html":{},"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{}}}],["unauthorizedexception",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('wrong",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":633,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/RequestArticle.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/ShoppingList.html":{},"controllers/ShoppingListController.html":{},"classes/ShoppingListFormDto.html":{},"classes/ShoppingListRequest.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["undefined})@apibadrequestresponse({description",{"_index":177,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["undefined})@apiquery({name",{"_index":670,"title":{},"body":{"controllers/RequestController.html":{}}}],["undefined})@exclude",{"_index":1007,"title":{},"body":{"classes/User.html":{}}}],["undefined})@isnotempty",{"_index":995,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["undefined})@onetomany(undefined",{"_index":747,"title":{},"body":{"classes/RequestEntity.html":{},"classes/ShoppingList.html":{}}}],["unit",{"_index":168,"title":{},"body":{"classes/Article.html":{},"classes/ArticleFillableFields.html":{},"classes/CreateArticleDto.html":{},"index.html":{}}}],["unit.'})@column({length",{"_index":160,"title":{},"body":{"classes/Article.html":{}}}],["unit.'})@isstring",{"_index":496,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["until",{"_index":872,"title":{},"body":{"classes/ResponseTokenDto.html":{}}}],["up",{"_index":1310,"title":{},"body":{"index.html":{}}}],["update",{"_index":800,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["update(editrequestdto",{"_index":1076,"title":{},"body":{"injectables/UsersService.html":{}}}],["update(form",{"_index":969,"title":{},"body":{"injectables/ShoppingListService.html":{}}}],["update(id",{"_index":1024,"title":{},"body":{"controllers/UserController.html":{}}}],["update(requestid",{"_index":816,"title":{},"body":{"injectables/RequestService.html":{}}}],["updated_at",{"_index":879,"title":{},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["updatedatecolumn",{"_index":889,"title":{},"body":{"classes/ShoppingList.html":{},"classes/ShoppingListFillableFields.html":{}}}],["updaterequest",{"_index":668,"title":{},"body":{"controllers/RequestController.html":{}}}],["updaterequest(requestid",{"_index":697,"title":{},"body":{"controllers/RequestController.html":{}}}],["updaterequestarticle",{"_index":801,"title":{},"body":{"injectables/RequestService.html":{}}}],["updaterequestarticle(requestid",{"_index":818,"title":{},"body":{"injectables/RequestService.html":{}}}],["updateshoppinglist",{"_index":898,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["updateshoppinglist(id",{"_index":917,"title":{},"body":{"controllers/ShoppingListController.html":{}}}],["updateuserdto",{"_index":989,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usage",{"_index":1352,"title":{},"body":{"index.html":{}}}],["use",{"_index":1349,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":1316,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":289,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["useguards",{"_index":704,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":716,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"controllers/UserController.html":{}}}],["usenewurlparser",{"_index":548,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["user",{"_index":97,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"injectables/JwtAuthGuard.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"injectables/RequestService.html":{},"classes/ResponseTokenDto.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["user.city",{"_index":1104,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.controller",{"_index":1055,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":1032,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":991,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":994,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:16",{"_index":996,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:19",{"_index":997,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":993,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.entity",{"_index":1029,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{}}}],["user.firstname",{"_index":1112,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.id",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.lastname",{"_index":1114,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.module",{"_index":618,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["user.number",{"_index":1108,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.role",{"_index":1116,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.service",{"_index":1030,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.street",{"_index":1106,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.telephone",{"_index":1118,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.userid",{"_index":830,"title":{},"body":{"injectables/RequestService.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"controllers/UserController.html":{}}}],["user.zipcode",{"_index":1110,"title":{},"body":{"injectables/UsersService.html":{}}}],["user/user",{"_index":635,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["user/user.controller",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.entity",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IRequestUser.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFillableFields.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{}}}],["user/user.module",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RequestModule.html":{}}}],["user/user.service",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/RequestController.html":{}}}],["usercontroller",{"_index":85,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userfillablefields",{"_index":1016,"title":{"classes/UserFillableFields.html":{}},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userid",{"_index":688,"title":{"classes/UserID.html":{}},"body":{"controllers/RequestController.html":{},"controllers/ShoppingListController.html":{},"injectables/ShoppingListService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"coverage.html":{}}}],["usermodule",{"_index":75,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/PasswordTransformer.html":{},"modules/RequestModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":529,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["userpayload",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["userpayload.password",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrepository",{"_index":1067,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrole",{"_index":632,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.none",{"_index":637,"title":{},"body":{"classes/RegisterPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["users",{"_index":1014,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserID.html":{}}}],["users.password",{"_index":1095,"title":{},"body":{"injectables/UsersService.html":{}}}],["userservice",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/RequestController.html":{},"controllers/UserController.html":{}}}],["usersmodule",{"_index":1056,"title":{"modules/UsersModule.html":{}},"body":{"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":79,"title":{"injectables/UsersService.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/RequestController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usertoupdate",{"_index":1040,"title":{},"body":{"controllers/UserController.html":{}}}],["usertoupdate.id",{"_index":1041,"title":{},"body":{"controllers/UserController.html":{}}}],["user})@apibadrequestresponse({description",{"_index":1025,"title":{},"body":{"controllers/UserController.html":{}}}],["user})@apinotfoundresponse({description",{"_index":1019,"title":{},"body":{"controllers/UserController.html":{}}}],["user})@exclude",{"_index":761,"title":{},"body":{"classes/RequestEntity.html":{}}}],["usevalue",{"_index":347,"title":{},"body":{"modules/ConfigModule.html":{}}}],["using",{"_index":1345,"title":{},"body":{"index.html":{}}}],["usually",{"_index":1282,"title":{},"body":{"index.html":{}}}],["v",{"_index":1330,"title":{},"body":{"index.html":{}}}],["v.articleid",{"_index":861,"title":{},"body":{"injectables/RequestService.html":{}}}],["valid",{"_index":458,"title":{},"body":{"classes/ConfigService.html":{}}}],["valid(['development",{"_index":454,"title":{},"body":{"classes/ConfigService.html":{}}}],["validate",{"_index":584,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":587,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":382,"title":{},"body":{"classes/ConfigService.html":{}}}],["validatedenvconfig",{"_index":489,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateinput",{"_index":351,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateinput(parsedconfig",{"_index":376,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateuser",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(undefined",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser({email",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":479,"title":{},"body":{"classes/ConfigService.html":{}}}],["validationoptions",{"_index":484,"title":{},"body":{"classes/ConfigService.html":{}}}],["validator",{"_index":499,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":488,"title":{},"body":{"classes/ConfigService.html":{},"classes/PasswordTransformer.html":{},"injectables/RequestService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value).digest('hex",{"_index":620,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["values",{"_index":388,"title":{},"body":{"classes/ConfigService.html":{}}}],["valuetransformer",{"_index":612,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["variable",{"_index":395,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["variables",{"_index":380,"title":{"miscellaneous/variables.html":{}},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["variant",{"_index":1412,"title":{},"body":{"index.html":{}}}],["vars",{"_index":1298,"title":{},"body":{"index.html":{}}}],["visit",{"_index":1368,"title":{},"body":{"index.html":{}}}],["void",{"_index":815,"title":{},"body":{"injectables/RequestService.html":{}}}],["volume",{"_index":1317,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1456,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1452,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1354,"title":{},"body":{"index.html":{}}}],["web",{"_index":1407,"title":{},"body":{"index.html":{}}}],["webhook",{"_index":324,"title":{},"body":{"controllers/CallController.html":{}}}],["webpack",{"_index":535,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["where('users.email",{"_index":1089,"title":{},"body":{"injectables/UsersService.html":{}}}],["whether",{"_index":1469,"title":{},"body":{"license.html":{}}}],["within",{"_index":674,"title":{},"body":{"controllers/RequestController.html":{}}}],["without",{"_index":1430,"title":{},"body":{"license.html":{}}}],["withpsql",{"_index":1295,"title":{},"body":{"index.html":{}}}],["working",{"_index":1380,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":1269,"title":{},"body":{"index.html":{}}}],["yarnenvironment",{"_index":1271,"title":{},"body":{"index.html":{}}}],["zip",{"_index":676,"title":{},"body":{"controllers/RequestController.html":{}}}],["zipcode",{"_index":13,"title":{},"body":{"classes/AddressModel.html":{},"controllers/RequestController.html":{},"classes/RequestEntity.html":{},"classes/RequestFormDto.html":{},"injectables/RequestService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["zoom",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{},"modules/ShoppingListModule.html":{},"modules/UserModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddressModel.html":{"url":"classes/AddressModel.html","title":"class - AddressModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/main/models/address.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                number\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/main/models/address.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/main/models/address.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/main/models/address.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/main/models/address.model.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column} from 'typeorm';\nimport {ApiProperty, ApiPropertyOptional} from '@nestjs/swagger';\n\nexport class AddressModel {\n  @ApiPropertyOptional()\n  @Column({\n    length: 10,\n    nullable: true,\n  })\n  street?: string;\n\n  @ApiPropertyOptional()\n  @Column({\n    length: 10,\n    nullable: true,\n  })\n  number?: string;\n\n  @ApiPropertyOptional()\n  @Column({\n    length: 10,\n    nullable: true,\n  })\n  zipCode?: string;\n\n  @ApiPropertyOptional()\n  @Column({\n    length: 10,\n    nullable: true,\n  })\n  city?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/main/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Successful'})\n                \n            \n\n            \n                \n                    Defined in src/modules/main/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Controller, Get} from '@nestjs/common';\n\nimport {AppService} from './app.service';\nimport {ApiOkResponse} from '@nestjs/swagger';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {\n  }\n\n  @Get()\n  @ApiOkResponse({description: 'Successful'})\n  root(): string {\n    return this.appService.root();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddressModel\n\nAddressModel\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressModel->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCallModule\n\nCallModule\n\nAppModule -->\n\nCallModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nRequestModule\n\nRequestModule\n\nAppModule -->\n\nRequestModule->AppModule\n\n\n\n\n\nShoppingListModule\n\nShoppingListModule\n\nAppModule -->\n\nShoppingListModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nArticlesService\n\nArticlesService\n\nAppModule -->\n\nArticlesService->AppModule\n\n\n\n\n\nRequestService\n\nRequestService\n\nAppModule -->\n\nRequestService->AppModule\n\n\n\n\n\nShoppingListService\n\nShoppingListService\n\nAppModule -->\n\nShoppingListService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/main/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ArticlesService\n                        \n                        \n                            RequestService\n                        \n                        \n                            ShoppingListService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            ArticlesController\n                        \n                        \n                            UserController\n                        \n                        \n                            RequestController\n                        \n                        \n                            ShoppingListController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddressModel\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CallModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            RequestModule\n                        \n                        \n                            ShoppingListModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {ConfigService} from '../config/config.service';\nimport {Module} from '@nestjs/common';\nimport {TypeOrmModule} from '@nestjs/typeorm';\n\nimport {ConfigModule} from '../config/config.module';\nimport {DatabaseModule} from '../database/database.module';\nimport {AppController} from './app.controller';\nimport {AppService} from './app.service';\nimport {AuthModule} from '../auth/auth.module';\nimport {User} from '../user/user.entity';\nimport {RequestEntity} from '../request/request.entity';\nimport {Article} from '../articles/article.entity';\nimport {ArticlesController} from '../articles/articles.controller';\nimport {ArticlesService} from '../articles/articles.service';\nimport {RequestModule} from '../request/request.module';\nimport {CallModule} from '../call/call.module';\nimport {UserModule} from '../user/user.module';\nimport {UserController} from '../user/user.controller';\nimport {RequestController} from '../request/request.controller';\nimport {UsersService} from '../user/user.service';\nimport {RequestService} from '../request/request.service';\nimport {ShoppingListController} from '../shoppingList/shopping-list.controller';\nimport {ShoppingList} from '../shoppingList/shopping-list.entity';\nimport {ShoppingListModule} from '../shoppingList/shopping-list.module';\nimport {ShoppingListService} from '../shoppingList/shopping-list.service';\nimport {AddressModel} from './models/address.model';\n\n@Module({\n  imports: [\n    AuthModule,\n    ConfigModule,\n    DatabaseModule,\n    RequestModule,\n    UserModule,\n    ShoppingListModule,\n    TypeOrmModule.forFeature([User, Article, RequestEntity, ShoppingList]),\n    CallModule,\n    AddressModel,\n  ],\n  controllers: [\n    AppController,\n    ArticlesController,\n    UserController,\n    RequestController,\n    ShoppingListController,\n  ],\n  providers: [AppService, ArticlesService, UsersService, RequestService, ShoppingListService],\n})\nexport class AppModule /* implements NestModule */ {\n  static port: string | number;\n  static isDev: boolean;\n\n  constructor(private readonly config: ConfigService) {\n    AppModule.port = process.env.PORT || config.get('API_PORT');\n    AppModule.isDev = config.isDev;\n  }\n\n  // DOC: https://docs.nestjs.com/middleware\n  // configure(consumer: MiddlewareConsumer) {\n  //   consumer\n  //     .apply(loggerMiddleware)\n  //     .forRoutes({ path: '/', method: RequestMethod.ALL });\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/main/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/main/app.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/main/app.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@nestjs/common';\n\nimport {ConfigService} from '../config/config.service';\n\n@Injectable()\nexport class AppService {\n  constructor(private config: ConfigService) {\n  }\n\n  root(): string {\n    return this.config.get('API_URL');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Article.html":{"url":"classes/Article.html","title":"class - Article","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Article\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/article.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Auto-incremented id of an article.', type: 'integer'})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/articles/article.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Name of the article, should also contain the unit.'})@Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/articles/article.entity.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({\n  name: 'articles',\n})\nexport class Article {\n  @ApiProperty({\n    description: 'Auto-incremented id of an article.',\n    type: 'integer',\n  })\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({\n    description: 'Name of the article, should also contain the unit.',\n  })\n  @Column({ length: 255 })\n  name!: string;\n}\n\nexport class ArticleFillableFields {\n  name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArticleFillableFields.html":{"url":"classes/ArticleFillableFields.html","title":"class - ArticleFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArticleFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/article.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/articles/article.entity.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({\n  name: 'articles',\n})\nexport class Article {\n  @ApiProperty({\n    description: 'Auto-incremented id of an article.',\n    type: 'integer',\n  })\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({\n    description: 'Name of the article, should also contain the unit.',\n  })\n  @Column({ length: 255 })\n  name!: string;\n}\n\nexport class ArticleFillableFields {\n  name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticlesController.html":{"url":"controllers/ArticlesController.html","title":"controller - ArticlesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticlesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/articles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                articles\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                insertOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'All existing articles', type: undefined})@ApiBadRequestResponse({description: 'Bad Request'})\n                \n            \n\n            \n                \n                    Defined in src/modules/articles/articles.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertOne(createArticleDto: CreateArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({description: 'Created', type: Article})@ApiBadRequestResponse({description: 'Bad Request'})\n                \n            \n\n            \n                \n                    Defined in src/modules/articles/articles.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createArticleDto\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, Get, Post} from '@nestjs/common';\nimport {ApiBadRequestResponse, ApiCreatedResponse, ApiOkResponse, ApiTags} from '@nestjs/swagger';\nimport {CreateArticleDto} from './dto/create-article.dto';\nimport {ArticlesService} from './articles.service';\nimport {Article} from './article.entity';\n\n@Controller('articles')\n@ApiTags('Articles')\nexport class ArticlesController {\n  constructor(private readonly articlesService: ArticlesService) {\n  }\n\n  @Post()\n  @ApiCreatedResponse({description: 'Created', type: Article})\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  async insertOne(@Body() createArticleDto: CreateArticleDto): Promise {\n    return this.articlesService.create(createArticleDto);\n  }\n\n  @Get()\n  @ApiOkResponse({\n    description: 'All existing articles',\n    type: [Article],\n  })\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  findAll(): Promise {\n    return this.articlesService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticlesService.html":{"url":"injectables/ArticlesService.html","title":"injectable - ArticlesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArticlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/articles.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(articlesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/articles/articles.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        articlesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createArticleDto: CreateArticleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/articles/articles.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createArticleDto\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/articles/articles.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/articles/articles.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateArticleDto } from './dto/create-article.dto';\nimport { Article } from './article.entity';\n\n@Injectable()\nexport class ArticlesService {\n  constructor(\n    @InjectRepository(Article)\n    private readonly articlesRepository: Repository,\n  ) {}\n\n  create(createArticleDto: CreateArticleDto): Promise {\n    const article = new Article();\n    article.name = createArticleDto.name;\n\n    return this.articlesRepository.save(article);\n  }\n\n  async findAll(): Promise {\n    return this.articlesRepository.find();\n  }\n\n  // findOne(id: string): Promise {\n  //   return this.articlesRepository.findOne(id);\n  // }\n\n  async remove(id: string): Promise {\n    await this.articlesRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: LoginPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiOkResponse({description: 'Successful Login', type: ResponseTokenDto})@ApiBadRequestResponse({description: 'Bad Request'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(payload: RegisterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiCreatedResponse({description: 'Successful Registration', type: ResponseTokenDto})@ApiBadRequestResponse({description: 'Bad Request'})@ApiNotAcceptableResponse({description: 'Already exists'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, Logger, Post} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiNotAcceptableResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\n\nimport {AuthService} from './auth.service';\nimport {LoginPayload} from './login.payload';\nimport {RegisterPayload} from './register.payload';\nimport {UsersService} from '../user/user.service';\nimport {ResponseTokenDto} from './dto/response-token.dt';\n\n@Controller('auth')\n@ApiTags('Authentication')\nexport class AuthController {\n  static LOGGER = new Logger('Auth', true);\n\n  constructor(\n    private readonly authService: AuthService,\n    private readonly userService: UsersService,\n  ) {\n  }\n\n  @Post('login')\n  @ApiOkResponse({\n    description: 'Successful Login',\n    type: ResponseTokenDto,\n  })\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  @ApiUnauthorizedResponse({description: 'Unauthorized'})\n  async login(@Body() credentials: LoginPayload): Promise {\n    const user = await this.authService.validateUser(credentials);\n    return await this.authService.generateToken(user);\n  }\n\n  @Post('register')\n  @ApiCreatedResponse({\n    description: 'Successful Registration',\n    type: ResponseTokenDto,\n  })\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  @ApiNotAcceptableResponse({description: 'Already exists'})\n  async register(@Body() payload: RegisterPayload): Promise {\n    const user = await this.userService.create(payload);\n    AuthController.LOGGER.log(user);\n    return await this.authService.generateToken(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {JwtModule} from '@nestjs/jwt';\nimport {PassportModule} from '@nestjs/passport';\n\nimport {ConfigModule} from '../config/config.module';\nimport {ConfigService} from '../config/config.service';\nimport {UserModule} from '../user/user.module';\nimport {AuthService} from './auth.service';\nimport {JwtStrategy} from './jwt.strategy';\nimport {AuthController} from './auth.controller';\n\n@Module({\n  imports: [\n    UserModule,\n    ConfigModule,\n    PassportModule.register({defaultStrategy: 'jwt'}),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          secret: configService.get('JWT_SECRET'),\n          signOptions: {\n            expiresIn: Number(configService.get('JWT_EXPIRATION_TIME')),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [PassportModule.register({defaultStrategy: 'jwt'})],\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(undefined: LoginPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable, UnauthorizedException} from '@nestjs/common';\nimport {JwtService} from '@nestjs/jwt';\n\nimport {ConfigService} from '../config/config.service';\nimport {User} from '../user/user.entity';\nimport {UsersService} from '../user/user.service';\nimport {LoginPayload} from './login.payload';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    private readonly userService: UsersService,\n  ) {\n  }\n\n  async generateToken(user: User) {\n    const userPayload = user;\n    delete userPayload.password;\n\n    return {\n      expiresIn: Number(this.configService.get('JWT_EXPIRATION_TIME')),\n      accessToken: this.jwtService.sign({...userPayload}),\n      id: user.id,\n    };\n  }\n\n  async validateUser({email, password}: LoginPayload): Promise {\n    const user = await this.userService.getByEmailAndPass(email, password);\n    if (!user) {\n      throw new UnauthorizedException('Wrong email or password !');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CallController.html":{"url":"controllers/CallController.html","title":"controller - CallController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CallController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/call/call.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                call\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                    Async\n                                listen\n                            \n                            \n                                    Async\n                                webhook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            index\n                        \n                        \n                    \n                \n            \n            \n                \nindex()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Successful'})\n                \n            \n\n            \n                \n                    Defined in src/modules/call/call.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            listen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listen()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('listen')@ApiOkResponse({description: 'Successful'})@ApiBadRequestResponse({description: 'Bad Request'})\n                \n            \n\n            \n                \n                    Defined in src/modules/call/call.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            webhook\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    webhook()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('webhook')@ApiOkResponse({description: 'Successful'})@ApiBadRequestResponse({description: 'Bad Request'})\n                \n            \n\n            \n                \n                    Defined in src/modules/call/call.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Controller, Get} from '@nestjs/common';\nimport {ApiBadRequestResponse, ApiOkResponse, ApiTags, ApiUnauthorizedResponse} from '@nestjs/swagger';\n\n@Controller('call')\n@ApiTags('Calls')\n@ApiUnauthorizedResponse({description: 'Unauthorized'})\nexport class CallController {\n  @Get()\n  @ApiOkResponse({description: 'Successful'})\n  index(): string {\n    return 'call';\n  }\n\n  @Get('listen')\n  @ApiOkResponse({description: 'Successful'})\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  async listen(): Promise {\n  }\n\n  @Get('webhook')\n  @ApiOkResponse({description: 'Successful'})\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  async webhook(): Promise {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CallModule.html":{"url":"modules/CallModule.html","title":"module - CallModule","body":"\n                   \n\n\n\n\n    Modules\n    CallModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CallModule\n\n\n\ncluster_CallModule_providers\n\n\n\n\nCallService\n\nCallService\n\n\n\nCallModule\n\nCallModule\n\nCallModule -->\n\nCallService->CallModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/call/call.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CallService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CallController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CallController } from './call.controller';\nimport { CallService } from './call.service';\n\n@Module({\n  controllers: [CallController],\n  providers: [CallService],\n})\nexport class CallModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CallService.html":{"url":"injectables/CallService.html","title":"injectable - CallService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CallService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/call/call.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CallService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\n\nimport {ConfigService} from './config.service';\n\n@Module({\n  providers: [\n    {\n      provide: ConfigService,\n      useValue: new ConfigService(`.env.${process.env.NODE_ENV}`),\n    },\n  ],\n  exports: [ConfigService],\n})\nexport class ConfigModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                envConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                    Private\n                                validateInput\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isDev\n                                \n                                \n                                    isProd\n                                \n                                \n                                    isTest\n                                \n                                \n                                    databaseType\n                                \n                                \n                                    databaseHost\n                                \n                                \n                                    databasePort\n                                \n                                \n                                    databaseUsername\n                                \n                                \n                                    databasePassword\n                                \n                                \n                                    databaseName\n                                \n                                \n                                    jwtSecret\n                                \n                                \n                                    googleauthClientId\n                                \n                                \n                                    googleauthClientSecret\n                                \n                                \n                                    googleauthRedirectUri\n                                \n                                \n                                    twillioAccountSSID\n                                \n                                \n                                    twillioAuthtoken\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePath: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/config/config.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            envConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DotenvParseOutput\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/config/config.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:79\n                \n            \n\n\n            \n                \n                    Generic getter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateInput(parsedConfig: DotenvParseOutput)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:87\n                \n            \n\n\n            \n                \n                    Ensures all needed variables are set, and returns the validated JavaScript object\nincluding the applied default values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parsedConfig\n                                    \n                                            DotenvParseOutput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isDev\n                    \n                \n\n                \n                    \n                        getisDev()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:16\n                                \n                            \n                    \n                        \n                                Getters for each environment variable\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isProd\n                    \n                \n\n                \n                    \n                        getisProd()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:20\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTest\n                    \n                \n\n                \n                    \n                        getisTest()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseType\n                    \n                \n\n                \n                    \n                        getdatabaseType()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseHost\n                    \n                \n\n                \n                    \n                        getdatabaseHost()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databasePort\n                    \n                \n\n                \n                    \n                        getdatabasePort()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseUsername\n                    \n                \n\n                \n                    \n                        getdatabaseUsername()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:40\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databasePassword\n                    \n                \n\n                \n                    \n                        getdatabasePassword()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseName\n                    \n                \n\n                \n                    \n                        getdatabaseName()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        jwtSecret\n                    \n                \n\n                \n                    \n                        getjwtSecret()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:52\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        googleauthClientId\n                    \n                \n\n                \n                    \n                        getgoogleauthClientId()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:56\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        googleauthClientSecret\n                    \n                \n\n                \n                    \n                        getgoogleauthClientSecret()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:60\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        googleauthRedirectUri\n                    \n                \n\n                \n                    \n                        getgoogleauthRedirectUri()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:64\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        twillioAccountSSID\n                    \n                \n\n                \n                    \n                        gettwillioAccountSSID()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:68\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        twillioAuthtoken\n                    \n                \n\n                \n                    \n                        gettwillioAuthtoken()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/config/config.service.ts:72\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {DotenvParseOutput, parse} from 'dotenv';\nimport {readFileSync} from 'fs';\nimport * as Joi from 'joi';\n\nexport class ConfigService {\n  private readonly envConfig: DotenvParseOutput;\n\n  constructor(filePath: string) {\n    const parsedConfig = parse(readFileSync(filePath));\n    this.envConfig = this.validateInput(parsedConfig);\n  }\n\n  /**\n   * Getters for each environment variable\n   */\n  public get isDev() {\n    return this.envConfig.NODE_ENV === 'development';\n  }\n\n  public get isProd() {\n    return this.envConfig.NODE_ENV === 'production';\n  }\n\n  public get isTest() {\n    return this.envConfig.NODE_ENV === 'test';\n  }\n\n  public get databaseType() {\n    return this.envConfig.DATABASE_TYPE;\n  }\n\n  public get databaseHost() {\n    return this.envConfig.DATABASE_HOST;\n  }\n\n  public get databasePort() {\n    return Number(this.envConfig.DATABASE_PORT);\n  }\n\n  public get databaseUsername() {\n    return this.envConfig.DATABASE_USERNAME;\n  }\n\n  public get databasePassword() {\n    return this.envConfig.DATABASE_PASSWORD;\n  }\n\n  public get databaseName() {\n    return this.envConfig.DATABASE_NAME;\n  }\n\n  public get jwtSecret() {\n    return this.envConfig.JWT_SECRET;\n  }\n\n  public get googleauthClientId() {\n    return this.envConfig.GOOGLEAUTH_CLIENT_ID;\n  }\n\n  public get googleauthClientSecret() {\n    return this.envConfig.GOOGLEAUTH_CLIENT_SECRET;\n  }\n\n  public get googleauthRedirectUri() {\n    return this.envConfig.GOOGLEAUTH_REDIRECT_URI;\n  }\n\n  public get twillioAccountSSID(){\n    return this.envConfig.TWILIO_ACCOUNT_SSID;\n  }\n\n  public get twillioAuthtoken(){\n    return this.envConfig.TWILIO_ACCOUNT_SSID;\n  }\n\n  /**\n   * Generic getter\n   */\n  get(key: string) {\n    return this.envConfig[key];\n  }\n\n  /**\n   * Ensures all needed variables are set, and returns the validated JavaScript object\n   * including the applied default values.\n   */\n  private validateInput(parsedConfig: DotenvParseOutput) {\n    const envVarsSchema: Joi.ObjectSchema = Joi.object({\n      NODE_ENV: Joi.string()\n        .valid(['development', 'production', 'test', 'provision'])\n        .default('development'),\n      DATABASE_TYPE: Joi.string()\n        .valid([\n          'cockroachdb',\n          'cordova',\n          'mariadb',\n          'mongodb',\n          'mssql',\n          'mysql',\n          'nativescript',\n          'oracle',\n          'postgres',\n          'react-native',\n          'sqlite',\n          'sqljs',\n        ])\n        .required(),\n      PORT: Joi.number(),\n      // API_AUTH_ENABLED: Joi.boolean()\n      //   .required()\n      //   .default(true),\n      // add more validation rules ...\n      TWILIO_ACCOUNT_SSID: Joi.string().required(),\n      TWILIO_AUTH_TOKEN: Joi.string().required()\n    });\n\n    const validationOptions: Joi.ValidationOptions = {allowUnknown: true};\n\n    const {error, value: validatedEnvConfig} = Joi.validate(\n      parsedConfig,\n      envVarsSchema,\n      validationOptions,\n    );\n    if (error) {\n      throw new Error(`Config validation error: ${error.message}`);\n    }\n    return validatedEnvConfig;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateArticleDto.html":{"url":"classes/CreateArticleDto.html","title":"class - CreateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/dto/create-article.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'Name of the article, should also contain the unit.'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/articles/dto/create-article.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class CreateArticleDto {\n  @ApiProperty({\n    required: true,\n    description: 'Name of the article, should also contain the unit.',\n  })\n  @IsString()\n  readonly name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRequestArticleDto.html":{"url":"classes/CreateRequestArticleDto.html","title":"class - CreateRequestArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRequestArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/dto/request-form.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                articleCount\n                            \n                            \n                                    Readonly\n                                articleId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            articleCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'Number of items', type: 'integer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            articleId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'Article ID received from the article list', type: 'integer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger';\nimport {AddressModel} from '../../main/models/address.model';\n\nexport class CreateRequestArticleDto {\n  @ApiProperty({\n    required: true,\n    description: 'Article ID received from the article list',\n    type: 'integer',\n  })\n  readonly articleId!: number;\n\n  @ApiProperty({\n    required: true,\n    description: 'Number of items',\n    type: 'integer',\n  })\n  readonly articleCount!: number;\n}\n\nexport class RequestFormDto extends AddressModel {\n  @ApiProperty({\n    required: true,\n    description: 'List of articles',\n    type: [CreateRequestArticleDto],\n  })\n  readonly articles!: CreateRequestArticleDto[];\n\n  @ApiProperty()\n  readonly additionalRequest?: string;\n  @ApiProperty()\n  readonly deliveryComment?: string;\n  @ApiProperty()\n  readonly phoneNumber?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\n\nimport { ConfigModule } from '../config/config.module';\nimport { ConfigService } from '../config/config.service';\nimport { User } from '../user/user.entity';\nimport { RequestEntity } from '../request/request.entity';\nimport { Article } from '../articles/article.entity';\nimport { RequestArticle } from '../request/requestArticle.entity';\nimport {ShoppingList} from '../shoppingList/shopping-list.entity';\nimport {ShoppingListRequest} from '../shoppingList/shopping-list-request.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) =>\n        ({\n          type: config.databaseType,\n          host: config.databaseHost,\n          port: config.databasePort,\n          database: config.databaseName,\n          username: config.databaseUsername,\n          password: config.databasePassword,\n          // importing entities directly because Webpack + glob path pattern + ts file = crash\n          // https://github.com/nestjs/nest/issues/711\n          entities: [User, Article, RequestEntity, RequestArticle, ShoppingList, ShoppingListRequest], // ['src/modules/**/*.entity{.ts,.js}'],\n          migrations: [User, Article, RequestEntity, RequestArticle, ShoppingList, ShoppingListRequest], // ['src/modules/**/*.migration{.ts,.js}'],\n          synchronize: config.isDev,\n          // synchronize: false,\n          logging: !config.isProd,\n          useNewUrlParser: true,\n        } as TypeOrmModuleOptions),\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequestUser.html":{"url":"interfaces/IRequestUser.html","title":"interface - IRequestUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRequestUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/decorators/user.decorator.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createParamDecorator } from '@nestjs/common';\nimport { User } from '../../user/user.entity';\n\nexport interface IRequestUser extends Request {\n  user?: User;\n}\n\nexport const ReqUser = createParamDecorator((data, req: IRequestUser) => {\n  return req.user;\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/guards/jwt-guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  // canActivate(context: ExecutionContext) {\n  //   // Add your custom authentication logic here\n  //   // for example, call super.logIn(request) to establish a session.\n  //   return super.canActivate(context);\n  // }\n  // // @ts-ignore: implicit-any\n  // handleRequest(err, user, info) {\n  //   if (err || !user) {\n  //     throw err || new UnauthorizedException();\n  //   }\n  //   return user;\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        exp\n                                \n                                \n                                            Optional\n                                        iat\n                                \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  sub: string;\n  iat?: number;\n  exp?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/jwt.strategy.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport { ConfigService } from '../config/config.service';\nimport { AuthService } from './auth.service';\nimport { LoginPayload } from './login.payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly configService: ConfigService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: true,\n      secretOrKey: configService.get('JWT_SECRET'),\n      // passReqToCallback: true,\n    });\n  }\n\n  // async validate({ iat, exp }: JwtPayload) {\n  //   const isExpired = exp - iat \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayload.html":{"url":"classes/LoginPayload.html","title":"class - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/login.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/login.payload.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()@MinLength(5)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/login.payload.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger';\nimport {IsEmail, IsNotEmpty, MinLength} from 'class-validator';\n\nexport class LoginPayload {\n  @ApiProperty({required: true})\n  @IsEmail()\n  email!: string;\n\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  @MinLength(5)\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordTransformer.html":{"url":"classes/PasswordTransformer.html","title":"class - PasswordTransformer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordTransformer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/password.transformer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ValueTransformer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            from\n                        \n                        \n                    \n                \n            \n            \n                \nfrom(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/password.transformer.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            to\n                        \n                        \n                    \n                \n            \n            \n                \nto(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/password.transformer.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\nimport { ValueTransformer } from 'typeorm';\nimport { UserModule } from './user.module';\n\nexport class PasswordTransformer implements ValueTransformer {\n  from(value: string) {\n    return value;\n  }\n\n  to(value: string) {\n    return crypto.createHmac('sha256', value).digest('hex');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterPayload.html":{"url":"classes/RegisterPayload.html","title":"class - RegisterPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/register.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, example: 'test@test.com'})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/register.payload.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/register.payload.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/register.payload.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()@MinLength(5)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/register.payload.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, enum: UserRole, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/register.payload.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger';\nimport {IsEmail, IsNotEmpty, MinLength} from 'class-validator';\nimport {UserRole} from '../user/user-role';\n\nexport class RegisterPayload {\n  @ApiProperty({required: true, example: 'test@test.com'})\n  @IsEmail()\n  email!: string;\n\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  firstName!: string;\n\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  lastName!: string;\n\n  @ApiProperty({required: false, enum: UserRole, default: UserRole.NONE})\n  role?: string;\n\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  @MinLength(5)\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestArticle.html":{"url":"classes/RequestArticle.html","title":"class - RequestArticle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestArticle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/requestArticle.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articleCount\n                            \n                            \n                                articleDone\n                            \n                            \n                                articleId\n                            \n                            \n                                id\n                            \n                            \n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articleCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articleDone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articleId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, Entity, ManyToOne, PrimaryGeneratedColumn} from 'typeorm';\nimport {RequestEntity} from './request.entity';\nimport {ApiProperty} from '@nestjs/swagger';\n\n@Entity({\n  name: 'requestArticle',\n})\nexport class RequestArticle {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({required: true})\n  @Column()\n  articleId!: number;\n\n  @ApiProperty({required: true})\n  @Column()\n  articleCount!: number;\n\n  @ApiProperty({required: true})\n  @Column({default: false})\n  articleDone!: boolean;\n\n  @ManyToOne(\n    type => RequestEntity,\n    request => request.articles,\n  )\n  request!: RequestEntity;\n}\n\nexport class RequestFillableFields {\n  requester!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestArticleStatusDto.html":{"url":"classes/RequestArticleStatusDto.html","title":"class - RequestArticleStatusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestArticleStatusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/dto/shopping-list-form.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articleDone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articleDone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/dto/shopping-list-form.dto.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ShoppingListStatus } from '../shopping-list-status';\n\nexport class ShoppingListFormDto {\n  @ApiProperty({\n    required: true,\n    description: 'List of request IDs',\n    type: [Number],\n  })\n  readonly requests!: number[];\n\n  @ApiProperty({\n    required: false,\n    enum: ShoppingListStatus,\n    default: ShoppingListStatus.ACTIVE,\n  })\n  status!: string;\n}\n\nexport class RequestArticleStatusDto {\n  @ApiProperty({\n    required: true,\n  })\n  articleDone!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RequestController.html":{"url":"controllers/RequestController.html","title":"controller - RequestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RequestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/request.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                request\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getSingleRequest\n                            \n                            \n                                    Async\n                                insertRequestWithArticles\n                            \n                            \n                                    Async\n                                markArticleAsDone\n                            \n                            \n                                    Async\n                                updateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(onlyMine: string, zipCode: string, user: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Successful', type: undefined})@ApiQuery({name: 'onlyMine', required: false, description: 'if \"true\", only the requesting user requests will be replied.'})@ApiQuery({name: 'zipCode', required: false, description: 'if set, only requests within the same zip code will be replied'})\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onlyMine\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    zipCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSingleRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSingleRequest(requestId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':requestId')@ApiOkResponse({description: 'Successful', type: RequestEntity})@ApiBadRequestResponse({description: 'Bad request'})@ApiNotFoundResponse({description: 'Request not found'})\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertRequestWithArticles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertRequestWithArticles(createRequestDto: RequestFormDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({description: 'Add a complete request including articles.', type: RequestEntity})@Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRequestDto\n                                    \n                                                RequestFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            markArticleAsDone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markArticleAsDone(requestId: number, articleId: number, articleStatus: RequestArticleStatusDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':requestId/:articleId')@ApiOkResponse({description: 'Successful', type: RequestEntity})@ApiBadRequestResponse({description: 'Bad request'})@ApiNotFoundResponse({description: 'Request not found'})\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleStatus\n                                    \n                                                RequestArticleStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRequest(requestId: number, requestFormDto: RequestFormDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':requestId')@ApiOkResponse({description: 'Successful', type: RequestEntity})@ApiBadRequestResponse({description: 'Bad request'})@ApiNotFoundResponse({description: 'Request not found'})\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestFormDto\n                                    \n                                                RequestFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, Get, Logger, NotFoundException, Param, Post, Put, Query, UseGuards} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiQuery,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport {RequestService} from './request.service';\nimport {RequestEntity} from './request.entity';\nimport {RequestFormDto} from './dto/request-form.dto';\nimport {ReqUser} from '../common/decorators/user.decorator';\nimport {JwtAuthGuard} from '../common/guards/jwt-guard';\nimport {RequestArticleStatusDto} from '../shoppingList/dto/shopping-list-form.dto';\nimport {UserID} from '../user/user.entity';\nimport {UsersService} from '../user/user.service';\n\n@ApiBearerAuth()\n@ApiTags('Request')\n@UseGuards(JwtAuthGuard)\n@ApiUnauthorizedResponse({description: 'Unauthorized'})\n@Controller('request')\nexport class RequestController {\n  static LOGGER = new Logger('Request', true);\n\n  constructor(private readonly requestService: RequestService, private readonly userService: UsersService) {\n  }\n\n  @Get()\n  @ApiOkResponse({description: 'Successful', type: [RequestEntity]})\n  @ApiQuery({\n    name: 'onlyMine',\n    required: false,\n    description:\n      'if \"true\", only the requesting user requests will be replied.',\n  })\n  @ApiQuery({\n    name: 'zipCode',\n    required: false,\n    description:\n      'if set, only requests within the same zip code will be replied',\n  })\n  async getAll(\n    @Query('onlyMine') onlyMine: string,\n    @Query('zipCode') zipCode: string,\n    @ReqUser() user: any,\n  ): Promise {\n    const requests = await this.requestService.getAll(user, onlyMine, zipCode);\n    if (onlyMine !== 'true')\n      requests.map(async (r) => {\n        r.requester = await this.userService.get(r.requesterId);\n      });\n    return requests;\n  }\n\n  @ApiCreatedResponse({\n    description: 'Add a complete request including articles.',\n    type: RequestEntity,\n  })\n  @Post()\n  async insertRequestWithArticles(\n    @Body() createRequestDto: RequestFormDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const entity = await this.requestService.create(createRequestDto, user);\n    entity.requester = await this.userService.get(entity.requesterId);\n    return entity;\n  }\n\n  @Get(':requestId')\n  @ApiOkResponse({description: 'Successful', type: RequestEntity})\n  @ApiBadRequestResponse({description: 'Bad request'})\n  @ApiNotFoundResponse({description: 'Request not found'})\n  async getSingleRequest(\n    @Param('requestId') requestId: number,\n  ): Promise {\n    const entity = await this.requestService.get(requestId);\n    if (!entity) {\n      throw new NotFoundException('This request does not exist');\n    }\n    entity.requester = await this.userService.get(entity.requesterId);\n    return entity;\n  }\n\n  @Put(':requestId')\n  @ApiOkResponse({description: 'Successful', type: RequestEntity})\n  @ApiBadRequestResponse({description: 'Bad request'})\n  @ApiNotFoundResponse({description: 'Request not found'})\n  async updateRequest(\n    @Param('requestId') requestId: number,\n    @Body() requestFormDto: RequestFormDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const entity = await this.requestService.update(requestId, requestFormDto);\n    entity.requester = await this.userService.get(entity.requesterId);\n    return entity;\n  }\n\n  @Put(':requestId/:articleId')\n  @ApiOkResponse({description: 'Successful', type: RequestEntity})\n  @ApiBadRequestResponse({description: 'Bad request'})\n  @ApiNotFoundResponse({description: 'Request not found'})\n  async markArticleAsDone(\n    @Param('requestId') requestId: number,\n    @Param('articleId') articleId: number,\n    @Body() articleStatus: RequestArticleStatusDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const entity = await this.requestService.updateRequestArticle(requestId, articleId, articleStatus);\n    entity.requester = await this.userService.get(entity.requesterId);\n    return entity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestEntity.html":{"url":"classes/RequestEntity.html","title":"class - RequestEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/request.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AddressModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                additionalRequest\n                            \n                            \n                                articles\n                            \n                            \n                                created_at\n                            \n                            \n                                    Optional\n                                deliveryComment\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    Optional\n                                priority\n                            \n                            \n                                requester\n                            \n                            \n                                requesterId\n                            \n                            \n                                status\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                number\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            additionalRequest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestArticle[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: undefined})@OneToMany(undefined, undefined, {cascade: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()@CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deliveryComment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'integer'})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            priority\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({name: 'priority', type: 'enum', default: 'low', enum: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requester\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: User})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requesterId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'integer'})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({type: 'enum', enum: RequestStatus, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:24\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, CreateDateColumn, Entity, OneToMany, PrimaryGeneratedColumn} from 'typeorm';\nimport {RequestArticle} from './requestArticle.entity';\nimport {ApiProperty, ApiPropertyOptional} from '@nestjs/swagger';\nimport {RequestStatus} from './request-status';\nimport {AddressModel} from '../main/models/address.model';\nimport {User} from '../user/user.entity';\nimport {Exclude} from 'class-transformer';\n\n@Entity({\n  name: 'request',\n})\nexport class RequestEntity extends AddressModel {\n  @ApiProperty({type: 'integer'})\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty()\n  @Column()\n  @CreateDateColumn()\n  created_at!: Date;\n\n  @ApiProperty({type: 'integer'})\n  @Column()\n  requesterId!: number;\n\n  @ApiProperty()\n  @Column({\n    name: 'priority',\n    type: 'enum',\n    default: 'low',\n    enum: ['low', 'medium', 'high'],\n  })\n  priority?: string;\n\n  @ApiProperty()\n  @Column({nullable: true})\n  additionalRequest?: string;\n\n  @ApiProperty()\n  @Column({nullable: true})\n  deliveryComment?: string;\n\n  @ApiProperty()\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  phoneNumber?: string;\n\n  @ApiProperty()\n  @Column({\n    type: 'enum',\n    enum: RequestStatus,\n    default: RequestStatus.NEW,\n  })\n  status!: string;\n\n  @ApiProperty({type: [RequestArticle]})\n  @OneToMany(\n    type => RequestArticle,\n    requestArticle => requestArticle.request,\n    {cascade: true},\n  )\n  articles!: RequestArticle[];\n\n  @ApiPropertyOptional({type: User})\n  @Exclude()\n  requester!: User;\n}\n\nexport class RequestFillableFields {\n  requesterId!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestFillableFields.html":{"url":"classes/RequestFillableFields.html","title":"class - RequestFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/request.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                requesterId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requesterId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.entity.ts:72\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, CreateDateColumn, Entity, OneToMany, PrimaryGeneratedColumn} from 'typeorm';\nimport {RequestArticle} from './requestArticle.entity';\nimport {ApiProperty, ApiPropertyOptional} from '@nestjs/swagger';\nimport {RequestStatus} from './request-status';\nimport {AddressModel} from '../main/models/address.model';\nimport {User} from '../user/user.entity';\nimport {Exclude} from 'class-transformer';\n\n@Entity({\n  name: 'request',\n})\nexport class RequestEntity extends AddressModel {\n  @ApiProperty({type: 'integer'})\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty()\n  @Column()\n  @CreateDateColumn()\n  created_at!: Date;\n\n  @ApiProperty({type: 'integer'})\n  @Column()\n  requesterId!: number;\n\n  @ApiProperty()\n  @Column({\n    name: 'priority',\n    type: 'enum',\n    default: 'low',\n    enum: ['low', 'medium', 'high'],\n  })\n  priority?: string;\n\n  @ApiProperty()\n  @Column({nullable: true})\n  additionalRequest?: string;\n\n  @ApiProperty()\n  @Column({nullable: true})\n  deliveryComment?: string;\n\n  @ApiProperty()\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  phoneNumber?: string;\n\n  @ApiProperty()\n  @Column({\n    type: 'enum',\n    enum: RequestStatus,\n    default: RequestStatus.NEW,\n  })\n  status!: string;\n\n  @ApiProperty({type: [RequestArticle]})\n  @OneToMany(\n    type => RequestArticle,\n    requestArticle => requestArticle.request,\n    {cascade: true},\n  )\n  articles!: RequestArticle[];\n\n  @ApiPropertyOptional({type: User})\n  @Exclude()\n  requester!: User;\n}\n\nexport class RequestFillableFields {\n  requesterId!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestFillableFields-1.html":{"url":"classes/RequestFillableFields-1.html","title":"class - RequestFillableFields-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/requestArticle.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                requester\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requester\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/requestArticle.entity.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, Entity, ManyToOne, PrimaryGeneratedColumn} from 'typeorm';\nimport {RequestEntity} from './request.entity';\nimport {ApiProperty} from '@nestjs/swagger';\n\n@Entity({\n  name: 'requestArticle',\n})\nexport class RequestArticle {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({required: true})\n  @Column()\n  articleId!: number;\n\n  @ApiProperty({required: true})\n  @Column()\n  articleCount!: number;\n\n  @ApiProperty({required: true})\n  @Column({default: false})\n  articleDone!: boolean;\n\n  @ManyToOne(\n    type => RequestEntity,\n    request => request.articles,\n  )\n  request!: RequestEntity;\n}\n\nexport class RequestFillableFields {\n  requester!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestFormDto.html":{"url":"classes/RequestFormDto.html","title":"class - RequestFormDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestFormDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/dto/request-form.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AddressModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                additionalRequest\n                            \n                            \n                                    Readonly\n                                articles\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deliveryComment\n                            \n                            \n                                    Readonly\n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                number\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            additionalRequest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            articles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CreateRequestArticleDto[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'List of articles', type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deliveryComment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/dto/request-form.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:24\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger';\nimport {AddressModel} from '../../main/models/address.model';\n\nexport class CreateRequestArticleDto {\n  @ApiProperty({\n    required: true,\n    description: 'Article ID received from the article list',\n    type: 'integer',\n  })\n  readonly articleId!: number;\n\n  @ApiProperty({\n    required: true,\n    description: 'Number of items',\n    type: 'integer',\n  })\n  readonly articleCount!: number;\n}\n\nexport class RequestFormDto extends AddressModel {\n  @ApiProperty({\n    required: true,\n    description: 'List of articles',\n    type: [CreateRequestArticleDto],\n  })\n  readonly articles!: CreateRequestArticleDto[];\n\n  @ApiProperty()\n  readonly additionalRequest?: string;\n  @ApiProperty()\n  readonly deliveryComment?: string;\n  @ApiProperty()\n  readonly phoneNumber?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RequestModule.html":{"url":"modules/RequestModule.html","title":"module - RequestModule","body":"\n                   \n\n\n\n\n    Modules\n    RequestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RequestModule\n\n\n\ncluster_RequestModule_imports\n\n\n\ncluster_RequestModule_exports\n\n\n\ncluster_RequestModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nRequestModule\n\nRequestModule\n\nRequestModule -->\n\nUserModule->RequestModule\n\n\n\n\n\nRequestService \n\nRequestService \n\nRequestService  -->\n\nRequestModule->RequestService \n\n\n\n\n\nRequestService\n\nRequestService\n\nRequestModule -->\n\nRequestService->RequestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/request/request.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RequestService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RequestController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RequestService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {TypeOrmModule} from '@nestjs/typeorm';\nimport {RequestService} from './request.service';\nimport {RequestEntity} from './request.entity';\nimport {RequestController} from './request.controller';\nimport {UserModule} from '../user/user.module';\n\n@Module({\n  imports: [UserModule, TypeOrmModule.forFeature([RequestEntity])],\n  exports: [RequestService],\n  controllers: [RequestController],\n  providers: [RequestService],\n})\nexport class RequestModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestService.html":{"url":"injectables/RequestService.html","title":"injectable - RequestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/request.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                LOGGER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Private\n                                    Async\n                                findRequest\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Private\n                                populateRequest\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateRequestArticle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(requestRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/request/request.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRequestDto: RequestFormDto, user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRequestDto\n                                    \n                                                RequestFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findRequest(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(user: any, onlyMine: string, zipCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    onlyMine\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    zipCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            populateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populateRequest(request: RequestEntity, createRequestDto: RequestFormDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createRequestDto\n                                    \n                                                RequestFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(requestId: number, requestEntity: RequestFormDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestEntity\n                                    \n                                                RequestFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateRequestArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRequestArticle(requestId: number, articleId: number, articleStatusDto: RequestArticleStatusDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleStatusDto\n                                    \n                                                RequestArticleStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            LOGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('Request', true)\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/request/request.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {BadRequestException, Injectable, Logger, NotFoundException} from '@nestjs/common';\nimport {InjectRepository} from '@nestjs/typeorm';\nimport {Repository} from 'typeorm';\n\nimport {Roles} from '../common/decorators/roles.decorator';\nimport {RequestEntity} from './request.entity';\nimport {RequestFormDto} from './dto/request-form.dto';\nimport {RequestArticle} from './requestArticle.entity';\nimport {RequestArticleStatusDto} from '../shoppingList/dto/shopping-list-form.dto';\n\n@Injectable()\n@Roles('user')\nexport class RequestService {\n  static LOGGER = new Logger('Request', true);\n\n  constructor(\n    @InjectRepository(RequestEntity)\n    private readonly requestRepository: Repository,\n  ) {\n  }\n\n  async get(id: number) {\n    return this.requestRepository.findOne(id, {relations: ['articles']});\n  }\n\n  async create(createRequestDto: RequestFormDto, user: any) {\n    const request = new RequestEntity();\n    this.populateRequest(request, createRequestDto);\n    request.requesterId = user.userId;\n\n    return this.requestRepository.save(request);\n  }\n\n  private populateRequest(request: RequestEntity, createRequestDto: RequestFormDto) {\n    request.articles = [];\n    if (createRequestDto.articles) {\n      createRequestDto.articles.forEach(art => {\n        const newArticle = new RequestArticle();\n        newArticle.articleId = art.articleId;\n        newArticle.articleCount = art.articleCount;\n        newArticle.articleDone = false;\n        request.articles.push(newArticle);\n      });\n    }\n    request.additionalRequest = createRequestDto.additionalRequest;\n    request.phoneNumber = createRequestDto.phoneNumber;\n    request.deliveryComment = createRequestDto.deliveryComment;\n    request.city = createRequestDto.city;\n    request.street = createRequestDto.street;\n    request.number = createRequestDto.number;\n    request.zipCode = createRequestDto.zipCode;\n  }\n\n  async getAll(user: any, onlyMine: string, zipCode: string) {\n    const conditions: any = {};\n    if (onlyMine === 'true') {\n      conditions.requester = user.userId;\n    }\n    if (zipCode) {\n      conditions.zipCode = zipCode;\n    }\n    return await this.requestRepository.find({\n      where: conditions, relations: ['articles'],\n    });\n  }\n\n  async updateRequestArticle(requestId: number, articleId: number, articleStatusDto: RequestArticleStatusDto) {\n    const request: RequestEntity = await this.findRequest(requestId);\n    const article = request.articles.find((v) => v.articleId === Number(articleId));\n    if (!article) {\n      throw new BadRequestException('This article does not exist in the request');\n    }\n    article.articleDone = articleStatusDto.articleDone;\n    return await this.requestRepository.save(request);\n  }\n\n  async update(requestId: number, requestEntity: RequestFormDto) {\n    const request: RequestEntity = await this.findRequest(requestId);\n    this.populateRequest(request, requestEntity);\n\n    return await this.requestRepository.save(request);\n  }\n\n  private async findRequest(id: number) {\n    const request: RequestEntity | undefined = await this.get(id);\n    if (!request) {\n      throw new NotFoundException('This request does not exist');\n    }\n    return request;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseTokenDto.html":{"url":"classes/ResponseTokenDto.html","title":"class - ResponseTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/response-token.dt.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                expiresIn\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'jwt token'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/response-token.dt.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'seconds until expiration', type: 'integer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/response-token.dt.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'user id', type: 'integer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/response-token.dt.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ResponseTokenDto {\n  @ApiProperty({\n    description: 'seconds until expiration',\n    type: 'integer',\n  })\n  expiresIn!: number;\n\n  @ApiProperty({\n    description: 'jwt token',\n  })\n  accessToken!: string;\n\n  @ApiProperty({\n    description: 'user id',\n    type: 'integer',\n  })\n  id!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingList.html":{"url":"classes/ShoppingList.html","title":"class - ShoppingList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                id\n                            \n                            \n                                owner\n                            \n                            \n                                requests\n                            \n                            \n                                status\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()@CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ShoppingListRequest[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: undefined})@OneToMany(undefined, undefined, {cascade: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({type: 'enum', enum: ShoppingListStatus, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()@UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, CreateDateColumn, Entity, OneToMany, PrimaryGeneratedColumn, UpdateDateColumn} from 'typeorm';\nimport {ShoppingListRequest} from './shopping-list-request.entity';\nimport {ApiProperty} from '@nestjs/swagger';\nimport {ShoppingListStatus} from './shopping-list-status';\n\n@Entity({\n  name: 'shoppingList',\n})\nexport class ShoppingList {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty()\n  @Column()\n  owner!: number;\n\n  @ApiProperty()\n  @Column()\n  @CreateDateColumn()\n  created_at!: Date;\n\n  @ApiProperty()\n  @Column()\n  @UpdateDateColumn()\n  updated_at!: Date;\n\n  @ApiProperty()\n  @Column({\n    type: 'enum',\n    enum: ShoppingListStatus,\n    default: ShoppingListStatus.ACTIVE,\n  })\n  status!: string;\n\n  @ApiProperty({type: [ShoppingListRequest]})\n  @OneToMany(\n    type => ShoppingListRequest,\n    shoppingListRequest => shoppingListRequest.shoppingList,\n    {cascade: true},\n  )\n  requests!: ShoppingListRequest[];\n}\n\nexport class ShoppingListFillableFields {\n  owner!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ShoppingListController.html":{"url":"controllers/ShoppingListController.html","title":"controller - ShoppingListController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ShoppingListController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                shopping-list\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRequestToList\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                    Async\n                                findShoppingList\n                            \n                            \n                                    Async\n                                getUserLists\n                            \n                            \n                                    Async\n                                insertNewShoppingList\n                            \n                            \n                                    Async\n                                updateShoppingList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addRequestToList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addRequestToList(shoppingListId: number, requestId: number, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':shoppingListId/:requestId')@ApiOkResponse({description: 'Successful', type: ShoppingList})@ApiBadRequestResponse({description: 'Bad request'})@ApiForbiddenResponse({description: 'This is not your shopping list'})@ApiNotFoundResponse({description: 'Shopping list not found'})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shoppingListId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({description: 'Successful', type: ShoppingList})@ApiNotFoundResponse({description: 'Shopping list not found'})@ApiForbiddenResponse({description: 'This is not your shopping list'})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findShoppingList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findShoppingList(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserLists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserLists(user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Successful', type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertNewShoppingList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertNewShoppingList(createRequestDto: ShoppingListFormDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({description: 'Added a new shopping list', type: ShoppingList})@ApiBadRequestResponse({description: 'Bad request'})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRequestDto\n                                    \n                                                ShoppingListFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateShoppingList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateShoppingList(id: number, updateShoppingList: ShoppingListFormDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOkResponse({description: 'Successful', type: ShoppingList})@ApiBadRequestResponse({description: 'Bad request'})@ApiNotFoundResponse({description: 'Shopping list not found'})@ApiForbiddenResponse({description: 'This is not your shopping list'})\n                \n            \n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateShoppingList\n                                    \n                                                ShoppingListFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  ForbiddenException,\n  Get,\n  Logger,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiForbiddenResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport {ShoppingListService} from './shopping-list.service';\nimport {ShoppingList} from './shopping-list.entity';\nimport {ShoppingListFormDto} from './dto/shopping-list-form.dto';\nimport {ReqUser} from '../common/decorators/user.decorator';\nimport {JwtAuthGuard} from '../common/guards/jwt-guard';\nimport {UserID} from '../user/user.entity';\nimport {RequestService} from '../request/request.service';\n\n@ApiBearerAuth()\n@ApiTags('Shopping List')\n@ApiUnauthorizedResponse({description: 'Unauthorized'})\n@UseGuards(JwtAuthGuard)\n@Controller('shopping-list')\nexport class ShoppingListController {\n  static LOGGER = new Logger('ShoppingList', true);\n\n  constructor(private readonly shoppingListService: ShoppingListService,\n              private readonly requestService: RequestService,\n  ) {\n  }\n\n  @Get()\n  @ApiOkResponse({description: 'Successful', type: [ShoppingList]})\n  async getUserLists(@ReqUser() user: UserID): Promise {\n    return await this.shoppingListService.getAllByUser(user.userId);\n  }\n\n  @Get(':id')\n  @ApiOkResponse({description: 'Successful', type: ShoppingList})\n  @ApiNotFoundResponse({description: 'Shopping list not found'})\n  @ApiForbiddenResponse({description: 'This is not your shopping list'})\n  async findOne(\n    @Param('id') id: number,\n    @ReqUser() user: UserID,\n  ): Promise {\n    return await this.findShoppingList(id, user.userId);\n  }\n\n  @Post()\n  @ApiCreatedResponse({description: 'Added a new shopping list', type: ShoppingList})\n  @ApiBadRequestResponse({description: 'Bad request'})\n  async insertNewShoppingList(\n    @Body() createRequestDto: ShoppingListFormDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    return this.shoppingListService.create(createRequestDto, user);\n  }\n\n  @Put(':id')\n  @ApiOkResponse({description: 'Successful', type: ShoppingList})\n  @ApiBadRequestResponse({description: 'Bad request'})\n  @ApiNotFoundResponse({description: 'Shopping list not found'})\n  @ApiForbiddenResponse({description: 'This is not your shopping list'})\n  async updateShoppingList(\n    @Param('id') id: number,\n    @Body() updateShoppingList: ShoppingListFormDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const shoppingList = await this.findShoppingList(id, user.userId);\n    return this.shoppingListService.update(updateShoppingList, shoppingList);\n  }\n\n  @Put(':shoppingListId/:requestId')\n  @ApiOkResponse({description: 'Successful', type: ShoppingList})\n  @ApiBadRequestResponse({description: 'Bad request'})\n  @ApiForbiddenResponse({description: 'This is not your shopping list'})\n  @ApiNotFoundResponse({description: 'Shopping list not found'})\n  async addRequestToList(\n    @Param('shoppingListId') shoppingListId: number,\n    @Param('requestId') requestId: number,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const shoppingList = await this.findShoppingList(shoppingListId, user.userId);\n    const request = await this.requestService.get(requestId);\n    ShoppingListController.LOGGER.log(request);\n    if (!request) {\n      throw new BadRequestException('This request does not exist');\n    }\n    return this.shoppingListService.addRequestToList(request.id, shoppingList);\n  }\n\n  private async findShoppingList(id: number, userId: number) {\n    const shoppingList = await this.shoppingListService.get(id);\n    if (shoppingList.owner !== userId) {\n      throw new ForbiddenException('You can only see or edit your own shopping lists!');\n    }\n    return shoppingList;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingListFillableFields.html":{"url":"classes/ShoppingListFillableFields.html","title":"class - ShoppingListFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingListFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list.entity.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, CreateDateColumn, Entity, OneToMany, PrimaryGeneratedColumn, UpdateDateColumn} from 'typeorm';\nimport {ShoppingListRequest} from './shopping-list-request.entity';\nimport {ApiProperty} from '@nestjs/swagger';\nimport {ShoppingListStatus} from './shopping-list-status';\n\n@Entity({\n  name: 'shoppingList',\n})\nexport class ShoppingList {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty()\n  @Column()\n  owner!: number;\n\n  @ApiProperty()\n  @Column()\n  @CreateDateColumn()\n  created_at!: Date;\n\n  @ApiProperty()\n  @Column()\n  @UpdateDateColumn()\n  updated_at!: Date;\n\n  @ApiProperty()\n  @Column({\n    type: 'enum',\n    enum: ShoppingListStatus,\n    default: ShoppingListStatus.ACTIVE,\n  })\n  status!: string;\n\n  @ApiProperty({type: [ShoppingListRequest]})\n  @OneToMany(\n    type => ShoppingListRequest,\n    shoppingListRequest => shoppingListRequest.shoppingList,\n    {cascade: true},\n  )\n  requests!: ShoppingListRequest[];\n}\n\nexport class ShoppingListFillableFields {\n  owner!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingListFormDto.html":{"url":"classes/ShoppingListFormDto.html","title":"class - ShoppingListFormDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingListFormDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/dto/shopping-list-form.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                requests\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            requests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, description: 'List of request IDs', type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/dto/shopping-list-form.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, enum: ShoppingListStatus, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/dto/shopping-list-form.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ShoppingListStatus } from '../shopping-list-status';\n\nexport class ShoppingListFormDto {\n  @ApiProperty({\n    required: true,\n    description: 'List of request IDs',\n    type: [Number],\n  })\n  readonly requests!: number[];\n\n  @ApiProperty({\n    required: false,\n    enum: ShoppingListStatus,\n    default: ShoppingListStatus.ACTIVE,\n  })\n  status!: string;\n}\n\nexport class RequestArticleStatusDto {\n  @ApiProperty({\n    required: true,\n  })\n  articleDone!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShoppingListModule.html":{"url":"modules/ShoppingListModule.html","title":"module - ShoppingListModule","body":"\n                   \n\n\n\n\n    Modules\n    ShoppingListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShoppingListModule\n\n\n\ncluster_ShoppingListModule_imports\n\n\n\ncluster_ShoppingListModule_exports\n\n\n\ncluster_ShoppingListModule_providers\n\n\n\n\nRequestModule\n\nRequestModule\n\n\n\nShoppingListModule\n\nShoppingListModule\n\nShoppingListModule -->\n\nRequestModule->ShoppingListModule\n\n\n\n\n\nShoppingListService \n\nShoppingListService \n\nShoppingListService  -->\n\nShoppingListModule->ShoppingListService \n\n\n\n\n\nShoppingListService\n\nShoppingListService\n\nShoppingListModule -->\n\nShoppingListService->ShoppingListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ShoppingListService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ShoppingListController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RequestModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ShoppingListService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {TypeOrmModule} from '@nestjs/typeorm';\nimport {ShoppingListService} from './shopping-list.service';\nimport {ShoppingListController} from './shopping-list.controller';\nimport {ShoppingList} from './shopping-list.entity';\nimport {RequestModule} from '../request/request.module';\n\n@Module({\n  imports: [RequestModule, TypeOrmModule.forFeature([ShoppingList])],\n  exports: [ShoppingListService],\n  controllers: [ShoppingListController],\n  providers: [ShoppingListService],\n})\nexport class ShoppingListModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingListRequest.html":{"url":"classes/ShoppingListRequest.html","title":"class - ShoppingListRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingListRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list-request.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                requestId\n                            \n                            \n                                shoppingList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list-request.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list-request.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shoppingList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ShoppingList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/shoppingList/shopping-list-request.entity.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, Entity, ManyToOne, PrimaryGeneratedColumn} from 'typeorm';\nimport {ShoppingList} from './shopping-list.entity';\nimport {ApiProperty} from '@nestjs/swagger';\n\n@Entity({\n  name: 'shoppingListRequest',\n})\nexport class ShoppingListRequest {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({required: true})\n  @Column()\n  requestId!: number;\n\n  @ManyToOne(\n    type => ShoppingList,\n    shoppingList => shoppingList.requests,\n  )\n  shoppingList!: ShoppingList;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingListService.html":{"url":"injectables/ShoppingListService.html","title":"injectable - ShoppingListService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shoppingList/shopping-list.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRequestToList\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAllByUser\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingListRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/shoppingList/shopping-list.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingListRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addRequestToList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addRequestToList(requestId: number, shoppingList: ShoppingList)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shoppingList\n                                    \n                                                ShoppingList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRequestDto: ShoppingListFormDto, user: UserID)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRequestDto\n                                    \n                                                ShoppingListFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllByUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllByUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(form: ShoppingListFormDto, shoppingList: ShoppingList)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/shoppingList/shopping-list.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                ShoppingListFormDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shoppingList\n                                    \n                                                ShoppingList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable, NotFoundException} from '@nestjs/common';\nimport {InjectRepository} from '@nestjs/typeorm';\nimport {Repository} from 'typeorm';\n\nimport {Roles} from '../common/decorators/roles.decorator';\nimport {ShoppingList} from './shopping-list.entity';\nimport {ShoppingListFormDto} from './dto/shopping-list-form.dto';\nimport {ShoppingListStatus} from './shopping-list-status';\nimport {ShoppingListRequest} from './shopping-list-request.entity';\nimport {UserID} from '../user/user.entity';\n\n@Injectable()\n@Roles('helper')\nexport class ShoppingListService {\n  constructor(\n    @InjectRepository(ShoppingList)\n    private readonly shoppingListRepository: Repository,\n  ) {\n  }\n\n  async get(id: number) {\n    const shoppingList = await this.shoppingListRepository.findOne(id, {relations: ['requests']});\n    if (!shoppingList) {\n      throw new NotFoundException('Shopping List not found');\n    }\n    return shoppingList;\n  }\n\n  async create(createRequestDto: ShoppingListFormDto, user: UserID) {\n    const shoppingList = new ShoppingList();\n    shoppingList.requests = [];\n    if (createRequestDto.requests) {\n      createRequestDto.requests.forEach(reqId => {\n        const newRequest = new ShoppingListRequest();\n        newRequest.requestId = reqId;\n        shoppingList.requests.push(newRequest);\n      });\n    }\n    shoppingList.owner = user.userId;\n    shoppingList.status = ShoppingListStatus.ACTIVE;\n\n    return this.shoppingListRepository.save(shoppingList);\n  }\n\n  async getAllByUser(userId: number) {\n    return await this.shoppingListRepository.find({\n      where: {owner: userId},\n      relations: ['requests'],\n    });\n  }\n\n  async update(form: ShoppingListFormDto, shoppingList: ShoppingList) {\n    shoppingList.status = form.status;\n    if (form.requests) {\n      form.requests.forEach(reqId => {\n        const newRequest = new ShoppingListRequest();\n        newRequest.requestId = reqId;\n        shoppingList.requests.push(newRequest);\n      });\n    }\n    return await this.shoppingListRepository.save(shoppingList);\n  }\n\n  async addRequestToList(requestId: number, shoppingList: ShoppingList) {\n    const newRequest = new ShoppingListRequest();\n    newRequest.id = requestId;\n    shoppingList.requests.push(newRequest);\n    return await this.shoppingListRepository.save(shoppingList);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/update-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AddressModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                role\n                            \n                            \n                                    Optional\n                                telephone\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                number\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, enum: undefined})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            telephone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/update-user.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:24\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty, ApiPropertyOptional} from '@nestjs/swagger';\nimport {IsNotEmpty} from 'class-validator';\nimport {AddressModel} from '../../main/models/address.model';\n\nexport class UpdateUserDto extends AddressModel {\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  firstName!: string;\n\n  @ApiProperty({required: true})\n  @IsNotEmpty()\n  lastName!: string;\n\n  @ApiProperty({required: true, enum: ['helper', 'seeker']})\n  @IsNotEmpty()\n  role!: string;\n\n  @ApiPropertyOptional()\n  telephone?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AddressModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                    Optional\n                                telephone\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                number\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'password', length: 255, transformer: undefined})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Column({type: 'enum', enum: UserRole, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            telephone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({length: 10, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AddressModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AddressModel:24\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Exclude} from 'class-transformer';\nimport {Column, Entity, PrimaryGeneratedColumn} from 'typeorm';\n\nimport {PasswordTransformer} from './password.transformer';\nimport {UserRole} from './user-role';\nimport {ApiProperty} from '@nestjs/swagger';\nimport {AddressModel} from '../main/models/address.model';\n\n@Entity({\n  name: 'users',\n})\nexport class User extends AddressModel {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  firstName!: string;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  lastName!: string;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  email!: string;\n\n  @ApiProperty({required: true})\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.NONE,\n  })\n  role!: string;\n\n  @ApiProperty({required: false})\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  telephone?: string;\n\n  @Column({\n    name: 'password',\n    length: 255,\n    transformer: new PasswordTransformer(),\n  })\n  @Exclude()\n  password!: string;\n}\n\nexport class UserFillableFields {\n  email!: string;\n  firstName!: string;\n  lastName!: string;\n  role?: string;\n  telephone?: string;\n  address?: string;\n  password!: string;\n}\n\nexport class UserID {\n  userId!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({description: 'Successful', type: User})@ApiNotFoundResponse({description: 'User not found'})@ApiBadRequestResponse({description: 'Bad Request'})@ApiParam({name: 'id', description: 'user id', type: 'integer'})\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Successful', type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateUserDto: UpdateUserDto, user: UserID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOkResponse({description: 'Successful', type: User})@ApiBadRequestResponse({description: 'Bad Request'})@ApiNotFoundResponse({description: 'User not found'})@ApiForbiddenResponse({description: 'Forbidden'})@ApiParam({name: 'id', description: 'user id', type: 'integer'})\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, ForbiddenException, Get, Logger, Param, Put, UseGuards} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiForbiddenResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger';\nimport {ReqUser} from '../common/decorators/user.decorator';\nimport {User, UserID} from './user.entity';\nimport {UsersService} from './user.service';\nimport {UpdateUserDto} from './dto/update-user.dto';\nimport {JwtAuthGuard} from '../common/guards/jwt-guard';\n\n@ApiBearerAuth()\n@Controller('user')\n@UseGuards(JwtAuthGuard)\n@ApiTags('User')\nexport class UserController {\n  static LOGGER = new Logger('User', true);\n\n  constructor(private readonly userService: UsersService) {\n  }\n\n  @Get()\n  @ApiOkResponse({description: 'Successful', type: [User]})\n  async getAll(): Promise {\n    return await this.userService.getAll();\n  }\n\n  @Get(':id')\n  @ApiOkResponse({description: 'Successful', type: User})\n  @ApiNotFoundResponse({description: 'User not found'})\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  @ApiParam({\n    name: 'id',\n    description: 'user id',\n    type: 'integer',\n  })\n  async findOne(@Param('id') id: number): Promise {\n    return await this.userService.get(id);\n  }\n\n  @Put(':id')\n  @ApiOkResponse({description: 'Successful', type: User})\n  @ApiBadRequestResponse({description: 'Bad Request'})\n  @ApiNotFoundResponse({description: 'User not found'})\n  @ApiForbiddenResponse({description: 'Forbidden'})\n  @ApiParam({\n    name: 'id',\n    description: 'user id',\n    type: 'integer',\n  })\n  async update(\n    @Param('id') id: number,\n    @Body() updateUserDto: UpdateUserDto,\n    @ReqUser() user: UserID,\n  ): Promise {\n    const userToUpdate = await this.userService.get(id);\n    if (userToUpdate.id !== user.userId) {\n      throw new ForbiddenException('You cannot edit other users!');\n    }\n    return this.userService.update(updateUserDto, userToUpdate);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserFillableFields.html":{"url":"classes/UserFillableFields.html","title":"class - UserFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Optional\n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            telephone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Exclude} from 'class-transformer';\nimport {Column, Entity, PrimaryGeneratedColumn} from 'typeorm';\n\nimport {PasswordTransformer} from './password.transformer';\nimport {UserRole} from './user-role';\nimport {ApiProperty} from '@nestjs/swagger';\nimport {AddressModel} from '../main/models/address.model';\n\n@Entity({\n  name: 'users',\n})\nexport class User extends AddressModel {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  firstName!: string;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  lastName!: string;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  email!: string;\n\n  @ApiProperty({required: true})\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.NONE,\n  })\n  role!: string;\n\n  @ApiProperty({required: false})\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  telephone?: string;\n\n  @Column({\n    name: 'password',\n    length: 255,\n    transformer: new PasswordTransformer(),\n  })\n  @Exclude()\n  password!: string;\n}\n\nexport class UserFillableFields {\n  email!: string;\n  firstName!: string;\n  lastName!: string;\n  role?: string;\n  telephone?: string;\n  address?: string;\n  password!: string;\n}\n\nexport class UserID {\n  userId!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserID.html":{"url":"classes/UserID.html","title":"class - UserID","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserID\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Exclude} from 'class-transformer';\nimport {Column, Entity, PrimaryGeneratedColumn} from 'typeorm';\n\nimport {PasswordTransformer} from './password.transformer';\nimport {UserRole} from './user-role';\nimport {ApiProperty} from '@nestjs/swagger';\nimport {AddressModel} from '../main/models/address.model';\n\n@Entity({\n  name: 'users',\n})\nexport class User extends AddressModel {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  firstName!: string;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  lastName!: string;\n\n  @ApiProperty({required: true})\n  @Column({length: 255})\n  email!: string;\n\n  @ApiProperty({required: true})\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.NONE,\n  })\n  role!: string;\n\n  @ApiProperty({required: false})\n  @Column({\n    length: 255,\n    nullable: true,\n  })\n  telephone?: string;\n\n  @Column({\n    name: 'password',\n    length: 255,\n    transformer: new PasswordTransformer(),\n  })\n  @Exclude()\n  password!: string;\n}\n\nexport class UserFillableFields {\n  email!: string;\n  firstName!: string;\n  lastName!: string;\n  role?: string;\n  telephone?: string;\n  address?: string;\n  password!: string;\n}\n\nexport class UserID {\n  userId!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUserModule\n\nUserModule\n\nUsersService  -->\n\nUserModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUserModule -->\n\nUsersService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Logger, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { User } from './user.entity';\nimport { UsersService } from './user.service';\nimport { UserController } from './user.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  exports: [UsersService],\n  controllers: [UserController],\n  providers: [UsersService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nArticlesService\n\nArticlesService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nArticlesService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/articles/articles.modules.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticlesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticlesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Article } from './article.entity';\nimport { ArticlesController } from './articles.controller';\nimport { ArticlesService } from './articles.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Article])],\n  providers: [ArticlesService],\n  controllers: [ArticlesController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getByEmail\n                            \n                            \n                                    Async\n                                getByEmailAndPass\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(payload: UserFillableFields)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                UserFillableFields\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByEmailAndPass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmailAndPass(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(editRequestDto: UpdateUserDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editRequestDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable, NotAcceptableException, NotFoundException} from '@nestjs/common';\nimport {InjectRepository} from '@nestjs/typeorm';\nimport {Repository} from 'typeorm';\n\nimport {Roles} from '../common/decorators/roles.decorator';\nimport {User, UserFillableFields} from './user.entity';\nimport {UpdateUserDto} from './dto/update-user.dto';\n\n@Injectable()\n@Roles('admin') // TODO: Add 'authenticatedUser'\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n  ) {\n  }\n\n  async get(id: number) {\n    const user = await this.userRepository.findOne(id);\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return user;\n  }\n\n  async getByEmail(email: string) {\n    return await this.userRepository.findOne({email});\n    // return await this.userRepository\n    //   .createQueryBuilder('users')\n    //   .where('users.email = :email')\n    //   .setParameter('email', email)\n    //   .getOne();\n  }\n\n  async getByEmailAndPass(email: string, password: string) {\n    // const passHash = createHmac('sha256', password).digest('hex');\n    return await this.userRepository.findOne({email, password});\n    // return await this.userRepository\n    //   .createQueryBuilder('users')\n    //   .where('users.email = :email and users.password = :password')\n    //   .setParameter('email', email)\n    //   .setParameter('password', passHash)\n    //   .getOne();\n  }\n\n  async create(payload: UserFillableFields) {\n    const checkUserExistence = await this.getByEmail(payload.email);\n\n    if (checkUserExistence) {\n      throw new NotAcceptableException(\n        'Another user with provided email already exists.',\n      );\n    }\n\n    const newUser = this.userRepository.create(payload);\n    return await this.userRepository.save(newUser);\n  }\n\n  async update(editRequestDto: UpdateUserDto, user: User) {\n    user.city = editRequestDto.city;\n    user.street = editRequestDto.street;\n    user.number = editRequestDto.number;\n    user.zipCode = editRequestDto.zipCode;\n    user.firstName = editRequestDto.firstName;\n    user.lastName = editRequestDto.lastName;\n    user.role = editRequestDto.role;\n    user.telephone = editRequestDto.telephone;\n\n    return await this.userRepository.save(user);\n  }\n\n  async getAll() {\n    return await this.userRepository.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/articles/article.entity.ts\n            \n            class\n            Article\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/articles/article.entity.ts\n            \n            class\n            ArticleFillableFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/articles/articles.controller.ts\n            \n            controller\n            ArticlesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/articles/articles.service.ts\n            \n            injectable\n            ArticlesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/articles/dto/create-article.dto.ts\n            \n            class\n            CreateArticleDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/articles/interfaces/article.interface.ts\n            \n            interface\n            Article\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/response-token.dt.ts\n            \n            class\n            ResponseTokenDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/login.payload.ts\n            \n            class\n            LoginPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/register.payload.ts\n            \n            class\n            RegisterPayload\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/call/call.controller.ts\n            \n            controller\n            CallController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/call/call.service.ts\n            \n            injectable\n            CallService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/decorators/user.decorator.ts\n            \n            interface\n            IRequestUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/common/decorators/user.decorator.ts\n            \n            variable\n            ReqUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/guards/jwt-guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/middlewares/logger.middleware.ts\n            \n            variable\n            loggerMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/modules/main/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/main/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/main/models/address.model.ts\n            \n            class\n            AddressModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/request/dto/request-form.dto.ts\n            \n            class\n            CreateRequestArticleDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/request/dto/request-form.dto.ts\n            \n            class\n            RequestFormDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/request/request.controller.ts\n            \n            controller\n            RequestController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/request/request.entity.ts\n            \n            class\n            RequestEntity\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/modules/request/request.entity.ts\n            \n            class\n            RequestFillableFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/request/request.service.ts\n            \n            injectable\n            RequestService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/request/requestArticle.entity.ts\n            \n            class\n            RequestArticle\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/request/requestArticle.entity.ts\n            \n            class\n            RequestFillableFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/dto/shopping-list-form.dto.ts\n            \n            class\n            RequestArticleStatusDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/dto/shopping-list-form.dto.ts\n            \n            class\n            ShoppingListFormDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/shopping-list-request.entity.ts\n            \n            class\n            ShoppingListRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/shopping-list.controller.ts\n            \n            controller\n            ShoppingListController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/shopping-list.entity.ts\n            \n            class\n            ShoppingList\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/shopping-list.entity.ts\n            \n            class\n            ShoppingListFillableFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/shoppingList/shopping-list.service.ts\n            \n            injectable\n            ShoppingListService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/user/password.transformer.ts\n            \n            class\n            PasswordTransformer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            UserFillableFields\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            UserID\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_CURRENT_VERSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_DESCRIPTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_ROOT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/index.ts\n            \n            variable\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @nestjs/common : ^6.10.14\n        \n            @nestjs/core : ^6.10.14\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/passport : ^6.1.1\n        \n            @nestjs/platform-express : 7.0.0\n        \n            @nestjs/swagger : ^4.1.10\n        \n            @nestjs/testing : ^6.10.14\n        \n            @nestjs/typeorm : ^6.2.0\n        \n            @types/dotenv : ^8.2.0\n        \n            @types/express : ^4.17.3\n        \n            @types/helmet : ^0.0.45\n        \n            @types/jest : ^24.0.25\n        \n            @types/joi : ^14.3.4\n        \n            @types/node : ^13.1.6\n        \n            @types/passport-jwt : ^3.0.3\n        \n            @types/supertest : ^2.0.8\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.0\n        \n            cross-env : ^6.0.3\n        \n            crypto : ^1.0.1\n        \n            dotenv : ^8.2.0\n        \n            express : ^4.17.1\n        \n            helmet : ^3.21.2\n        \n            husky : ^4.0.7\n        \n            jest : ^25.1.0\n        \n            joi : ^14.3.1\n        \n            lint-staged : ^9.5.0\n        \n            mongodb : ^3.4.1\n        \n            nodemon : ^2.0.2\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^7.17.1\n        \n            prettier : ^1.19.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.4\n        \n            supertest : ^4.0.2\n        \n            swagger-ui-express : ^4.1.3\n        \n            ts-jest : ^24.3.0\n        \n            ts-loader : ^6.2.1\n        \n            ts-node : ^8.6.1\n        \n            tsconfig-paths : ^3.9.0\n        \n            tslint : 5.20.1\n        \n            typeorm : ^0.2.24\n        \n            typescript : ^3.7.4\n        \n            webpack : ^4.41.5\n        \n            webpack-cli : ^3.3.10\n        \n            webpack-node-externals : ^1.7.2\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            acorn : ^7.1.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RequestStatus   (src/.../request-status.ts)\n                        \n                        \n                            ShoppingListStatus   (src/.../shopping-list-status.ts)\n                        \n                        \n                            UserRole   (src/.../user-role.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/request/request-status.ts\n    \n        \n            \n                \n                    \n                        \n                        RequestStatus\n                    \n                \n                        \n                            \n                                 NEW\n                            \n                        \n                        \n                            \n                                Value : new\n                            \n                        \n                        \n                            \n                                 ONGOING\n                            \n                        \n                        \n                            \n                                Value : ongoing\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    src/modules/shoppingList/shopping-list-status.ts\n    \n        \n            \n                \n                    \n                        \n                        ShoppingListStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : active\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : canceled\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    src/modules/user/user-role.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 HELPER\n                            \n                        \n                        \n                            \n                                Value : helper\n                            \n                        \n                        \n                            \n                                 SEEKER\n                            \n                        \n                        \n                            \n                                Value : seeker\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDependencies\n\nNodeJS\nDocker\nPostgreSQL Client\nsudo apt install postgresql postgresql-contrib\n\n\nYarn\n\nInstallation\nInstall dependencies\nyarnEnvironment Configuration\nCreate a .env file in the root folder\nConfigure PostgreSQL:\nsudo -i -u postgres # Switch over to the postgres account on your server by typing:\npsql -U postgres # type the default password, usually 'postgres'\ncreate user username with encrypted password 'secretpassword';\ncreate database dbname with owner username;\n\\l # dbname should appear with username as ownerthen ctrl + c to exit the shell, then try to connect withpsql -U username dbname (it will ask for your password)\nNext, in .env, set these vars:\n\nDATABASE_TYPE=postgresDATABASE_HOST=dbDATABASE_PORT=5432DATABASE_USERNAME=usernameDATABASE_PASSWORD=secretpasswordDATABASE_NAME=dbname\nJWT_SECRET=jwt_awesome_key\n\nCreate a copy of .env called .env.development and change these vars:\n\nDATABASE_HOST=localhost\nDATABASE_PORT=54321\n\nDocker\nTemporary Note\nTo spin up a docker container for local API development, following commands can be used.\nCreate the postgres docker volume:\ndocker volume create --name=pgdata\nRun the postgis image:\ndocker run -d --name postgres-nearbuy -p 5432:5432 -e POSTGRES_PASSWORD=secretpassword -e POSTGRES_DB=dbname -e POSTGRES_USER=username -v pgdata:/var/lib/postgresql/data postgis/postgis:12-2.5\n\nPostgres admin:\ndocker run --network nearbuy-backend_default -p 3010:80 -e 'PGADMIN_DEFAULT_EMAIL=user@domain.com' -e 'PGADMIN_DEFAULT_PASSWORD=SuperSecret' -d dpage/pgadmin4\nThat adds a pgadmin container to the docker network created by docker-compose. You can connect in there to the host \"db\" (if using defaults).\n\nTo mount the project with Docker, you can use yarn deploy:local (which executes docker-compose up)\nUsage\n# development\nyarn start\n\n# watch mode\nyarn start:dev\n\n# production mode\nyarn start:prodTest\n# unit tests\nyarn test\n\n# e2e tests\nyarn test:e2e\n\n# test coverage\nyarn test:covSwagger\nRESTful APIs you can describe with already integrated Swagger.\nTo see all available endpoints visit http://localhost:3000/api/docs\nTo get the endpoints in JSON format, visit http://localhost:3000/api/docs-json\nTypeORM\nTypeORM gives you possibility to use next db types:\nmysql, postgres, mariadb, sqlite, etc. Please look at docs for more details.\nWe have provided working example with sqlite, but you have possibility to change\nthis through ormconfig.json. By default you will get sqlite-example.sql file\ncreated in the root directory, but it's ignored by git.\nSeeding\nSee TypeORM-Fixtures\nAuthentication - JWT\nAlready preconfigured JWT authentication.\nIt's suggested to change current password hashing to something more secure.\nYou can start use already working implementation of Login and Registration\nendpoints, just take a look at http://localhost:3000/api/docs.\nSources\n\nTypeORM MongoDB Documentation\n\nGreat MongoDB tutorial\n\nAnother NestJS boilerplate\n\nTutorial to build NestJS API + MongoDB with Mongoose instead of TypeORM\n\nBasic Authentication with JSON Web Tokens and Passport\n\n... or this one better integrated with NestJS\n\nBoilerplate with expiration-based JWT tokens\n\nVariant using Basic auth with cookie in session\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2019 Toundra\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CallModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RequestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShoppingListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CallModule\n\n\n\ncluster_CallModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_RequestModule\n\n\n\ncluster_RequestModule_exports\n\n\n\ncluster_ShoppingListModule\n\n\n\ncluster_ShoppingListModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UsersModule\n\n\n\n\nAddressModel\n\nAddressModel\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressModel->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCallModule\n\nCallModule\n\nAppModule -->\n\nCallModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nRequestModule\n\nRequestModule\n\n\n\nShoppingListModule\n\nShoppingListModule\n\nShoppingListModule -->\n\nRequestModule->ShoppingListModule\n\n\n\nAppModule -->\n\nRequestModule->AppModule\n\n\n\n\n\nRequestService \n\nRequestService \n\nRequestService  -->\n\nRequestModule->RequestService \n\n\n\nAppModule -->\n\nShoppingListModule->AppModule\n\n\n\n\n\nShoppingListService \n\nShoppingListService \n\nShoppingListService  -->\n\nShoppingListModule->ShoppingListService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nRequestModule -->\n\nUserModule->RequestModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUserModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nArticlesService\n\nArticlesService\n\nAppModule -->\n\nArticlesService->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nArticlesService->UsersModule\n\n\n\n\n\nRequestService\n\nRequestService\n\nRequestModule -->\n\nRequestService->RequestModule\n\n\n\nAppModule -->\n\nRequestService->AppModule\n\n\n\n\n\nShoppingListService\n\nShoppingListService\n\nShoppingListModule -->\n\nShoppingListService->ShoppingListModule\n\n\n\nAppModule -->\n\nShoppingListService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUserModule -->\n\nUsersService->UserModule\n\n\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nCallService\n\nCallService\n\nCallModule -->\n\nCallService->CallModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    24 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            loggerMiddleware   (src/.../logger.middleware.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            ReqUser   (src/.../user.decorator.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            setupSwagger   (src/.../index.ts)\n                        \n                        \n                            SWAGGER_API_CURRENT_VERSION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_DESCRIPTION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_NAME   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_ROOT   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/common/middlewares/logger.middleware.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loggerMiddleware\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RequestHandler\n\n                        \n                    \n                    \n                        \n                            Default value : (request: any, response: any, next: NextFunction) => {\n  const {headers, method, query, params} = request;\n  const date = new Date().toJSON();\n  const time = date.replace('T', ' ').slice(0, -5);\n  const route = parse(request.url).path;\n  console.log(`${time} ~ ${method} ${route || '/'}`); // tslint:disable-line no-console\n  next();\n}\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/modules/common/decorators/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ReqUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, req: IRequestUser) => {\n  return req.user;\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/common/decorators/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: string[]) => SetMetadata('roles', roles)\n                        \n                    \n\n\n            \n        \n\n    src/swagger/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            setupSwagger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (app: INestApplication) => {\n  const options = new DocumentBuilder()\n    .setTitle(SWAGGER_API_NAME)\n    .setDescription(SWAGGER_API_DESCRIPTION)\n    .setVersion(SWAGGER_API_CURRENT_VERSION)\n    .addBearerAuth()\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup(SWAGGER_API_ROOT, app, document);\n}\n                        \n                    \n\n\n            \n        \n\n    src/swagger/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_CURRENT_VERSION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_DESCRIPTION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Simple API Description'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Simple API'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_ROOT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api/docs'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
